
PL360Firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000075e4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004075e4  004075e4  000175e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c8  20400000  004075ec  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000cb8  204009c8  00407fb4  000209c8  2**2
                  ALLOC
  4 .stack        00002000  20401680  00408c6c  000209c8  2**0
                  ALLOC
  5 .heap         00000200  20403680  0040ac6c  000209c8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209c8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209f6  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001c71d  00000000  00000000  00020a4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003cf1  00000000  00000000  0003d16c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c68  00000000  00000000  00040e5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000c50  00000000  00000000  00041ac5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001fcdc  00000000  00000000  00042715  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000fcb7  00000000  00000000  000623f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00086e50  00000000  00000000  000720a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002e0c  00000000  00000000  000f8ef8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    000065fc  00000000  00000000  000fbd04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	80 36 40 20 8d 13 40 00 89 13 40 00 89 13 40 00     .6@ ..@...@...@.
  400010:	89 13 40 00 89 13 40 00 89 13 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	89 13 40 00 89 13 40 00 00 00 00 00 89 13 40 00     ..@...@.......@.
  40003c:	25 06 40 00 89 13 40 00 89 13 40 00 89 13 40 00     %.@...@...@...@.
  40004c:	89 13 40 00 89 13 40 00 89 13 40 00 89 13 40 00     ..@...@...@...@.
  40005c:	89 13 40 00 89 13 40 00 00 00 00 00 31 0e 40 00     ..@...@.....1.@.
  40006c:	45 0e 40 00 00 00 00 00 6d 09 40 00 89 13 40 00     E.@.....m.@...@.
  40007c:	89 13 40 00 59 0e 40 00 00 00 00 00 89 13 40 00     ..@.Y.@.......@.
  40008c:	89 13 40 00 89 13 40 00 89 13 40 00 89 13 40 00     ..@...@...@...@.
  40009c:	89 13 40 00 cd 05 40 00 89 13 40 00 00 00 00 00     ..@...@...@.....
	...
  4000b4:	71 02 40 00 89 13 40 00 89 13 40 00 89 13 40 00     q.@...@...@...@.
  4000c4:	89 13 40 00 89 13 40 00 89 13 40 00 00 00 00 00     ..@...@...@.....
  4000d4:	89 13 40 00 00 00 00 00 89 13 40 00 85 02 40 00     ..@.......@...@.
  4000e4:	89 13 40 00 89 13 40 00 89 13 40 00 89 13 40 00     ..@...@...@...@.
  4000f4:	89 13 40 00 89 13 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  400104:	00 00 00 00 89 13 40 00 89 13 40 00 89 13 40 00     ......@...@...@.
	...
  400120:	89 13 40 00 89 13 40 00 89 13 40 00 89 13 40 00     ..@...@...@...@.
  400130:	89 13 40 00 00 00 00 00 00 00 00 00 89 13 40 00     ..@...........@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009c8 	.word	0x204009c8
  40015c:	00000000 	.word	0x00000000
  400160:	004075ec 	.word	0x004075ec

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	004075ec 	.word	0x004075ec
  4001a0:	204009cc 	.word	0x204009cc
  4001a4:	004075ec 	.word	0x004075ec
  4001a8:	00000000 	.word	0x00000000

004001ac <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  4001ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  4001b0:	b980      	cbnz	r0, 4001d4 <_read+0x28>
  4001b2:	460c      	mov	r4, r1
  4001b4:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  4001b6:	2a00      	cmp	r2, #0
  4001b8:	dd0f      	ble.n	4001da <_read+0x2e>
  4001ba:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  4001bc:	4e08      	ldr	r6, [pc, #32]	; (4001e0 <_read+0x34>)
  4001be:	4d09      	ldr	r5, [pc, #36]	; (4001e4 <_read+0x38>)
  4001c0:	6830      	ldr	r0, [r6, #0]
  4001c2:	4621      	mov	r1, r4
  4001c4:	682b      	ldr	r3, [r5, #0]
  4001c6:	4798      	blx	r3
		ptr++;
  4001c8:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  4001ca:	42bc      	cmp	r4, r7
  4001cc:	d1f8      	bne.n	4001c0 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  4001ce:	4640      	mov	r0, r8
  4001d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001d4:	f04f 38ff 	mov.w	r8, #4294967295
  4001d8:	e7f9      	b.n	4001ce <_read+0x22>
	for (; len > 0; --len) {
  4001da:	4680      	mov	r8, r0
  4001dc:	e7f7      	b.n	4001ce <_read+0x22>
  4001de:	bf00      	nop
  4001e0:	20401654 	.word	0x20401654
  4001e4:	204015cc 	.word	0x204015cc

004001e8 <afec_process_callback>:
 * \brief Call the callback function if the corresponding interrupt is asserted
 *
 * \param afec  Base address of the AFEC.
 */
static void afec_process_callback(Afec *const afec)
{
  4001e8:	b570      	push	{r4, r5, r6, lr}
  4001ea:	b082      	sub	sp, #8
 *
 * \return The interrupt status value.
 */
static inline uint32_t afec_get_interrupt_status(Afec *const afec)
{
	return afec->AFEC_ISR;
  4001ec:	6b02      	ldr	r2, [r0, #48]	; 0x30
 *
 * \return The interrupt mask value.
 */
static inline uint32_t afec_get_interrupt_mask(Afec *const afec)
{
	return afec->AFEC_IMR;
  4001ee:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
	volatile uint32_t status;
	uint32_t cnt, inst_num;

	status = afec_get_interrupt_status(afec) & afec_get_interrupt_mask(afec);
  4001f0:	4013      	ands	r3, r2
  4001f2:	9301      	str	r3, [sp, #4]
	inst_num = afec_find_inst_num(afec);

	for (cnt = 0; cnt < _AFEC_NUM_OF_INTERRUPT_SOURCE; cnt++) {
  4001f4:	2400      	movs	r4, #0
	if (afec_callback_pointer[inst_num][source]) {
  4001f6:	4e1c      	ldr	r6, [pc, #112]	; (400268 <afec_process_callback+0x80>)
  4001f8:	4d1c      	ldr	r5, [pc, #112]	; (40026c <afec_process_callback+0x84>)
  4001fa:	42a8      	cmp	r0, r5
  4001fc:	bf14      	ite	ne
  4001fe:	2000      	movne	r0, #0
  400200:	2001      	moveq	r0, #1
  400202:	0105      	lsls	r5, r0, #4
  400204:	e00b      	b.n	40021e <afec_process_callback+0x36>
		#elif defined __SAM4E8E__  || defined __SAM4E16E__ || SAMV71 || SAMV70 || SAMS70 || SAME70
			if (status & (1 << cnt)) {
				afec_interrupt(inst_num, (enum afec_interrupt_source)cnt);
			}
		#endif
		} else if (cnt < AFEC_INTERRUPT_TEMP_CHANGE) {
  400206:	2c0e      	cmp	r4, #14
  400208:	d81e      	bhi.n	400248 <afec_process_callback+0x60>
			if (status & (1 << (cnt + AFEC_INTERRUPT_GAP1))) {
  40020a:	9a01      	ldr	r2, [sp, #4]
  40020c:	f104 010c 	add.w	r1, r4, #12
  400210:	2301      	movs	r3, #1
  400212:	408b      	lsls	r3, r1
  400214:	4213      	tst	r3, r2
  400216:	d110      	bne.n	40023a <afec_process_callback+0x52>
	for (cnt = 0; cnt < _AFEC_NUM_OF_INTERRUPT_SOURCE; cnt++) {
  400218:	3401      	adds	r4, #1
  40021a:	2c10      	cmp	r4, #16
  40021c:	d022      	beq.n	400264 <afec_process_callback+0x7c>
		if (cnt < AFEC_INTERRUPT_DATA_READY) {
  40021e:	2c0b      	cmp	r4, #11
  400220:	d8f1      	bhi.n	400206 <afec_process_callback+0x1e>
			if (status & (1 << cnt)) {
  400222:	9a01      	ldr	r2, [sp, #4]
  400224:	2301      	movs	r3, #1
  400226:	40a3      	lsls	r3, r4
  400228:	4213      	tst	r3, r2
  40022a:	d0f5      	beq.n	400218 <afec_process_callback+0x30>
	if (afec_callback_pointer[inst_num][source]) {
  40022c:	192b      	adds	r3, r5, r4
  40022e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
  400232:	2b00      	cmp	r3, #0
  400234:	d0f0      	beq.n	400218 <afec_process_callback+0x30>
		afec_callback_pointer[inst_num][source]();
  400236:	4798      	blx	r3
  400238:	e7ee      	b.n	400218 <afec_process_callback+0x30>
	if (afec_callback_pointer[inst_num][source]) {
  40023a:	192b      	adds	r3, r5, r4
  40023c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
  400240:	2b00      	cmp	r3, #0
  400242:	d0e9      	beq.n	400218 <afec_process_callback+0x30>
		afec_callback_pointer[inst_num][source]();
  400244:	4798      	blx	r3
  400246:	e7e7      	b.n	400218 <afec_process_callback+0x30>
				afec_interrupt(inst_num, (enum afec_interrupt_source)cnt);
			}
		} else {
			if (status & (1 << (cnt + AFEC_INTERRUPT_GAP1 + AFEC_INTERRUPT_GAP2))) {
  400248:	9a01      	ldr	r2, [sp, #4]
  40024a:	f104 010f 	add.w	r1, r4, #15
  40024e:	2301      	movs	r3, #1
  400250:	408b      	lsls	r3, r1
  400252:	4213      	tst	r3, r2
  400254:	d0e0      	beq.n	400218 <afec_process_callback+0x30>
	if (afec_callback_pointer[inst_num][source]) {
  400256:	192b      	adds	r3, r5, r4
  400258:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
  40025c:	2b00      	cmp	r3, #0
  40025e:	d0db      	beq.n	400218 <afec_process_callback+0x30>
		afec_callback_pointer[inst_num][source]();
  400260:	4798      	blx	r3
  400262:	e7d9      	b.n	400218 <afec_process_callback+0x30>
				afec_interrupt(inst_num, (enum afec_interrupt_source)cnt);
			}
		}
	}
}
  400264:	b002      	add	sp, #8
  400266:	bd70      	pop	{r4, r5, r6, pc}
  400268:	204015d0 	.word	0x204015d0
  40026c:	40064000 	.word	0x40064000

00400270 <AFEC0_Handler>:

/**
 * \brief Interrupt handler for AFEC0.
 */
void AFEC0_Handler(void)
{
  400270:	b508      	push	{r3, lr}
	afec_process_callback(AFEC0);
  400272:	4802      	ldr	r0, [pc, #8]	; (40027c <AFEC0_Handler+0xc>)
  400274:	4b02      	ldr	r3, [pc, #8]	; (400280 <AFEC0_Handler+0x10>)
  400276:	4798      	blx	r3
  400278:	bd08      	pop	{r3, pc}
  40027a:	bf00      	nop
  40027c:	4003c000 	.word	0x4003c000
  400280:	004001e9 	.word	0x004001e9

00400284 <AFEC1_Handler>:

/**
 * \brief Interrupt handler for AFEC1.
 */
void AFEC1_Handler(void)
{
  400284:	b508      	push	{r3, lr}
	afec_process_callback(AFEC1);
  400286:	4802      	ldr	r0, [pc, #8]	; (400290 <AFEC1_Handler+0xc>)
  400288:	4b02      	ldr	r3, [pc, #8]	; (400294 <AFEC1_Handler+0x10>)
  40028a:	4798      	blx	r3
  40028c:	bd08      	pop	{r3, pc}
  40028e:	bf00      	nop
  400290:	40064000 	.word	0x40064000
  400294:	004001e9 	.word	0x004001e9

00400298 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400298:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  40029a:	4b07      	ldr	r3, [pc, #28]	; (4002b8 <spi_enable_clock+0x20>)
  40029c:	4298      	cmp	r0, r3
  40029e:	d003      	beq.n	4002a8 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4002a0:	4b06      	ldr	r3, [pc, #24]	; (4002bc <spi_enable_clock+0x24>)
  4002a2:	4298      	cmp	r0, r3
  4002a4:	d004      	beq.n	4002b0 <spi_enable_clock+0x18>
  4002a6:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4002a8:	2015      	movs	r0, #21
  4002aa:	4b05      	ldr	r3, [pc, #20]	; (4002c0 <spi_enable_clock+0x28>)
  4002ac:	4798      	blx	r3
  4002ae:	bd08      	pop	{r3, pc}
  4002b0:	202a      	movs	r0, #42	; 0x2a
  4002b2:	4b03      	ldr	r3, [pc, #12]	; (4002c0 <spi_enable_clock+0x28>)
  4002b4:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4002b6:	e7f6      	b.n	4002a6 <spi_enable_clock+0xe>
  4002b8:	40008000 	.word	0x40008000
  4002bc:	40058000 	.word	0x40058000
  4002c0:	00401089 	.word	0x00401089

004002c4 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4002c4:	6843      	ldr	r3, [r0, #4]
  4002c6:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4002ca:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4002cc:	6843      	ldr	r3, [r0, #4]
  4002ce:	0409      	lsls	r1, r1, #16
  4002d0:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4002d4:	4319      	orrs	r1, r3
  4002d6:	6041      	str	r1, [r0, #4]
  4002d8:	4770      	bx	lr

004002da <spi_read>:
 *
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_read(Spi *p_spi, uint16_t *us_data, uint8_t *p_pcs)
{
  4002da:	b410      	push	{r4}
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
  4002dc:	f643 2399 	movw	r3, #15001	; 0x3a99
  4002e0:	6904      	ldr	r4, [r0, #16]
  4002e2:	f014 0f01 	tst.w	r4, #1
  4002e6:	d103      	bne.n	4002f0 <spi_read+0x16>
		if (!timeout--) {
  4002e8:	3b01      	subs	r3, #1
  4002ea:	d1f9      	bne.n	4002e0 <spi_read+0x6>
			return SPI_ERROR_TIMEOUT;
  4002ec:	2001      	movs	r0, #1
  4002ee:	e009      	b.n	400304 <spi_read+0x2a>
		}
	}

	reg_value = p_spi->SPI_RDR;
  4002f0:	6883      	ldr	r3, [r0, #8]
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4002f2:	6840      	ldr	r0, [r0, #4]
	if (spi_get_peripheral_select_mode(p_spi)) {
  4002f4:	f010 0f02 	tst.w	r0, #2
  4002f8:	d002      	beq.n	400300 <spi_read+0x26>
		*p_pcs = (uint8_t) ((reg_value & SPI_RDR_PCS_Msk) >> SPI_RDR_PCS_Pos);
  4002fa:	f3c3 4003 	ubfx	r0, r3, #16, #4
  4002fe:	7010      	strb	r0, [r2, #0]
	}
	*us_data = (uint16_t) (reg_value & SPI_RDR_RD_Msk);
  400300:	800b      	strh	r3, [r1, #0]

	return SPI_OK;
  400302:	2000      	movs	r0, #0
}
  400304:	f85d 4b04 	ldr.w	r4, [sp], #4
  400308:	4770      	bx	lr

0040030a <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  40030a:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  40030c:	f643 2499 	movw	r4, #15001	; 0x3a99
  400310:	6905      	ldr	r5, [r0, #16]
  400312:	f015 0f02 	tst.w	r5, #2
  400316:	d103      	bne.n	400320 <spi_write+0x16>
		if (!timeout--) {
  400318:	3c01      	subs	r4, #1
  40031a:	d1f9      	bne.n	400310 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  40031c:	2001      	movs	r0, #1
  40031e:	e00c      	b.n	40033a <spi_write+0x30>
  400320:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400322:	f014 0f02 	tst.w	r4, #2
  400326:	d006      	beq.n	400336 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  400328:	0412      	lsls	r2, r2, #16
  40032a:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  40032e:	4311      	orrs	r1, r2
		if (uc_last) {
  400330:	b10b      	cbz	r3, 400336 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400332:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  400336:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  400338:	2000      	movs	r0, #0
}
  40033a:	bc30      	pop	{r4, r5}
  40033c:	4770      	bx	lr

0040033e <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  40033e:	b932      	cbnz	r2, 40034e <spi_set_clock_polarity+0x10>
  400340:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400344:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400346:	f023 0301 	bic.w	r3, r3, #1
  40034a:	6303      	str	r3, [r0, #48]	; 0x30
  40034c:	4770      	bx	lr
  40034e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400352:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400354:	f043 0301 	orr.w	r3, r3, #1
  400358:	6303      	str	r3, [r0, #48]	; 0x30
  40035a:	4770      	bx	lr

0040035c <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  40035c:	b932      	cbnz	r2, 40036c <spi_set_clock_phase+0x10>
  40035e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400362:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400364:	f023 0302 	bic.w	r3, r3, #2
  400368:	6303      	str	r3, [r0, #48]	; 0x30
  40036a:	4770      	bx	lr
  40036c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400370:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400372:	f043 0302 	orr.w	r3, r3, #2
  400376:	6303      	str	r3, [r0, #48]	; 0x30
  400378:	4770      	bx	lr

0040037a <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40037a:	2a04      	cmp	r2, #4
  40037c:	d003      	beq.n	400386 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  40037e:	b16a      	cbz	r2, 40039c <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400380:	2a08      	cmp	r2, #8
  400382:	d016      	beq.n	4003b2 <spi_configure_cs_behavior+0x38>
  400384:	4770      	bx	lr
  400386:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40038a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40038c:	f023 0308 	bic.w	r3, r3, #8
  400390:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400392:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400394:	f043 0304 	orr.w	r3, r3, #4
  400398:	6303      	str	r3, [r0, #48]	; 0x30
  40039a:	4770      	bx	lr
  40039c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4003a0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4003a2:	f023 0308 	bic.w	r3, r3, #8
  4003a6:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4003a8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4003aa:	f023 0304 	bic.w	r3, r3, #4
  4003ae:	6303      	str	r3, [r0, #48]	; 0x30
  4003b0:	4770      	bx	lr
  4003b2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  4003b6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4003b8:	f043 0308 	orr.w	r3, r3, #8
  4003bc:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4003be:	e7e1      	b.n	400384 <spi_configure_cs_behavior+0xa>

004003c0 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4003c0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4003c4:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4003c6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4003ca:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  4003cc:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4003ce:	431a      	orrs	r2, r3
  4003d0:	630a      	str	r2, [r1, #48]	; 0x30
  4003d2:	4770      	bx	lr

004003d4 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider) {
  4003d4:	b17a      	cbz	r2, 4003f6 <spi_set_baudrate_div+0x22>
{
  4003d6:	b410      	push	{r4}
  4003d8:	4614      	mov	r4, r2
  4003da:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;
    }
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  4003de:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4003e0:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4003e4:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4003e6:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4003e8:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4003ec:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4003ee:	2000      	movs	r0, #0
}
  4003f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  4003f4:	4770      	bx	lr
        return -1;
  4003f6:	f04f 30ff 	mov.w	r0, #4294967295
  4003fa:	4770      	bx	lr

004003fc <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
  4003fc:	b410      	push	{r4}
  4003fe:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
  400402:	6b08      	ldr	r0, [r1, #48]	; 0x30
  400404:	b280      	uxth	r0, r0
  400406:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  400408:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  40040a:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  40040e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  400412:	630b      	str	r3, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
}
  400414:	f85d 4b04 	ldr.w	r4, [sp], #4
  400418:	4770      	bx	lr
	...

0040041c <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  40041c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40041e:	b083      	sub	sp, #12
  400420:	4605      	mov	r5, r0
  400422:	460c      	mov	r4, r1
	uint32_t val = 0;
  400424:	2300      	movs	r3, #0
  400426:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400428:	4b2a      	ldr	r3, [pc, #168]	; (4004d4 <usart_serial_getchar+0xb8>)
  40042a:	4298      	cmp	r0, r3
  40042c:	d013      	beq.n	400456 <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  40042e:	4b2a      	ldr	r3, [pc, #168]	; (4004d8 <usart_serial_getchar+0xbc>)
  400430:	4298      	cmp	r0, r3
  400432:	d018      	beq.n	400466 <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  400434:	4b29      	ldr	r3, [pc, #164]	; (4004dc <usart_serial_getchar+0xc0>)
  400436:	4298      	cmp	r0, r3
  400438:	d01d      	beq.n	400476 <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  40043a:	4b29      	ldr	r3, [pc, #164]	; (4004e0 <usart_serial_getchar+0xc4>)
  40043c:	429d      	cmp	r5, r3
  40043e:	d022      	beq.n	400486 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400440:	4b28      	ldr	r3, [pc, #160]	; (4004e4 <usart_serial_getchar+0xc8>)
  400442:	429d      	cmp	r5, r3
  400444:	d027      	beq.n	400496 <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400446:	4b28      	ldr	r3, [pc, #160]	; (4004e8 <usart_serial_getchar+0xcc>)
  400448:	429d      	cmp	r5, r3
  40044a:	d02e      	beq.n	4004aa <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  40044c:	4b27      	ldr	r3, [pc, #156]	; (4004ec <usart_serial_getchar+0xd0>)
  40044e:	429d      	cmp	r5, r3
  400450:	d035      	beq.n	4004be <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400452:	b003      	add	sp, #12
  400454:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400456:	461f      	mov	r7, r3
  400458:	4e25      	ldr	r6, [pc, #148]	; (4004f0 <usart_serial_getchar+0xd4>)
  40045a:	4621      	mov	r1, r4
  40045c:	4638      	mov	r0, r7
  40045e:	47b0      	blx	r6
  400460:	2800      	cmp	r0, #0
  400462:	d1fa      	bne.n	40045a <usart_serial_getchar+0x3e>
  400464:	e7e9      	b.n	40043a <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  400466:	461f      	mov	r7, r3
  400468:	4e21      	ldr	r6, [pc, #132]	; (4004f0 <usart_serial_getchar+0xd4>)
  40046a:	4621      	mov	r1, r4
  40046c:	4638      	mov	r0, r7
  40046e:	47b0      	blx	r6
  400470:	2800      	cmp	r0, #0
  400472:	d1fa      	bne.n	40046a <usart_serial_getchar+0x4e>
  400474:	e7e4      	b.n	400440 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  400476:	461f      	mov	r7, r3
  400478:	4e1d      	ldr	r6, [pc, #116]	; (4004f0 <usart_serial_getchar+0xd4>)
  40047a:	4621      	mov	r1, r4
  40047c:	4638      	mov	r0, r7
  40047e:	47b0      	blx	r6
  400480:	2800      	cmp	r0, #0
  400482:	d1fa      	bne.n	40047a <usart_serial_getchar+0x5e>
  400484:	e7df      	b.n	400446 <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  400486:	461f      	mov	r7, r3
  400488:	4e19      	ldr	r6, [pc, #100]	; (4004f0 <usart_serial_getchar+0xd4>)
  40048a:	4621      	mov	r1, r4
  40048c:	4638      	mov	r0, r7
  40048e:	47b0      	blx	r6
  400490:	2800      	cmp	r0, #0
  400492:	d1fa      	bne.n	40048a <usart_serial_getchar+0x6e>
  400494:	e7da      	b.n	40044c <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  400496:	461e      	mov	r6, r3
  400498:	4d16      	ldr	r5, [pc, #88]	; (4004f4 <usart_serial_getchar+0xd8>)
  40049a:	a901      	add	r1, sp, #4
  40049c:	4630      	mov	r0, r6
  40049e:	47a8      	blx	r5
  4004a0:	2800      	cmp	r0, #0
  4004a2:	d1fa      	bne.n	40049a <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  4004a4:	9b01      	ldr	r3, [sp, #4]
  4004a6:	7023      	strb	r3, [r4, #0]
  4004a8:	e7d3      	b.n	400452 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  4004aa:	461e      	mov	r6, r3
  4004ac:	4d11      	ldr	r5, [pc, #68]	; (4004f4 <usart_serial_getchar+0xd8>)
  4004ae:	a901      	add	r1, sp, #4
  4004b0:	4630      	mov	r0, r6
  4004b2:	47a8      	blx	r5
  4004b4:	2800      	cmp	r0, #0
  4004b6:	d1fa      	bne.n	4004ae <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  4004b8:	9b01      	ldr	r3, [sp, #4]
  4004ba:	7023      	strb	r3, [r4, #0]
  4004bc:	e7c9      	b.n	400452 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  4004be:	461e      	mov	r6, r3
  4004c0:	4d0c      	ldr	r5, [pc, #48]	; (4004f4 <usart_serial_getchar+0xd8>)
  4004c2:	a901      	add	r1, sp, #4
  4004c4:	4630      	mov	r0, r6
  4004c6:	47a8      	blx	r5
  4004c8:	2800      	cmp	r0, #0
  4004ca:	d1fa      	bne.n	4004c2 <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  4004cc:	9b01      	ldr	r3, [sp, #4]
  4004ce:	7023      	strb	r3, [r4, #0]
}
  4004d0:	e7bf      	b.n	400452 <usart_serial_getchar+0x36>
  4004d2:	bf00      	nop
  4004d4:	400e0800 	.word	0x400e0800
  4004d8:	400e0a00 	.word	0x400e0a00
  4004dc:	400e1a00 	.word	0x400e1a00
  4004e0:	400e1c00 	.word	0x400e1c00
  4004e4:	40024000 	.word	0x40024000
  4004e8:	40028000 	.word	0x40028000
  4004ec:	4002c000 	.word	0x4002c000
  4004f0:	00401159 	.word	0x00401159
  4004f4:	00400e87 	.word	0x00400e87

004004f8 <usart_serial_putchar>:
{
  4004f8:	b570      	push	{r4, r5, r6, lr}
  4004fa:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  4004fc:	4b2a      	ldr	r3, [pc, #168]	; (4005a8 <usart_serial_putchar+0xb0>)
  4004fe:	4298      	cmp	r0, r3
  400500:	d013      	beq.n	40052a <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  400502:	4b2a      	ldr	r3, [pc, #168]	; (4005ac <usart_serial_putchar+0xb4>)
  400504:	4298      	cmp	r0, r3
  400506:	d019      	beq.n	40053c <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  400508:	4b29      	ldr	r3, [pc, #164]	; (4005b0 <usart_serial_putchar+0xb8>)
  40050a:	4298      	cmp	r0, r3
  40050c:	d01f      	beq.n	40054e <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  40050e:	4b29      	ldr	r3, [pc, #164]	; (4005b4 <usart_serial_putchar+0xbc>)
  400510:	4298      	cmp	r0, r3
  400512:	d025      	beq.n	400560 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  400514:	4b28      	ldr	r3, [pc, #160]	; (4005b8 <usart_serial_putchar+0xc0>)
  400516:	4298      	cmp	r0, r3
  400518:	d02b      	beq.n	400572 <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  40051a:	4b28      	ldr	r3, [pc, #160]	; (4005bc <usart_serial_putchar+0xc4>)
  40051c:	4298      	cmp	r0, r3
  40051e:	d031      	beq.n	400584 <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  400520:	4b27      	ldr	r3, [pc, #156]	; (4005c0 <usart_serial_putchar+0xc8>)
  400522:	4298      	cmp	r0, r3
  400524:	d037      	beq.n	400596 <usart_serial_putchar+0x9e>
	return 0;
  400526:	2000      	movs	r0, #0
}
  400528:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40052a:	461e      	mov	r6, r3
  40052c:	4d25      	ldr	r5, [pc, #148]	; (4005c4 <usart_serial_putchar+0xcc>)
  40052e:	4621      	mov	r1, r4
  400530:	4630      	mov	r0, r6
  400532:	47a8      	blx	r5
  400534:	2800      	cmp	r0, #0
  400536:	d1fa      	bne.n	40052e <usart_serial_putchar+0x36>
		return 1;
  400538:	2001      	movs	r0, #1
  40053a:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40053c:	461e      	mov	r6, r3
  40053e:	4d21      	ldr	r5, [pc, #132]	; (4005c4 <usart_serial_putchar+0xcc>)
  400540:	4621      	mov	r1, r4
  400542:	4630      	mov	r0, r6
  400544:	47a8      	blx	r5
  400546:	2800      	cmp	r0, #0
  400548:	d1fa      	bne.n	400540 <usart_serial_putchar+0x48>
		return 1;
  40054a:	2001      	movs	r0, #1
  40054c:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40054e:	461e      	mov	r6, r3
  400550:	4d1c      	ldr	r5, [pc, #112]	; (4005c4 <usart_serial_putchar+0xcc>)
  400552:	4621      	mov	r1, r4
  400554:	4630      	mov	r0, r6
  400556:	47a8      	blx	r5
  400558:	2800      	cmp	r0, #0
  40055a:	d1fa      	bne.n	400552 <usart_serial_putchar+0x5a>
		return 1;
  40055c:	2001      	movs	r0, #1
  40055e:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400560:	461e      	mov	r6, r3
  400562:	4d18      	ldr	r5, [pc, #96]	; (4005c4 <usart_serial_putchar+0xcc>)
  400564:	4621      	mov	r1, r4
  400566:	4630      	mov	r0, r6
  400568:	47a8      	blx	r5
  40056a:	2800      	cmp	r0, #0
  40056c:	d1fa      	bne.n	400564 <usart_serial_putchar+0x6c>
		return 1;
  40056e:	2001      	movs	r0, #1
  400570:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400572:	461e      	mov	r6, r3
  400574:	4d14      	ldr	r5, [pc, #80]	; (4005c8 <usart_serial_putchar+0xd0>)
  400576:	4621      	mov	r1, r4
  400578:	4630      	mov	r0, r6
  40057a:	47a8      	blx	r5
  40057c:	2800      	cmp	r0, #0
  40057e:	d1fa      	bne.n	400576 <usart_serial_putchar+0x7e>
		return 1;
  400580:	2001      	movs	r0, #1
  400582:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400584:	461e      	mov	r6, r3
  400586:	4d10      	ldr	r5, [pc, #64]	; (4005c8 <usart_serial_putchar+0xd0>)
  400588:	4621      	mov	r1, r4
  40058a:	4630      	mov	r0, r6
  40058c:	47a8      	blx	r5
  40058e:	2800      	cmp	r0, #0
  400590:	d1fa      	bne.n	400588 <usart_serial_putchar+0x90>
		return 1;
  400592:	2001      	movs	r0, #1
  400594:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400596:	461e      	mov	r6, r3
  400598:	4d0b      	ldr	r5, [pc, #44]	; (4005c8 <usart_serial_putchar+0xd0>)
  40059a:	4621      	mov	r1, r4
  40059c:	4630      	mov	r0, r6
  40059e:	47a8      	blx	r5
  4005a0:	2800      	cmp	r0, #0
  4005a2:	d1fa      	bne.n	40059a <usart_serial_putchar+0xa2>
		return 1;
  4005a4:	2001      	movs	r0, #1
  4005a6:	bd70      	pop	{r4, r5, r6, pc}
  4005a8:	400e0800 	.word	0x400e0800
  4005ac:	400e0a00 	.word	0x400e0a00
  4005b0:	400e1a00 	.word	0x400e1a00
  4005b4:	400e1c00 	.word	0x400e1c00
  4005b8:	40024000 	.word	0x40024000
  4005bc:	40028000 	.word	0x40028000
  4005c0:	4002c000 	.word	0x4002c000
  4005c4:	00401147 	.word	0x00401147
  4005c8:	00400e71 	.word	0x00400e71

004005cc <TC1_Handler>:

/**
 * \brief Interrupt handler for Timer 3
 */
void TC_1MS_Handler(void)
{
  4005cc:	b508      	push	{r3, lr}
	/* Clear status bit to acknowledge interrupt */
	tc_get_status(TC_1MS, TC_1MS_CHN);
  4005ce:	2101      	movs	r1, #1
  4005d0:	480e      	ldr	r0, [pc, #56]	; (40060c <TC1_Handler+0x40>)
  4005d2:	4b0f      	ldr	r3, [pc, #60]	; (400610 <TC1_Handler+0x44>)
  4005d4:	4798      	blx	r3

	/* Update ms counter to blink led 0 */
	if (!sul_count_ms--) {
  4005d6:	4b0f      	ldr	r3, [pc, #60]	; (400614 <TC1_Handler+0x48>)
  4005d8:	681b      	ldr	r3, [r3, #0]
  4005da:	b16b      	cbz	r3, 4005f8 <TC1_Handler+0x2c>
  4005dc:	3b01      	subs	r3, #1
  4005de:	4a0d      	ldr	r2, [pc, #52]	; (400614 <TC1_Handler+0x48>)
  4005e0:	6013      	str	r3, [r2, #0]
		sul_count_ms = COUNT_MS_SWAP_LED;
		suc_led_swap++;
	}

	/* Update ms counter to blink led 1 when a PLC message is received */
	if (sul_ind_count_ms) {
  4005e2:	4b0d      	ldr	r3, [pc, #52]	; (400618 <TC1_Handler+0x4c>)
  4005e4:	681b      	ldr	r3, [r3, #0]
  4005e6:	b113      	cbz	r3, 4005ee <TC1_Handler+0x22>
		if (!--sul_ind_count_ms) {
  4005e8:	3b01      	subs	r3, #1
  4005ea:	4a0b      	ldr	r2, [pc, #44]	; (400618 <TC1_Handler+0x4c>)
  4005ec:	6013      	str	r3, [r2, #0]
			sb_ind_led_swap = true;
		}
	}

	/* One ms counter, used to track transmission speeds */
	one_ms_cnt++;
  4005ee:	4a0b      	ldr	r2, [pc, #44]	; (40061c <TC1_Handler+0x50>)
  4005f0:	6813      	ldr	r3, [r2, #0]
  4005f2:	3301      	adds	r3, #1
  4005f4:	6013      	str	r3, [r2, #0]
  4005f6:	bd08      	pop	{r3, pc}
		sul_count_ms = COUNT_MS_SWAP_LED;
  4005f8:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
  4005fc:	4b05      	ldr	r3, [pc, #20]	; (400614 <TC1_Handler+0x48>)
  4005fe:	601a      	str	r2, [r3, #0]
		suc_led_swap++;
  400600:	4a07      	ldr	r2, [pc, #28]	; (400620 <TC1_Handler+0x54>)
  400602:	7813      	ldrb	r3, [r2, #0]
  400604:	3301      	adds	r3, #1
  400606:	7013      	strb	r3, [r2, #0]
  400608:	e7eb      	b.n	4005e2 <TC1_Handler+0x16>
  40060a:	bf00      	nop
  40060c:	4000c000 	.word	0x4000c000
  400610:	0040110f 	.word	0x0040110f
  400614:	2040000c 	.word	0x2040000c
  400618:	204009f0 	.word	0x204009f0
  40061c:	204009e8 	.word	0x204009e8
  400620:	204009ed 	.word	0x204009ed

00400624 <SysTick_Handler>:
 * \brief SysTick_Handler implementation
 */
volatile uint32_t g_ul_ms_ticks = 0;
void SysTick_Handler(void)
{
    g_ul_ms_ticks++;
  400624:	4a02      	ldr	r2, [pc, #8]	; (400630 <SysTick_Handler+0xc>)
  400626:	6813      	ldr	r3, [r2, #0]
  400628:	3301      	adds	r3, #1
  40062a:	6013      	str	r3, [r2, #0]
  40062c:	4770      	bx	lr
  40062e:	bf00      	nop
  400630:	204009e4 	.word	0x204009e4

00400634 <main>:

/**
 * \brief Main code entry point.
 */
int main(void)
{
  400634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400638:	b086      	sub	sp, #24
	sysclk_init();
  40063a:	4b68      	ldr	r3, [pc, #416]	; (4007dc <main+0x1a8>)
  40063c:	4798      	blx	r3
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
  40063e:	4e68      	ldr	r6, [pc, #416]	; (4007e0 <main+0x1ac>)
  400640:	68f2      	ldr	r2, [r6, #12]
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
  400642:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
  400646:	0412      	lsls	r2, r2, #16
  400648:	0c12      	lsrs	r2, r2, #16
  reg_value  =  (reg_value                                 |
  40064a:	4b66      	ldr	r3, [pc, #408]	; (4007e4 <main+0x1b0>)
  40064c:	4313      	orrs	r3, r2
                ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8));                                     /* Insert write key and priorty group */
  SCB->AIRCR =  reg_value;
  40064e:	60f3      	str	r3, [r6, #12]
	board_init();
  400650:	4b65      	ldr	r3, [pc, #404]	; (4007e8 <main+0x1b4>)
  400652:	4798      	blx	r3
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  400654:	4b65      	ldr	r3, [pc, #404]	; (4007ec <main+0x1b8>)
  400656:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  400658:	f3c3 4340 	ubfx	r3, r3, #17, #1
	/* Prepare the hardware */
    prvSetupHardware();
   
    /* Determine hardware role via hardware pin strapping */
	role = ioport_get_pin_level(CTRL_NDEV);
  40065c:	4a64      	ldr	r2, [pc, #400]	; (4007f0 <main+0x1bc>)
  40065e:	7013      	strb	r3, [r2, #0]
	pmc_enable_periph_clk(ID_TC_1MS);
  400660:	2018      	movs	r0, #24
  400662:	4f64      	ldr	r7, [pc, #400]	; (4007f4 <main+0x1c0>)
  400664:	47b8      	blx	r7
	tc_init(TC_1MS, TC_1MS_CHN, ul_tcclks | TC_CMR_CPCTRG);
  400666:	4c64      	ldr	r4, [pc, #400]	; (4007f8 <main+0x1c4>)
  400668:	f244 0203 	movw	r2, #16387	; 0x4003
  40066c:	2101      	movs	r1, #1
  40066e:	4620      	mov	r0, r4
  400670:	4b62      	ldr	r3, [pc, #392]	; (4007fc <main+0x1c8>)
  400672:	4798      	blx	r3
	tc_write_rc(TC_1MS, TC_1MS_CHN, ul_div);
  400674:	f240 4294 	movw	r2, #1172	; 0x494
  400678:	2101      	movs	r1, #1
  40067a:	4620      	mov	r0, r4
  40067c:	4b60      	ldr	r3, [pc, #384]	; (400800 <main+0x1cc>)
  40067e:	4798      	blx	r3
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  400680:	4b60      	ldr	r3, [pc, #384]	; (400804 <main+0x1d0>)
  400682:	2500      	movs	r5, #0
  400684:	f883 5318 	strb.w	r5, [r3, #792]	; 0x318
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400688:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  40068c:	601a      	str	r2, [r3, #0]
	tc_enable_interrupt(TC_1MS, TC_1MS_CHN, TC_IER_CPCS);
  40068e:	2210      	movs	r2, #16
  400690:	2101      	movs	r1, #1
  400692:	4620      	mov	r0, r4
  400694:	4b5c      	ldr	r3, [pc, #368]	; (400808 <main+0x1d4>)
  400696:	4798      	blx	r3
	tc_start(TC_1MS, TC_1MS_CHN);
  400698:	2101      	movs	r1, #1
  40069a:	4620      	mov	r0, r4
  40069c:	4b5b      	ldr	r3, [pc, #364]	; (40080c <main+0x1d8>)
  40069e:	4798      	blx	r3
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  4006a0:	4b5b      	ldr	r3, [pc, #364]	; (400810 <main+0x1dc>)
  4006a2:	4a5c      	ldr	r2, [pc, #368]	; (400814 <main+0x1e0>)
  4006a4:	605a      	str	r2, [r3, #4]
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  4006a6:	22e0      	movs	r2, #224	; 0xe0
  4006a8:	f886 2023 	strb.w	r2, [r6, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
  4006ac:	609d      	str	r5, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
  4006ae:	2607      	movs	r6, #7
  4006b0:	601e      	str	r6, [r3, #0]
  4006b2:	4630      	mov	r0, r6
  4006b4:	47b8      	blx	r7
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4006b6:	f504 2454 	add.w	r4, r4, #868352	; 0xd4000
  4006ba:	f504 6400 	add.w	r4, r4, #2048	; 0x800
  4006be:	4b56      	ldr	r3, [pc, #344]	; (400818 <main+0x1e4>)
  4006c0:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4006c2:	4a56      	ldr	r2, [pc, #344]	; (40081c <main+0x1e8>)
  4006c4:	4b56      	ldr	r3, [pc, #344]	; (400820 <main+0x1ec>)
  4006c6:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4006c8:	4a56      	ldr	r2, [pc, #344]	; (400824 <main+0x1f0>)
  4006ca:	4b57      	ldr	r3, [pc, #348]	; (400828 <main+0x1f4>)
  4006cc:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  4006ce:	4b57      	ldr	r3, [pc, #348]	; (40082c <main+0x1f8>)
  4006d0:	9302      	str	r3, [sp, #8]
	uart_settings.ul_baudrate = opt->baudrate;
  4006d2:	f44f 2361 	mov.w	r3, #921600	; 0xe1000
  4006d6:	9303      	str	r3, [sp, #12]
	uart_settings.ul_mode = opt->paritytype;
  4006d8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4006dc:	9304      	str	r3, [sp, #16]
  4006de:	4630      	mov	r0, r6
  4006e0:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  4006e2:	a902      	add	r1, sp, #8
  4006e4:	4620      	mov	r0, r4
  4006e6:	4b52      	ldr	r3, [pc, #328]	; (400830 <main+0x1fc>)
  4006e8:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  4006ea:	4f52      	ldr	r7, [pc, #328]	; (400834 <main+0x200>)
  4006ec:	683b      	ldr	r3, [r7, #0]
  4006ee:	4629      	mov	r1, r5
  4006f0:	6898      	ldr	r0, [r3, #8]
  4006f2:	4c51      	ldr	r4, [pc, #324]	; (400838 <main+0x204>)
  4006f4:	47a0      	blx	r4
	setbuf(stdin, NULL);
  4006f6:	683b      	ldr	r3, [r7, #0]
  4006f8:	4629      	mov	r1, r5
  4006fa:	6858      	ldr	r0, [r3, #4]
  4006fc:	47a0      	blx	r4
        while (1);
    }

	/* Initialize UART debug */
	configure_dbg_console();
	puts(STRING_HEADER);
  4006fe:	484f      	ldr	r0, [pc, #316]	; (40083c <main+0x208>)
  400700:	4b4f      	ldr	r3, [pc, #316]	; (400840 <main+0x20c>)
  400702:	4798      	blx	r3
    if (ul_cpuhz % gs_ul_pplc_clock) {
        uc_div++;
    }

    /* Enable SPI peripheral. */
    spi_enable_clock(PPLC_SPI_MODULE);
  400704:	4c4f      	ldr	r4, [pc, #316]	; (400844 <main+0x210>)
  400706:	4620      	mov	r0, r4
  400708:	4b4f      	ldr	r3, [pc, #316]	; (400848 <main+0x214>)
  40070a:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  40070c:	2302      	movs	r3, #2
  40070e:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400710:	2380      	movs	r3, #128	; 0x80
  400712:	6023      	str	r3, [r4, #0]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400714:	6863      	ldr	r3, [r4, #4]
  400716:	f043 0301 	orr.w	r3, r3, #1
  40071a:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40071c:	6863      	ldr	r3, [r4, #4]
  40071e:	f043 0310 	orr.w	r3, r3, #16
  400722:	6063      	str	r3, [r4, #4]

    /* Configure SPI */
    //spi_set_lastxfer(PPLC_SPI_MODULE);
    spi_set_master_mode(PPLC_SPI_MODULE);
    spi_disable_mode_fault_detect(PPLC_SPI_MODULE);
    spi_set_peripheral_chip_select_value(PPLC_SPI_MODULE, PPLC_PCS);
  400724:	4631      	mov	r1, r6
  400726:	4620      	mov	r0, r4
  400728:	4b48      	ldr	r3, [pc, #288]	; (40084c <main+0x218>)
  40072a:	4798      	blx	r3
    spi_set_clock_polarity(PPLC_SPI_MODULE, PPLC_CS, 0);
  40072c:	462a      	mov	r2, r5
  40072e:	2103      	movs	r1, #3
  400730:	4620      	mov	r0, r4
  400732:	4b47      	ldr	r3, [pc, #284]	; (400850 <main+0x21c>)
  400734:	4798      	blx	r3
    spi_set_clock_phase(PPLC_SPI_MODULE, PPLC_CS, 1);
  400736:	2201      	movs	r2, #1
  400738:	2103      	movs	r1, #3
  40073a:	4620      	mov	r0, r4
  40073c:	4b45      	ldr	r3, [pc, #276]	; (400854 <main+0x220>)
  40073e:	4798      	blx	r3
    spi_set_bits_per_transfer(PPLC_SPI_MODULE, PPLC_CS, SPI_CSR_BITS_8_BIT);
  400740:	462a      	mov	r2, r5
  400742:	2103      	movs	r1, #3
  400744:	4620      	mov	r0, r4
  400746:	4b44      	ldr	r3, [pc, #272]	; (400858 <main+0x224>)
  400748:	4798      	blx	r3
    spi_set_baudrate_div(PPLC_SPI_MODULE, PPLC_CS, 500);
  40074a:	22f4      	movs	r2, #244	; 0xf4
  40074c:	2103      	movs	r1, #3
  40074e:	4620      	mov	r0, r4
  400750:	4b42      	ldr	r3, [pc, #264]	; (40085c <main+0x228>)
  400752:	4798      	blx	r3
    spi_set_transfer_delay(PPLC_SPI_MODULE, PPLC_CS, PPLC_DLYBS, PPLC_DLYBCT);
  400754:	462b      	mov	r3, r5
  400756:	2201      	movs	r2, #1
  400758:	2103      	movs	r1, #3
  40075a:	4620      	mov	r0, r4
  40075c:	4e40      	ldr	r6, [pc, #256]	; (400860 <main+0x22c>)
  40075e:	47b0      	blx	r6
    spi_configure_cs_behavior(PPLC_SPI_MODULE, PPLC_CS, SPI_CS_RISE_NO_TX);
  400760:	462a      	mov	r2, r5
  400762:	2103      	movs	r1, #3
  400764:	4620      	mov	r0, r4
  400766:	4b3f      	ldr	r3, [pc, #252]	; (400864 <main+0x230>)
  400768:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  40076a:	2301      	movs	r3, #1
  40076c:	6023      	str	r3, [r4, #0]
    spi_enable(PPLC_SPI_MODULE);
    
    
    uint8_t testData[2] = {0, 0};
  40076e:	f88d 5014 	strb.w	r5, [sp, #20]
  400772:	f88d 5015 	strb.w	r5, [sp, #21]
    
    while (1) {
        char charVal = getchar();
  400776:	463c      	mov	r4, r7
  400778:	4f3b      	ldr	r7, [pc, #236]	; (400868 <main+0x234>)
                
        if (charVal == 'x') {
            printf("\r\nTurn IR on!\r\n");  
  40077a:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 400874 <main+0x240>
  40077e:	4e30      	ldr	r6, [pc, #192]	; (400840 <main+0x20c>)
            testData[0] = 0x01;
            writeZBoard(SPI_COM, 0x00, 0x00, testData, 2);             
  400780:	4d3a      	ldr	r5, [pc, #232]	; (40086c <main+0x238>)
  400782:	e00f      	b.n	4007a4 <main+0x170>
        char charVal = getchar();
  400784:	6841      	ldr	r1, [r0, #4]
  400786:	47b8      	blx	r7
  400788:	b2c0      	uxtb	r0, r0
  40078a:	e017      	b.n	4007bc <main+0x188>
            printf("\r\nTurn IR on!\r\n");  
  40078c:	4640      	mov	r0, r8
  40078e:	47b0      	blx	r6
            testData[0] = 0x01;
  400790:	ab06      	add	r3, sp, #24
  400792:	2201      	movs	r2, #1
  400794:	f803 2d04 	strb.w	r2, [r3, #-4]!
            writeZBoard(SPI_COM, 0x00, 0x00, testData, 2);             
  400798:	2202      	movs	r2, #2
  40079a:	9200      	str	r2, [sp, #0]
  40079c:	2200      	movs	r2, #0
  40079e:	4611      	mov	r1, r2
  4007a0:	4610      	mov	r0, r2
  4007a2:	47a8      	blx	r5
        char charVal = getchar();
  4007a4:	6820      	ldr	r0, [r4, #0]
  4007a6:	6842      	ldr	r2, [r0, #4]
  4007a8:	6853      	ldr	r3, [r2, #4]
  4007aa:	3b01      	subs	r3, #1
  4007ac:	6053      	str	r3, [r2, #4]
  4007ae:	2b00      	cmp	r3, #0
  4007b0:	dbe8      	blt.n	400784 <main+0x150>
  4007b2:	6842      	ldr	r2, [r0, #4]
  4007b4:	6813      	ldr	r3, [r2, #0]
  4007b6:	1c59      	adds	r1, r3, #1
  4007b8:	6011      	str	r1, [r2, #0]
  4007ba:	7818      	ldrb	r0, [r3, #0]
        if (charVal == 'x') {
  4007bc:	2878      	cmp	r0, #120	; 0x78
  4007be:	d0e5      	beq.n	40078c <main+0x158>
        }        
        if (charVal == 'y') {
  4007c0:	2879      	cmp	r0, #121	; 0x79
  4007c2:	d1ef      	bne.n	4007a4 <main+0x170>
            printf("\r\nTurn IR off!\r\n");
  4007c4:	482a      	ldr	r0, [pc, #168]	; (400870 <main+0x23c>)
  4007c6:	47b0      	blx	r6
            testData[0] = 0x00;
  4007c8:	2000      	movs	r0, #0
  4007ca:	ab06      	add	r3, sp, #24
  4007cc:	f803 0d04 	strb.w	r0, [r3, #-4]!
            writeZBoard(SPI_COM, 0x00, 0x00, testData, 2);
  4007d0:	2202      	movs	r2, #2
  4007d2:	9200      	str	r2, [sp, #0]
  4007d4:	4602      	mov	r2, r0
  4007d6:	4601      	mov	r1, r0
  4007d8:	47a8      	blx	r5
  4007da:	e7e3      	b.n	4007a4 <main+0x170>
  4007dc:	00400ef1 	.word	0x00400ef1
  4007e0:	e000ed00 	.word	0xe000ed00
  4007e4:	05fa0300 	.word	0x05fa0300
  4007e8:	0040116d 	.word	0x0040116d
  4007ec:	400e0e00 	.word	0x400e0e00
  4007f0:	204009ec 	.word	0x204009ec
  4007f4:	00401089 	.word	0x00401089
  4007f8:	4000c000 	.word	0x4000c000
  4007fc:	004010dd 	.word	0x004010dd
  400800:	004010ff 	.word	0x004010ff
  400804:	e000e100 	.word	0xe000e100
  400808:	00401107 	.word	0x00401107
  40080c:	004010f7 	.word	0x004010f7
  400810:	e000e010 	.word	0xe000e010
  400814:	000493df 	.word	0x000493df
  400818:	20401654 	.word	0x20401654
  40081c:	004004f9 	.word	0x004004f9
  400820:	20401650 	.word	0x20401650
  400824:	0040041d 	.word	0x0040041d
  400828:	204015cc 	.word	0x204015cc
  40082c:	08f0d180 	.word	0x08f0d180
  400830:	00401117 	.word	0x00401117
  400834:	20400018 	.word	0x20400018
  400838:	00402409 	.word	0x00402409
  40083c:	0040702c 	.word	0x0040702c
  400840:	004023c5 	.word	0x004023c5
  400844:	40008000 	.word	0x40008000
  400848:	00400299 	.word	0x00400299
  40084c:	004002c5 	.word	0x004002c5
  400850:	0040033f 	.word	0x0040033f
  400854:	0040035d 	.word	0x0040035d
  400858:	004003c1 	.word	0x004003c1
  40085c:	004003d5 	.word	0x004003d5
  400860:	004003fd 	.word	0x004003fd
  400864:	0040037b 	.word	0x0040037b
  400868:	004023d5 	.word	0x004023d5
  40086c:	00400aa5 	.word	0x00400aa5
  400870:	00407108 	.word	0x00407108
  400874:	004070f8 	.word	0x004070f8

00400878 <readFromRingBuffer>:
    ringBuffer->m_tailIndex = 0;
    ringBuffer->m_bytesRemaining = RING_BUFFER_SIZE;
    memset(ringBuffer->buffer, 0, sizeof(ringBuffer->buffer));
}

static int readFromRingBuffer(RingBuffer* ringBuffer, char* buffer, uint16_t readSize) {
  400878:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    int numFormerBytes = 0;
    int numLatterBytes = 0;

    int bytesLeftToRead = RING_BUFFER_SIZE - ringBuffer->m_bytesRemaining;
  40087c:	8884      	ldrh	r4, [r0, #4]

    if (bytesLeftToRead == 0) {
  40087e:	f5d4 6480 	rsbs	r4, r4, #1024	; 0x400
  400882:	d028      	beq.n	4008d6 <readFromRingBuffer+0x5e>
  400884:	4605      	mov	r5, r0
  400886:	460f      	mov	r7, r1
        DV_info("Nothing to read...");
        return 0;
    }

    // adjust new read size depending on how much new data is available to be handled
    readSize = readSize > bytesLeftToRead ? bytesLeftToRead : readSize;
  400888:	4294      	cmp	r4, r2
  40088a:	bfa8      	it	ge
  40088c:	4614      	movge	r4, r2
  40088e:	b2a6      	uxth	r6, r4

    if (readSize > 0) {
  400890:	b1d6      	cbz	r6, 4008c8 <readFromRingBuffer+0x50>
        // wrapping will occur
        if (ringBuffer->m_tailIndex + readSize > sizeof(ringBuffer->buffer)) {
  400892:	8843      	ldrh	r3, [r0, #2]
  400894:	199a      	adds	r2, r3, r6
  400896:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
  40089a:	d920      	bls.n	4008de <readFromRingBuffer+0x66>
            numFormerBytes = sizeof(ringBuffer->buffer) - ringBuffer->m_tailIndex;
  40089c:	f5c3 6a80 	rsb	sl, r3, #1024	; 0x400
            numLatterBytes = readSize - numFormerBytes;        

            // move ring buffer data to buffer
            memcpy(buffer, ringBuffer->buffer + ringBuffer->m_tailIndex, numFormerBytes);
  4008a0:	f100 0906 	add.w	r9, r0, #6
  4008a4:	4652      	mov	r2, sl
  4008a6:	eb09 0103 	add.w	r1, r9, r3
  4008aa:	4638      	mov	r0, r7
  4008ac:	f8df b044 	ldr.w	fp, [pc, #68]	; 4008f4 <readFromRingBuffer+0x7c>
  4008b0:	47d8      	blx	fp
            memcpy(buffer + numFormerBytes, ringBuffer->buffer, numLatterBytes);
  4008b2:	eba6 020a 	sub.w	r2, r6, sl
  4008b6:	4649      	mov	r1, r9
  4008b8:	eb07 000a 	add.w	r0, r7, sl
  4008bc:	47d8      	blx	fp
        else {
            memcpy(buffer, ringBuffer->buffer + ringBuffer->m_tailIndex, readSize);
        }

        // update tail index
        ringBuffer->m_tailIndex = ((ringBuffer->m_tailIndex + readSize) % sizeof(ringBuffer->buffer));
  4008be:	886b      	ldrh	r3, [r5, #2]
  4008c0:	4433      	add	r3, r6
  4008c2:	f3c3 0309 	ubfx	r3, r3, #0, #10
  4008c6:	806b      	strh	r3, [r5, #2]
    }

    // update ring buffer size
    ringBuffer->m_bytesRemaining += readSize;
  4008c8:	88ab      	ldrh	r3, [r5, #4]
  4008ca:	441e      	add	r6, r3
  4008cc:	80ae      	strh	r6, [r5, #4]
  4008ce:	b2a4      	uxth	r4, r4
	
	return readSize;
}
  4008d0:	4620      	mov	r0, r4
  4008d2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        DV_info("Nothing to read...");
  4008d6:	4805      	ldr	r0, [pc, #20]	; (4008ec <readFromRingBuffer+0x74>)
  4008d8:	4b05      	ldr	r3, [pc, #20]	; (4008f0 <readFromRingBuffer+0x78>)
  4008da:	4798      	blx	r3
        return 0;
  4008dc:	e7f8      	b.n	4008d0 <readFromRingBuffer+0x58>
            memcpy(buffer, ringBuffer->buffer + ringBuffer->m_tailIndex, readSize);
  4008de:	1d81      	adds	r1, r0, #6
  4008e0:	4632      	mov	r2, r6
  4008e2:	4419      	add	r1, r3
  4008e4:	4638      	mov	r0, r7
  4008e6:	4b03      	ldr	r3, [pc, #12]	; (4008f4 <readFromRingBuffer+0x7c>)
  4008e8:	4798      	blx	r3
  4008ea:	e7e8      	b.n	4008be <readFromRingBuffer+0x46>
  4008ec:	0040714c 	.word	0x0040714c
  4008f0:	004023c5 	.word	0x004023c5
  4008f4:	00402131 	.word	0x00402131

004008f8 <writeToRingBuffer>:

static int writeToRingBuffer(RingBuffer* ringBuffer, char* buffer, uint16_t writeSize) {
  4008f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int numFormerBytes = 0;
    int numLatterBytes = 0;
    
    if (ringBuffer->m_bytesRemaining == 0) {
  4008fc:	8884      	ldrh	r4, [r0, #4]
  4008fe:	b31c      	cbz	r4, 400948 <writeToRingBuffer+0x50>
  400900:	4605      	mov	r5, r0
  400902:	460e      	mov	r6, r1
        DV_error("Ring buffer full, ignoring writes!");
        return 0;
    }

    // adjust write size depending on space remaining in ring buffer
    writeSize = ringBuffer->m_bytesRemaining > writeSize ? writeSize : ringBuffer->m_bytesRemaining;
  400904:	4294      	cmp	r4, r2
  400906:	bf28      	it	cs
  400908:	4614      	movcs	r4, r2
    
    if (writeSize > 0) {
  40090a:	b1bc      	cbz	r4, 40093c <writeToRingBuffer+0x44>
        // wrapping will occur
        if (ringBuffer->m_headIndex + writeSize > sizeof(ringBuffer->buffer)) {
  40090c:	8803      	ldrh	r3, [r0, #0]
  40090e:	191a      	adds	r2, r3, r4
  400910:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
  400914:	d91e      	bls.n	400954 <writeToRingBuffer+0x5c>
            numFormerBytes = sizeof(ringBuffer->buffer) - ringBuffer->m_headIndex;
  400916:	f5c3 6880 	rsb	r8, r3, #1024	; 0x400
            numLatterBytes = writeSize - numFormerBytes;

            // move buffer data to ring buffer
            memcpy(ringBuffer->buffer + ringBuffer->m_headIndex, buffer, numFormerBytes);
  40091a:	1d87      	adds	r7, r0, #6
  40091c:	4642      	mov	r2, r8
  40091e:	18f8      	adds	r0, r7, r3
  400920:	f8df 9044 	ldr.w	r9, [pc, #68]	; 400968 <writeToRingBuffer+0x70>
  400924:	47c8      	blx	r9
            memcpy(ringBuffer->buffer, buffer + numFormerBytes, numLatterBytes);
  400926:	eba4 0208 	sub.w	r2, r4, r8
  40092a:	eb06 0108 	add.w	r1, r6, r8
  40092e:	4638      	mov	r0, r7
  400930:	47c8      	blx	r9
            // move buffer data to ring buffer
            memcpy(ringBuffer->buffer + ringBuffer->m_headIndex, buffer, writeSize);
        }

        // update head index
        ringBuffer->m_headIndex = (ringBuffer->m_headIndex + writeSize) % sizeof(ringBuffer->buffer);
  400932:	882b      	ldrh	r3, [r5, #0]
  400934:	4423      	add	r3, r4
  400936:	f3c3 0309 	ubfx	r3, r3, #0, #10
  40093a:	802b      	strh	r3, [r5, #0]
    }

    // update ring buffer size
    ringBuffer->m_bytesRemaining -= writeSize;
  40093c:	88ab      	ldrh	r3, [r5, #4]
  40093e:	1b1b      	subs	r3, r3, r4
  400940:	80ab      	strh	r3, [r5, #4]

	return writeSize;
  400942:	4620      	mov	r0, r4
}
  400944:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        DV_error("Ring buffer full, ignoring writes!");
  400948:	4805      	ldr	r0, [pc, #20]	; (400960 <writeToRingBuffer+0x68>)
  40094a:	4b06      	ldr	r3, [pc, #24]	; (400964 <writeToRingBuffer+0x6c>)
  40094c:	4798      	blx	r3
        return 0;
  40094e:	2000      	movs	r0, #0
  400950:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
            memcpy(ringBuffer->buffer + ringBuffer->m_headIndex, buffer, writeSize);
  400954:	3006      	adds	r0, #6
  400956:	4622      	mov	r2, r4
  400958:	4418      	add	r0, r3
  40095a:	4b03      	ldr	r3, [pc, #12]	; (400968 <writeToRingBuffer+0x70>)
  40095c:	4798      	blx	r3
  40095e:	e7e8      	b.n	400932 <writeToRingBuffer+0x3a>
  400960:	00407168 	.word	0x00407168
  400964:	004023c5 	.word	0x004023c5
  400968:	00402131 	.word	0x00402131

0040096c <USART0_Handler>:
 * \param   None
 *
 * \retval  None 
 */
 void USART0_Handler(void)
 {
  40096c:	b510      	push	{r4, lr}
     static uint16_t numTotalTxBytes;
     static volatile uint16_t spiTxCounter = 0;
     static volatile bool writeCompleted = false;
     
     /* Get interrupt source */
     uint32_t dvSpiInterruptStatus = usart_get_status(USART0);
  40096e:	4839      	ldr	r0, [pc, #228]	; (400a54 <USART0_Handler+0xe8>)
  400970:	4b39      	ldr	r3, [pc, #228]	; (400a58 <USART0_Handler+0xec>)
  400972:	4798      	blx	r3
     
     /* When nCS is asserted, do this */
     if (dvSpiInterruptStatus & US_IER_CTSIC) {
  400974:	f410 2f00 	tst.w	r0, #524288	; 0x80000
  400978:	d033      	beq.n	4009e2 <USART0_Handler+0x76>
         
         /* Falling edge of nCS */
         if (++edgeCnt == 1) {
  40097a:	4a38      	ldr	r2, [pc, #224]	; (400a5c <USART0_Handler+0xf0>)
  40097c:	7813      	ldrb	r3, [r2, #0]
  40097e:	3301      	adds	r3, #1
  400980:	b2db      	uxtb	r3, r3
  400982:	7013      	strb	r3, [r2, #0]
  400984:	2b01      	cmp	r3, #1
  400986:	d002      	beq.n	40098e <USART0_Handler+0x22>
             writeCompleted = false;
             spiTxCounter = 0;
         }

         /* Rising edge of nCS */
         else if (edgeCnt == 2) {
  400988:	2b02      	cmp	r3, #2
  40098a:	d006      	beq.n	40099a <USART0_Handler+0x2e>
  40098c:	bd10      	pop	{r4, pc}
             writeCompleted = false;
  40098e:	2300      	movs	r3, #0
  400990:	4a33      	ldr	r2, [pc, #204]	; (400a60 <USART0_Handler+0xf4>)
  400992:	7013      	strb	r3, [r2, #0]
             spiTxCounter = 0;
  400994:	4a33      	ldr	r2, [pc, #204]	; (400a64 <USART0_Handler+0xf8>)
  400996:	8013      	strh	r3, [r2, #0]
  400998:	e027      	b.n	4009ea <USART0_Handler+0x7e>
             /* The transmit buffer is loaded from txRingBuffer when CS is idle, otherwise there are timing issues
              *
              * Generate packet = header + data from ring buffer + crc (of header + data) 
              */
                
             numTxBytesData = readFromRingBuffer(&txRingBuffer, txData + 3, MAX_SPI_PACKET_XFER_SIZE);
  40099a:	22ff      	movs	r2, #255	; 0xff
  40099c:	4932      	ldr	r1, [pc, #200]	; (400a68 <USART0_Handler+0xfc>)
  40099e:	4833      	ldr	r0, [pc, #204]	; (400a6c <USART0_Handler+0x100>)
  4009a0:	4b33      	ldr	r3, [pc, #204]	; (400a70 <USART0_Handler+0x104>)
  4009a2:	4798      	blx	r3
  4009a4:	b2c3      	uxtb	r3, r0
  4009a6:	4a33      	ldr	r2, [pc, #204]	; (400a74 <USART0_Handler+0x108>)
  4009a8:	7013      	strb	r3, [r2, #0]

             if (numTxBytesData > 0) {
  4009aa:	b943      	cbnz	r3, 4009be <USART0_Handler+0x52>
             }

             /* Queue write hold register so that the PoEM receives the correct first byte on the first read 
              * Read and writes are done simultaneously in a SPI transfer
              */
             usart_write(USART0, txData[0]);
  4009ac:	4b32      	ldr	r3, [pc, #200]	; (400a78 <USART0_Handler+0x10c>)
  4009ae:	7819      	ldrb	r1, [r3, #0]
  4009b0:	4828      	ldr	r0, [pc, #160]	; (400a54 <USART0_Handler+0xe8>)
  4009b2:	4b32      	ldr	r3, [pc, #200]	; (400a7c <USART0_Handler+0x110>)
  4009b4:	4798      	blx	r3

             /* Reset falling/rising flag */
             edgeCnt = 0;
  4009b6:	2200      	movs	r2, #0
  4009b8:	4b28      	ldr	r3, [pc, #160]	; (400a5c <USART0_Handler+0xf0>)
  4009ba:	701a      	strb	r2, [r3, #0]
  4009bc:	bd10      	pop	{r4, pc}
                 memset(txData, 0x00, 2);
  4009be:	4c2e      	ldr	r4, [pc, #184]	; (400a78 <USART0_Handler+0x10c>)
  4009c0:	2200      	movs	r2, #0
  4009c2:	8022      	strh	r2, [r4, #0]
                 memcpy(txData + 2, &numTxBytesData, 1);
  4009c4:	70a3      	strb	r3, [r4, #2]
                 const uint16_t crc16 = calcTelemDataCrc(txData, 3 + numTxBytesData);
  4009c6:	4619      	mov	r1, r3
  4009c8:	3103      	adds	r1, #3
  4009ca:	4620      	mov	r0, r4
  4009cc:	4b2c      	ldr	r3, [pc, #176]	; (400a80 <USART0_Handler+0x114>)
  4009ce:	4798      	blx	r3
                 memcpy(txData + 3 + numTxBytesData, &crc16, sizeof(crc16));
  4009d0:	4b28      	ldr	r3, [pc, #160]	; (400a74 <USART0_Handler+0x108>)
  4009d2:	781b      	ldrb	r3, [r3, #0]
  4009d4:	441c      	add	r4, r3
  4009d6:	f8a4 0003 	strh.w	r0, [r4, #3]
                 numTotalTxBytes = 3 + numTxBytesData + sizeof(crc16);
  4009da:	3305      	adds	r3, #5
  4009dc:	4a29      	ldr	r2, [pc, #164]	; (400a84 <USART0_Handler+0x118>)
  4009de:	8013      	strh	r3, [r2, #0]
  4009e0:	e7e4      	b.n	4009ac <USART0_Handler+0x40>
         }
     }
     
     /* Falling edge of nCS */
     if (edgeCnt == 1) {
  4009e2:	4b1e      	ldr	r3, [pc, #120]	; (400a5c <USART0_Handler+0xf0>)
  4009e4:	781b      	ldrb	r3, [r3, #0]
  4009e6:	2b01      	cmp	r3, #1
  4009e8:	d1d0      	bne.n	40098c <USART0_Handler+0x20>
         if (dvSpiInterruptStatus & US_IER_RXRDY) {
  4009ea:	f010 0f01 	tst.w	r0, #1
  4009ee:	d0cd      	beq.n	40098c <USART0_Handler+0x20>
             
             /* Store incoming data into rxRingBuffer */
             if(usart_read(USART0, &rxData32) == 0) {
  4009f0:	4925      	ldr	r1, [pc, #148]	; (400a88 <USART0_Handler+0x11c>)
  4009f2:	4818      	ldr	r0, [pc, #96]	; (400a54 <USART0_Handler+0xe8>)
  4009f4:	4b25      	ldr	r3, [pc, #148]	; (400a8c <USART0_Handler+0x120>)
  4009f6:	4798      	blx	r3
  4009f8:	b1a0      	cbz	r0, 400a24 <USART0_Handler+0xb8>
                 rxData8 = rxData32 & 0x000000FF;
                 writeToRingBuffer(&rxRingBuffer, (char *)&rxData8, 1);
             }

             /* Queue up next byte to SPI interface */
             if ((numTxBytesData > 0) && (!writeCompleted)) {
  4009fa:	4b1e      	ldr	r3, [pc, #120]	; (400a74 <USART0_Handler+0x108>)
  4009fc:	781b      	ldrb	r3, [r3, #0]
  4009fe:	2b00      	cmp	r3, #0
  400a00:	d0c4      	beq.n	40098c <USART0_Handler+0x20>
  400a02:	4b17      	ldr	r3, [pc, #92]	; (400a60 <USART0_Handler+0xf4>)
  400a04:	781b      	ldrb	r3, [r3, #0]
  400a06:	2b00      	cmp	r3, #0
  400a08:	d1c0      	bne.n	40098c <USART0_Handler+0x20>

                 // done transfer packet of data
                 if (++spiTxCounter > numTotalTxBytes) {
  400a0a:	4a16      	ldr	r2, [pc, #88]	; (400a64 <USART0_Handler+0xf8>)
  400a0c:	8813      	ldrh	r3, [r2, #0]
  400a0e:	3301      	adds	r3, #1
  400a10:	b29b      	uxth	r3, r3
  400a12:	8013      	strh	r3, [r2, #0]
  400a14:	4a1b      	ldr	r2, [pc, #108]	; (400a84 <USART0_Handler+0x118>)
  400a16:	8812      	ldrh	r2, [r2, #0]
  400a18:	429a      	cmp	r2, r3
  400a1a:	d20c      	bcs.n	400a36 <USART0_Handler+0xca>
                     writeCompleted = true;
  400a1c:	2201      	movs	r2, #1
  400a1e:	4b10      	ldr	r3, [pc, #64]	; (400a60 <USART0_Handler+0xf4>)
  400a20:	701a      	strb	r2, [r3, #0]
  400a22:	bd10      	pop	{r4, pc}
                 rxData8 = rxData32 & 0x000000FF;
  400a24:	491a      	ldr	r1, [pc, #104]	; (400a90 <USART0_Handler+0x124>)
  400a26:	4b18      	ldr	r3, [pc, #96]	; (400a88 <USART0_Handler+0x11c>)
  400a28:	681b      	ldr	r3, [r3, #0]
  400a2a:	700b      	strb	r3, [r1, #0]
                 writeToRingBuffer(&rxRingBuffer, (char *)&rxData8, 1);
  400a2c:	2201      	movs	r2, #1
  400a2e:	4819      	ldr	r0, [pc, #100]	; (400a94 <USART0_Handler+0x128>)
  400a30:	4b19      	ldr	r3, [pc, #100]	; (400a98 <USART0_Handler+0x12c>)
  400a32:	4798      	blx	r3
  400a34:	e7e1      	b.n	4009fa <USART0_Handler+0x8e>
                 }
                 else {
                     // write to SPI interface
                     if (usart_write(USART0, txData[spiTxCounter]) != 0) {
  400a36:	4b0b      	ldr	r3, [pc, #44]	; (400a64 <USART0_Handler+0xf8>)
  400a38:	881b      	ldrh	r3, [r3, #0]
  400a3a:	b29b      	uxth	r3, r3
  400a3c:	4a0e      	ldr	r2, [pc, #56]	; (400a78 <USART0_Handler+0x10c>)
  400a3e:	5cd1      	ldrb	r1, [r2, r3]
  400a40:	4804      	ldr	r0, [pc, #16]	; (400a54 <USART0_Handler+0xe8>)
  400a42:	4b0e      	ldr	r3, [pc, #56]	; (400a7c <USART0_Handler+0x110>)
  400a44:	4798      	blx	r3
  400a46:	2800      	cmp	r0, #0
  400a48:	d0a0      	beq.n	40098c <USART0_Handler+0x20>
                         DV_error("Problems writing to PoEM board via SPI!");
  400a4a:	4814      	ldr	r0, [pc, #80]	; (400a9c <USART0_Handler+0x130>)
  400a4c:	4b14      	ldr	r3, [pc, #80]	; (400aa0 <USART0_Handler+0x134>)
  400a4e:	4798      	blx	r3
                     }
                 }
             }
         }
     }
 }
  400a50:	e79c      	b.n	40098c <USART0_Handler+0x20>
  400a52:	bf00      	nop
  400a54:	40024000 	.word	0x40024000
  400a58:	00400e6d 	.word	0x00400e6d
  400a5c:	204009f4 	.word	0x204009f4
  400a60:	20401316 	.word	0x20401316
  400a64:	20400e0a 	.word	0x20400e0a
  400a68:	20400e0f 	.word	0x20400e0f
  400a6c:	20400f10 	.word	0x20400f10
  400a70:	00400879 	.word	0x00400879
  400a74:	204009f8 	.word	0x204009f8
  400a78:	20400e0c 	.word	0x20400e0c
  400a7c:	00400e71 	.word	0x00400e71
  400a80:	00400d5d 	.word	0x00400d5d
  400a84:	204009f6 	.word	0x204009f6
  400a88:	204009fc 	.word	0x204009fc
  400a8c:	00400e87 	.word	0x00400e87
  400a90:	20400a00 	.word	0x20400a00
  400a94:	20400a04 	.word	0x20400a04
  400a98:	004008f9 	.word	0x004008f9
  400a9c:	00407118 	.word	0x00407118
  400aa0:	004023c5 	.word	0x004023c5

00400aa4 <writeZBoard>:
 *  /param  numBytes    1 or 2 byte transaction
 *  
 *  /retval Boolean to determine if transaction was valid
 */

bool writeZBoard(uint8_t intf, uint8_t devAddr, uint8_t regAddr, uint8_t *data, uint8_t numBytes) {
  400aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400aa8:	b083      	sub	sp, #12
  400aaa:	9201      	str	r2, [sp, #4]
  400aac:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
    static uint8_t header = 0x00;
    static uint8_t read_cs = 0;
    static commPacket packet;
    static uint16_t tempVal = 0;     
    
    if (intf > 3) {
  400ab0:	2803      	cmp	r0, #3
  400ab2:	f200 80e2 	bhi.w	400c7a <writeZBoard+0x1d6>
  400ab6:	468b      	mov	fp, r1
  400ab8:	461d      	mov	r5, r3
        DV_error("Incorrect write interface to Z-Board");
        return false;
    }
    else if ((numBytes > 2) || (numBytes == 0)) {
  400aba:	1e63      	subs	r3, r4, #1
  400abc:	b2db      	uxtb	r3, r3
  400abe:	2b01      	cmp	r3, #1
  400ac0:	f200 80e0 	bhi.w	400c84 <writeZBoard+0x1e0>
    else {
        /* Set interface */
        header = intf;
        
        /* Set number of bytes */
        if (numBytes == 1) {
  400ac4:	2c01      	cmp	r4, #1
  400ac6:	f000 80e4 	beq.w	400c92 <writeZBoard+0x1ee>
            clearBit(POS_BITS, &header);
        }
        else if (numBytes == 2) {
  400aca:	2c02      	cmp	r4, #2
    *data |= (1 << pos);
  400acc:	bf08      	it	eq
  400ace:	f040 0008 	orreq.w	r0, r0, #8
  400ad2:	4b8c      	ldr	r3, [pc, #560]	; (400d04 <writeZBoard+0x260>)
  400ad4:	7018      	strb	r0, [r3, #0]
    *data &= ~(1 << pos);
  400ad6:	f8df 922c 	ldr.w	r9, [pc, #556]	; 400d04 <writeZBoard+0x260>
  400ada:	f899 3000 	ldrb.w	r3, [r9]
  400ade:	f023 0304 	bic.w	r3, r3, #4
  400ae2:	f889 3000 	strb.w	r3, [r9]
    
        /* Set write command */
        clearBit(POS_RW, &header);        
    }
           
    spi_write(SPI0, STROFFRAME, CS_NUM, 0);
  400ae6:	f8df 8228 	ldr.w	r8, [pc, #552]	; 400d10 <writeZBoard+0x26c>
  400aea:	2300      	movs	r3, #0
  400aec:	2203      	movs	r2, #3
  400aee:	217e      	movs	r1, #126	; 0x7e
  400af0:	4640      	mov	r0, r8
  400af2:	4f85      	ldr	r7, [pc, #532]	; (400d08 <writeZBoard+0x264>)
  400af4:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400af6:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400afa:	4e84      	ldr	r6, [pc, #528]	; (400d0c <writeZBoard+0x268>)
  400afc:	47b0      	blx	r6
        
    spi_write(SPI0, header, CS_NUM, 0);
  400afe:	2300      	movs	r3, #0
  400b00:	2203      	movs	r2, #3
  400b02:	f899 1000 	ldrb.w	r1, [r9]
  400b06:	4640      	mov	r0, r8
  400b08:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400b0a:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400b0e:	47b0      	blx	r6
    
    spi_write(SPI0, devAddr, CS_NUM, 0);
  400b10:	2300      	movs	r3, #0
  400b12:	2203      	movs	r2, #3
  400b14:	4659      	mov	r1, fp
  400b16:	4640      	mov	r0, r8
  400b18:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400b1a:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400b1e:	47b0      	blx	r6
        
    spi_write(SPI0, regAddr, CS_NUM, 0);
  400b20:	2300      	movs	r3, #0
  400b22:	2203      	movs	r2, #3
  400b24:	9901      	ldr	r1, [sp, #4]
  400b26:	4640      	mov	r0, r8
  400b28:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400b2a:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400b2e:	47b0      	blx	r6
        
    if (numBytes == 1) {
  400b30:	2c01      	cmp	r4, #1
  400b32:	f000 80b3 	beq.w	400c9c <writeZBoard+0x1f8>
        
        spi_write(SPI0, 0x00, CS_NUM, 0);
        delay_us(SPI_SLEEP);        
    }
    else {
        spi_write(SPI0, data[0], CS_NUM, 0);
  400b36:	4f76      	ldr	r7, [pc, #472]	; (400d10 <writeZBoard+0x26c>)
  400b38:	2300      	movs	r3, #0
  400b3a:	2203      	movs	r2, #3
  400b3c:	7829      	ldrb	r1, [r5, #0]
  400b3e:	4638      	mov	r0, r7
  400b40:	4e71      	ldr	r6, [pc, #452]	; (400d08 <writeZBoard+0x264>)
  400b42:	47b0      	blx	r6
        delay_us(SPI_SLEEP);
  400b44:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400b48:	4c70      	ldr	r4, [pc, #448]	; (400d0c <writeZBoard+0x268>)
  400b4a:	47a0      	blx	r4
        
        spi_write(SPI0, data[1], CS_NUM, 0);
  400b4c:	2300      	movs	r3, #0
  400b4e:	2203      	movs	r2, #3
  400b50:	7869      	ldrb	r1, [r5, #1]
  400b52:	4638      	mov	r0, r7
  400b54:	47b0      	blx	r6
        delay_us(SPI_SLEEP);        
  400b56:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400b5a:	47a0      	blx	r4
    }
    
    spi_write(SPI0, ENDOFFRAME, CS_NUM, 1);
  400b5c:	4c6c      	ldr	r4, [pc, #432]	; (400d10 <writeZBoard+0x26c>)
  400b5e:	2301      	movs	r3, #1
  400b60:	2203      	movs	r2, #3
  400b62:	217d      	movs	r1, #125	; 0x7d
  400b64:	4620      	mov	r0, r4
  400b66:	4f68      	ldr	r7, [pc, #416]	; (400d08 <writeZBoard+0x264>)
  400b68:	47b8      	blx	r7
    delay_us(SPI_SLEEP);    
  400b6a:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400b6e:	4e67      	ldr	r6, [pc, #412]	; (400d0c <writeZBoard+0x268>)
  400b70:	47b0      	blx	r6
    
    /* Check whether command has been received by reading back ACK and data */
    delay_us(PROCESS_TIME);
  400b72:	4868      	ldr	r0, [pc, #416]	; (400d14 <writeZBoard+0x270>)
  400b74:	47b0      	blx	r6
    
    spi_write(SPI0, 0xAA, 1, 0);            // required for providing clock to slave
  400b76:	2300      	movs	r3, #0
  400b78:	2201      	movs	r2, #1
  400b7a:	21aa      	movs	r1, #170	; 0xaa
  400b7c:	4620      	mov	r0, r4
  400b7e:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400b80:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400b84:	47b0      	blx	r6
    spi_read(SPI0, &tempVal, &read_cs);     // read SOF byte
  400b86:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 400d54 <writeZBoard+0x2b0>
  400b8a:	4d63      	ldr	r5, [pc, #396]	; (400d18 <writeZBoard+0x274>)
  400b8c:	464a      	mov	r2, r9
  400b8e:	4629      	mov	r1, r5
  400b90:	4620      	mov	r0, r4
  400b92:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 400d58 <writeZBoard+0x2b4>
  400b96:	47c0      	blx	r8
    
    spi_write(SPI0, 0xBB, 1, 0);
  400b98:	2300      	movs	r3, #0
  400b9a:	2201      	movs	r2, #1
  400b9c:	21bb      	movs	r1, #187	; 0xbb
  400b9e:	4620      	mov	r0, r4
  400ba0:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400ba2:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400ba6:	47b0      	blx	r6
    spi_read(SPI0, &tempVal, &read_cs);     // read header
  400ba8:	464a      	mov	r2, r9
  400baa:	4629      	mov	r1, r5
  400bac:	4620      	mov	r0, r4
  400bae:	47c0      	blx	r8
    packet.header = (uint8_t)tempVal;
  400bb0:	f8df a168 	ldr.w	sl, [pc, #360]	; 400d1c <writeZBoard+0x278>
  400bb4:	882b      	ldrh	r3, [r5, #0]
  400bb6:	f88a 3000 	strb.w	r3, [sl]
    
    spi_write(SPI0, 0xCC, 1, 0);
  400bba:	2300      	movs	r3, #0
  400bbc:	2201      	movs	r2, #1
  400bbe:	21cc      	movs	r1, #204	; 0xcc
  400bc0:	4620      	mov	r0, r4
  400bc2:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400bc4:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400bc8:	47b0      	blx	r6
    spi_read(SPI0, &tempVal, &read_cs);     // read device address
  400bca:	464a      	mov	r2, r9
  400bcc:	4629      	mov	r1, r5
  400bce:	4620      	mov	r0, r4
  400bd0:	47c0      	blx	r8
    packet.devAddr = (uint8_t)tempVal;
  400bd2:	882b      	ldrh	r3, [r5, #0]
  400bd4:	f88a 3001 	strb.w	r3, [sl, #1]

    spi_write(SPI0, 0xDD, 1, 0);
  400bd8:	2300      	movs	r3, #0
  400bda:	2201      	movs	r2, #1
  400bdc:	21dd      	movs	r1, #221	; 0xdd
  400bde:	4620      	mov	r0, r4
  400be0:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400be2:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400be6:	47b0      	blx	r6
    spi_read(SPI0, &tempVal, &read_cs);     // read register address
  400be8:	464a      	mov	r2, r9
  400bea:	4629      	mov	r1, r5
  400bec:	4620      	mov	r0, r4
  400bee:	47c0      	blx	r8
    packet.regAddr = (uint8_t)tempVal;
  400bf0:	882b      	ldrh	r3, [r5, #0]
  400bf2:	f88a 3002 	strb.w	r3, [sl, #2]
    
    spi_write(SPI0, 0xEE, 1, 0);
  400bf6:	2300      	movs	r3, #0
  400bf8:	2201      	movs	r2, #1
  400bfa:	21ee      	movs	r1, #238	; 0xee
  400bfc:	4620      	mov	r0, r4
  400bfe:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400c00:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400c04:	47b0      	blx	r6
    spi_read(SPI0, &tempVal, &read_cs);     // read MSB
  400c06:	464a      	mov	r2, r9
  400c08:	4629      	mov	r1, r5
  400c0a:	4620      	mov	r0, r4
  400c0c:	47c0      	blx	r8
    packet.data[0] = (uint8_t)tempVal;
  400c0e:	882b      	ldrh	r3, [r5, #0]
  400c10:	f88a 3003 	strb.w	r3, [sl, #3]
    
    spi_write(SPI0, 0xFF, 1, 0);
  400c14:	2300      	movs	r3, #0
  400c16:	2201      	movs	r2, #1
  400c18:	21ff      	movs	r1, #255	; 0xff
  400c1a:	4620      	mov	r0, r4
  400c1c:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400c1e:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400c22:	47b0      	blx	r6
    spi_read(SPI0, &tempVal, &read_cs);     // read LSB
  400c24:	464a      	mov	r2, r9
  400c26:	4629      	mov	r1, r5
  400c28:	4620      	mov	r0, r4
  400c2a:	47c0      	blx	r8
    packet.data[1] = (uint8_t)tempVal;
  400c2c:	882b      	ldrh	r3, [r5, #0]
  400c2e:	f88a 3004 	strb.w	r3, [sl, #4]
    
    spi_write(SPI0, 0x00, 1, 1);
  400c32:	2301      	movs	r3, #1
  400c34:	461a      	mov	r2, r3
  400c36:	2100      	movs	r1, #0
  400c38:	4620      	mov	r0, r4
  400c3a:	47b8      	blx	r7
    delay_us(SPI_SLEEP);
  400c3c:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400c40:	47b0      	blx	r6
    spi_read(SPI0, &tempVal, &read_cs);     // read EOF byte   
  400c42:	464a      	mov	r2, r9
  400c44:	4629      	mov	r1, r5
  400c46:	4620      	mov	r0, r4
  400c48:	47c0      	blx	r8
    
    /* Error check return packet */
    if (packet.header != header) {
  400c4a:	f89a 1000 	ldrb.w	r1, [sl]
  400c4e:	4b2d      	ldr	r3, [pc, #180]	; (400d04 <writeZBoard+0x260>)
  400c50:	781b      	ldrb	r3, [r3, #0]
  400c52:	428b      	cmp	r3, r1
  400c54:	d134      	bne.n	400cc0 <writeZBoard+0x21c>
        DV_error("Write read-back header does not match");
        return false;
    }
    else if (packet.devAddr!= devAddr) {
  400c56:	4b31      	ldr	r3, [pc, #196]	; (400d1c <writeZBoard+0x278>)
  400c58:	785b      	ldrb	r3, [r3, #1]
  400c5a:	455b      	cmp	r3, fp
  400c5c:	d135      	bne.n	400cca <writeZBoard+0x226>
        DV_error("Write read-back device address does not match");
        return false;
    }
    else if (packet.regAddr!= regAddr) {
  400c5e:	4b2f      	ldr	r3, [pc, #188]	; (400d1c <writeZBoard+0x278>)
  400c60:	789b      	ldrb	r3, [r3, #2]
  400c62:	9a01      	ldr	r2, [sp, #4]
  400c64:	4293      	cmp	r3, r2
  400c66:	d135      	bne.n	400cd4 <writeZBoard+0x230>
        DV_error("Write read-back register address does not match");
        return false;
    }
    else if (packet.data[0]!= ACK) {
  400c68:	4b2c      	ldr	r3, [pc, #176]	; (400d1c <writeZBoard+0x278>)
  400c6a:	78db      	ldrb	r3, [r3, #3]
  400c6c:	2baa      	cmp	r3, #170	; 0xaa
  400c6e:	d036      	beq.n	400cde <writeZBoard+0x23a>
        DV_error("No ACK from Z-position board received!");
  400c70:	482b      	ldr	r0, [pc, #172]	; (400d20 <writeZBoard+0x27c>)
  400c72:	4b2c      	ldr	r3, [pc, #176]	; (400d24 <writeZBoard+0x280>)
  400c74:	4798      	blx	r3
        return false;
  400c76:	2000      	movs	r0, #0
  400c78:	e008      	b.n	400c8c <writeZBoard+0x1e8>
        DV_error("Incorrect write interface to Z-Board");
  400c7a:	482b      	ldr	r0, [pc, #172]	; (400d28 <writeZBoard+0x284>)
  400c7c:	4b29      	ldr	r3, [pc, #164]	; (400d24 <writeZBoard+0x280>)
  400c7e:	4798      	blx	r3
        return false;
  400c80:	2000      	movs	r0, #0
  400c82:	e003      	b.n	400c8c <writeZBoard+0x1e8>
        DV_error("Incorrect write byte transfer length to Z-Board");
  400c84:	4829      	ldr	r0, [pc, #164]	; (400d2c <writeZBoard+0x288>)
  400c86:	4b27      	ldr	r3, [pc, #156]	; (400d24 <writeZBoard+0x280>)
  400c88:	4798      	blx	r3
        return false;
  400c8a:	2000      	movs	r0, #0
    printf("regAddr: 0x%02X\r\n", packet.regAddr);
    printf("data[0]: 0x%02X\r\n", packet.data[0]);
    printf("data[1]: 0x%02X\r\n", packet.data[1]);    
        
    return true;
}
  400c8c:	b003      	add	sp, #12
  400c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    *data &= ~(1 << pos);
  400c92:	f020 0008 	bic.w	r0, r0, #8
  400c96:	4b1b      	ldr	r3, [pc, #108]	; (400d04 <writeZBoard+0x260>)
  400c98:	7018      	strb	r0, [r3, #0]
  400c9a:	e71c      	b.n	400ad6 <writeZBoard+0x32>
        spi_write(SPI0, data[0], CS_NUM, 0);
  400c9c:	2300      	movs	r3, #0
  400c9e:	2203      	movs	r2, #3
  400ca0:	7829      	ldrb	r1, [r5, #0]
  400ca2:	4640      	mov	r0, r8
  400ca4:	47b8      	blx	r7
        delay_us(SPI_SLEEP);
  400ca6:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400caa:	4c18      	ldr	r4, [pc, #96]	; (400d0c <writeZBoard+0x268>)
  400cac:	47a0      	blx	r4
        spi_write(SPI0, 0x00, CS_NUM, 0);
  400cae:	2300      	movs	r3, #0
  400cb0:	2203      	movs	r2, #3
  400cb2:	4619      	mov	r1, r3
  400cb4:	4640      	mov	r0, r8
  400cb6:	47b8      	blx	r7
        delay_us(SPI_SLEEP);        
  400cb8:	f640 10e1 	movw	r0, #2529	; 0x9e1
  400cbc:	47a0      	blx	r4
  400cbe:	e74d      	b.n	400b5c <writeZBoard+0xb8>
        DV_error("Write read-back header does not match");
  400cc0:	481b      	ldr	r0, [pc, #108]	; (400d30 <writeZBoard+0x28c>)
  400cc2:	4b18      	ldr	r3, [pc, #96]	; (400d24 <writeZBoard+0x280>)
  400cc4:	4798      	blx	r3
        return false;
  400cc6:	2000      	movs	r0, #0
  400cc8:	e7e0      	b.n	400c8c <writeZBoard+0x1e8>
        DV_error("Write read-back device address does not match");
  400cca:	481a      	ldr	r0, [pc, #104]	; (400d34 <writeZBoard+0x290>)
  400ccc:	4b15      	ldr	r3, [pc, #84]	; (400d24 <writeZBoard+0x280>)
  400cce:	4798      	blx	r3
        return false;
  400cd0:	2000      	movs	r0, #0
  400cd2:	e7db      	b.n	400c8c <writeZBoard+0x1e8>
        DV_error("Write read-back register address does not match");
  400cd4:	4818      	ldr	r0, [pc, #96]	; (400d38 <writeZBoard+0x294>)
  400cd6:	4b13      	ldr	r3, [pc, #76]	; (400d24 <writeZBoard+0x280>)
  400cd8:	4798      	blx	r3
        return false;
  400cda:	2000      	movs	r0, #0
  400cdc:	e7d6      	b.n	400c8c <writeZBoard+0x1e8>
    printf("header: 0x%02X\r\n", packet.header);
  400cde:	4817      	ldr	r0, [pc, #92]	; (400d3c <writeZBoard+0x298>)
  400ce0:	4c17      	ldr	r4, [pc, #92]	; (400d40 <writeZBoard+0x29c>)
  400ce2:	47a0      	blx	r4
    printf("devAddr: 0x%02X\r\n", packet.devAddr);
  400ce4:	4d0d      	ldr	r5, [pc, #52]	; (400d1c <writeZBoard+0x278>)
  400ce6:	7869      	ldrb	r1, [r5, #1]
  400ce8:	4816      	ldr	r0, [pc, #88]	; (400d44 <writeZBoard+0x2a0>)
  400cea:	47a0      	blx	r4
    printf("regAddr: 0x%02X\r\n", packet.regAddr);
  400cec:	78a9      	ldrb	r1, [r5, #2]
  400cee:	4816      	ldr	r0, [pc, #88]	; (400d48 <writeZBoard+0x2a4>)
  400cf0:	47a0      	blx	r4
    printf("data[0]: 0x%02X\r\n", packet.data[0]);
  400cf2:	78e9      	ldrb	r1, [r5, #3]
  400cf4:	4815      	ldr	r0, [pc, #84]	; (400d4c <writeZBoard+0x2a8>)
  400cf6:	47a0      	blx	r4
    printf("data[1]: 0x%02X\r\n", packet.data[1]);    
  400cf8:	7929      	ldrb	r1, [r5, #4]
  400cfa:	4815      	ldr	r0, [pc, #84]	; (400d50 <writeZBoard+0x2ac>)
  400cfc:	47a0      	blx	r4
    return true;
  400cfe:	2001      	movs	r0, #1
  400d00:	e7c4      	b.n	400c8c <writeZBoard+0x1e8>
  400d02:	bf00      	nop
  400d04:	20401317 	.word	0x20401317
  400d08:	0040030b 	.word	0x0040030b
  400d0c:	20400001 	.word	0x20400001
  400d10:	40008000 	.word	0x40008000
  400d14:	00018b1b 	.word	0x00018b1b
  400d18:	2040131e 	.word	0x2040131e
  400d1c:	20401318 	.word	0x20401318
  400d20:	004072a4 	.word	0x004072a4
  400d24:	004023c5 	.word	0x004023c5
  400d28:	00407194 	.word	0x00407194
  400d2c:	004071c4 	.word	0x004071c4
  400d30:	00407200 	.word	0x00407200
  400d34:	00407230 	.word	0x00407230
  400d38:	00407268 	.word	0x00407268
  400d3c:	004072d4 	.word	0x004072d4
  400d40:	00402301 	.word	0x00402301
  400d44:	004072e8 	.word	0x004072e8
  400d48:	004072fc 	.word	0x004072fc
  400d4c:	00407310 	.word	0x00407310
  400d50:	00407324 	.word	0x00407324
  400d54:	2040131d 	.word	0x2040131d
  400d58:	004002db 	.word	0x004002db

00400d5c <calcTelemDataCrc>:
        }
        s_crcTable[dividend] = remainder;
    }
}

uint16_t calcTelemDataCrc(const void* data, int size) {
  400d5c:	b5f0      	push	{r4, r5, r6, r7, lr}
    static bool initCrc = false;
    if (!initCrc) {
  400d5e:	4b1e      	ldr	r3, [pc, #120]	; (400dd8 <calcTelemDataCrc+0x7c>)
  400d60:	781b      	ldrb	r3, [r3, #0]
  400d62:	b193      	cbz	r3, 400d8a <calcTelemDataCrc+0x2e>
        crcInit();
        initCrc = true;
    }
    unsigned char* const message = (unsigned char*)data;
    uint16_t remainder = (uint16_t)(INITIAL_REMAINDER);
    for (int byte = 0; byte < size; ++byte) {
  400d64:	2900      	cmp	r1, #0
  400d66:	dd33      	ble.n	400dd0 <calcTelemDataCrc+0x74>
  400d68:	4602      	mov	r2, r0
  400d6a:	4401      	add	r1, r0
  400d6c:	f64f 70ff 	movw	r0, #65535	; 0xffff
        unsigned char index = (unsigned char)(REFLECT_DATA(message[byte]) ^ (remainder >> (WIDTH - 8)));
        remainder = (uint16_t)(s_crcTable[index] ^ (remainder << 8));
  400d70:	4c1a      	ldr	r4, [pc, #104]	; (400ddc <calcTelemDataCrc+0x80>)
        unsigned char index = (unsigned char)(REFLECT_DATA(message[byte]) ^ (remainder >> (WIDTH - 8)));
  400d72:	f812 3b01 	ldrb.w	r3, [r2], #1
        remainder = (uint16_t)(s_crcTable[index] ^ (remainder << 8));
  400d76:	ea83 2310 	eor.w	r3, r3, r0, lsr #8
  400d7a:	f834 3013 	ldrh.w	r3, [r4, r3, lsl #1]
  400d7e:	ea83 2000 	eor.w	r0, r3, r0, lsl #8
  400d82:	b280      	uxth	r0, r0
    for (int byte = 0; byte < size; ++byte) {
  400d84:	4291      	cmp	r1, r2
  400d86:	d1f4      	bne.n	400d72 <calcTelemDataCrc+0x16>
  400d88:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400d8a:	4f14      	ldr	r7, [pc, #80]	; (400ddc <calcTelemDataCrc+0x80>)
  400d8c:	1ebd      	subs	r5, r7, #2
  400d8e:	f507 77ff 	add.w	r7, r7, #510	; 0x1fe
    if (!initCrc) {
  400d92:	2400      	movs	r4, #0
        remainder = (uint16_t)(dividend << (WIDTH - 8));
  400d94:	f04f 0e08 	mov.w	lr, #8
                remainder = (uint16_t)((remainder << 1) ^ POLYNOMIAL);
  400d98:	f648 76db 	movw	r6, #36827	; 0x8fdb
  400d9c:	e006      	b.n	400dac <calcTelemDataCrc+0x50>
        s_crcTable[dividend] = remainder;
  400d9e:	f825 3f02 	strh.w	r3, [r5, #2]!
  400da2:	f504 7480 	add.w	r4, r4, #256	; 0x100
  400da6:	b2a4      	uxth	r4, r4
    for (int dividend = 0; dividend < 256; ++dividend) {
  400da8:	42bd      	cmp	r5, r7
  400daa:	d00d      	beq.n	400dc8 <calcTelemDataCrc+0x6c>
        remainder = (uint16_t)(dividend << (WIDTH - 8));
  400dac:	4623      	mov	r3, r4
  400dae:	4672      	mov	r2, lr
            if (remainder & TOPBIT) {
  400db0:	f413 4f00 	tst.w	r3, #32768	; 0x8000
                remainder = (uint16_t)((remainder << 1) ^ POLYNOMIAL);
  400db4:	bf14      	ite	ne
  400db6:	ea86 0343 	eorne.w	r3, r6, r3, lsl #1
                remainder = (uint16_t)(remainder << 1);
  400dba:	005b      	lsleq	r3, r3, #1
  400dbc:	b29b      	uxth	r3, r3
  400dbe:	3a01      	subs	r2, #1
        for (bit = 8; bit > 0; --bit) {
  400dc0:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
  400dc4:	d1f4      	bne.n	400db0 <calcTelemDataCrc+0x54>
  400dc6:	e7ea      	b.n	400d9e <calcTelemDataCrc+0x42>
        initCrc = true;
  400dc8:	2201      	movs	r2, #1
  400dca:	4b03      	ldr	r3, [pc, #12]	; (400dd8 <calcTelemDataCrc+0x7c>)
  400dcc:	701a      	strb	r2, [r3, #0]
  400dce:	e7c9      	b.n	400d64 <calcTelemDataCrc+0x8>
    uint16_t remainder = (uint16_t)(INITIAL_REMAINDER);
  400dd0:	f64f 70ff 	movw	r0, #65535	; 0xffff
    }
    return (uint16_t)(REFLECT_REMAINDER(remainder) ^ FINAL_XOR_VALUE);
}
  400dd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400dd6:	bf00      	nop
  400dd8:	20401320 	.word	0x20401320
  400ddc:	20401324 	.word	0x20401324

00400de0 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400de0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400de4:	4604      	mov	r4, r0
  400de6:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400de8:	4b0e      	ldr	r3, [pc, #56]	; (400e24 <pio_handler_process+0x44>)
  400dea:	4798      	blx	r3
  400dec:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400dee:	4620      	mov	r0, r4
  400df0:	4b0d      	ldr	r3, [pc, #52]	; (400e28 <pio_handler_process+0x48>)
  400df2:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400df4:	4005      	ands	r5, r0
  400df6:	d013      	beq.n	400e20 <pio_handler_process+0x40>
  400df8:	4c0c      	ldr	r4, [pc, #48]	; (400e2c <pio_handler_process+0x4c>)
  400dfa:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400dfe:	e003      	b.n	400e08 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400e00:	42b4      	cmp	r4, r6
  400e02:	d00d      	beq.n	400e20 <pio_handler_process+0x40>
  400e04:	3410      	adds	r4, #16
		while (status != 0) {
  400e06:	b15d      	cbz	r5, 400e20 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400e08:	6820      	ldr	r0, [r4, #0]
  400e0a:	4540      	cmp	r0, r8
  400e0c:	d1f8      	bne.n	400e00 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400e0e:	6861      	ldr	r1, [r4, #4]
  400e10:	4229      	tst	r1, r5
  400e12:	d0f5      	beq.n	400e00 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400e14:	68e3      	ldr	r3, [r4, #12]
  400e16:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400e18:	6863      	ldr	r3, [r4, #4]
  400e1a:	ea25 0503 	bic.w	r5, r5, r3
  400e1e:	e7ef      	b.n	400e00 <pio_handler_process+0x20>
  400e20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e24:	00400f61 	.word	0x00400f61
  400e28:	00400f65 	.word	0x00400f65
  400e2c:	20401524 	.word	0x20401524

00400e30 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400e30:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400e32:	210a      	movs	r1, #10
  400e34:	4801      	ldr	r0, [pc, #4]	; (400e3c <PIOA_Handler+0xc>)
  400e36:	4b02      	ldr	r3, [pc, #8]	; (400e40 <PIOA_Handler+0x10>)
  400e38:	4798      	blx	r3
  400e3a:	bd08      	pop	{r3, pc}
  400e3c:	400e0e00 	.word	0x400e0e00
  400e40:	00400de1 	.word	0x00400de1

00400e44 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400e44:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400e46:	210b      	movs	r1, #11
  400e48:	4801      	ldr	r0, [pc, #4]	; (400e50 <PIOB_Handler+0xc>)
  400e4a:	4b02      	ldr	r3, [pc, #8]	; (400e54 <PIOB_Handler+0x10>)
  400e4c:	4798      	blx	r3
  400e4e:	bd08      	pop	{r3, pc}
  400e50:	400e1000 	.word	0x400e1000
  400e54:	00400de1 	.word	0x00400de1

00400e58 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400e58:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400e5a:	2110      	movs	r1, #16
  400e5c:	4801      	ldr	r0, [pc, #4]	; (400e64 <PIOD_Handler+0xc>)
  400e5e:	4b02      	ldr	r3, [pc, #8]	; (400e68 <PIOD_Handler+0x10>)
  400e60:	4798      	blx	r3
  400e62:	bd08      	pop	{r3, pc}
  400e64:	400e1400 	.word	0x400e1400
  400e68:	00400de1 	.word	0x00400de1

00400e6c <usart_get_status>:
 *
 * \return The current USART status.
 */
uint32_t usart_get_status(Usart *p_usart)
{
	return p_usart->US_CSR;
  400e6c:	6940      	ldr	r0, [r0, #20]
}
  400e6e:	4770      	bx	lr

00400e70 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400e70:	6943      	ldr	r3, [r0, #20]
  400e72:	f013 0f02 	tst.w	r3, #2
  400e76:	d004      	beq.n	400e82 <usart_write+0x12>
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  400e78:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400e7c:	61c1      	str	r1, [r0, #28]
	return 0;
  400e7e:	2000      	movs	r0, #0
  400e80:	4770      	bx	lr
		return 1;
  400e82:	2001      	movs	r0, #1
}
  400e84:	4770      	bx	lr

00400e86 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400e86:	6943      	ldr	r3, [r0, #20]
  400e88:	f013 0f01 	tst.w	r3, #1
  400e8c:	d005      	beq.n	400e9a <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400e8e:	6983      	ldr	r3, [r0, #24]
  400e90:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400e94:	600b      	str	r3, [r1, #0]

	return 0;
  400e96:	2000      	movs	r0, #0
  400e98:	4770      	bx	lr
		return 1;
  400e9a:	2001      	movs	r0, #1
}
  400e9c:	4770      	bx	lr
	...

00400ea0 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400ea0:	3801      	subs	r0, #1
  400ea2:	2802      	cmp	r0, #2
  400ea4:	d815      	bhi.n	400ed2 <_write+0x32>
{
  400ea6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400eaa:	460e      	mov	r6, r1
  400eac:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  400eae:	b19a      	cbz	r2, 400ed8 <_write+0x38>
  400eb0:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400eb2:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400eec <_write+0x4c>
  400eb6:	4f0c      	ldr	r7, [pc, #48]	; (400ee8 <_write+0x48>)
  400eb8:	f8d8 0000 	ldr.w	r0, [r8]
  400ebc:	f815 1b01 	ldrb.w	r1, [r5], #1
  400ec0:	683b      	ldr	r3, [r7, #0]
  400ec2:	4798      	blx	r3
  400ec4:	2800      	cmp	r0, #0
  400ec6:	db0a      	blt.n	400ede <_write+0x3e>
  400ec8:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  400eca:	3c01      	subs	r4, #1
  400ecc:	d1f4      	bne.n	400eb8 <_write+0x18>
  400ece:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400ed2:	f04f 30ff 	mov.w	r0, #4294967295
  400ed6:	4770      	bx	lr
	for (; len != 0; --len) {
  400ed8:	4610      	mov	r0, r2
  400eda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  400ede:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  400ee2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400ee6:	bf00      	nop
  400ee8:	20401650 	.word	0x20401650
  400eec:	20401654 	.word	0x20401654

00400ef0 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400ef0:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400ef2:	4810      	ldr	r0, [pc, #64]	; (400f34 <sysclk_init+0x44>)
  400ef4:	4b10      	ldr	r3, [pc, #64]	; (400f38 <sysclk_init+0x48>)
  400ef6:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400ef8:	213e      	movs	r1, #62	; 0x3e
  400efa:	2000      	movs	r0, #0
  400efc:	4b0f      	ldr	r3, [pc, #60]	; (400f3c <sysclk_init+0x4c>)
  400efe:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400f00:	4c0f      	ldr	r4, [pc, #60]	; (400f40 <sysclk_init+0x50>)
  400f02:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400f04:	2800      	cmp	r0, #0
  400f06:	d0fc      	beq.n	400f02 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400f08:	4b0e      	ldr	r3, [pc, #56]	; (400f44 <sysclk_init+0x54>)
  400f0a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400f0c:	4a0e      	ldr	r2, [pc, #56]	; (400f48 <sysclk_init+0x58>)
  400f0e:	4b0f      	ldr	r3, [pc, #60]	; (400f4c <sysclk_init+0x5c>)
  400f10:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400f12:	4c0f      	ldr	r4, [pc, #60]	; (400f50 <sysclk_init+0x60>)
  400f14:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400f16:	2800      	cmp	r0, #0
  400f18:	d0fc      	beq.n	400f14 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400f1a:	2002      	movs	r0, #2
  400f1c:	4b0d      	ldr	r3, [pc, #52]	; (400f54 <sysclk_init+0x64>)
  400f1e:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400f20:	2000      	movs	r0, #0
  400f22:	4b0d      	ldr	r3, [pc, #52]	; (400f58 <sysclk_init+0x68>)
  400f24:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400f26:	4b0d      	ldr	r3, [pc, #52]	; (400f5c <sysclk_init+0x6c>)
  400f28:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400f2a:	4802      	ldr	r0, [pc, #8]	; (400f34 <sysclk_init+0x44>)
  400f2c:	4b02      	ldr	r3, [pc, #8]	; (400f38 <sysclk_init+0x48>)
  400f2e:	4798      	blx	r3
  400f30:	bd10      	pop	{r4, pc}
  400f32:	bf00      	nop
  400f34:	11e1a300 	.word	0x11e1a300
  400f38:	00401561 	.word	0x00401561
  400f3c:	00401005 	.word	0x00401005
  400f40:	00401059 	.word	0x00401059
  400f44:	00401069 	.word	0x00401069
  400f48:	20183f01 	.word	0x20183f01
  400f4c:	400e0600 	.word	0x400e0600
  400f50:	00401079 	.word	0x00401079
  400f54:	00400f69 	.word	0x00400f69
  400f58:	00400fa1 	.word	0x00400fa1
  400f5c:	00401455 	.word	0x00401455

00400f60 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400f60:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400f62:	4770      	bx	lr

00400f64 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400f64:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400f66:	4770      	bx	lr

00400f68 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400f68:	2803      	cmp	r0, #3
  400f6a:	d011      	beq.n	400f90 <pmc_mck_set_division+0x28>
  400f6c:	2804      	cmp	r0, #4
  400f6e:	d012      	beq.n	400f96 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400f70:	2802      	cmp	r0, #2
  400f72:	bf0c      	ite	eq
  400f74:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400f78:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400f7a:	4a08      	ldr	r2, [pc, #32]	; (400f9c <pmc_mck_set_division+0x34>)
  400f7c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f7e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400f82:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400f84:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f86:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f88:	f013 0f08 	tst.w	r3, #8
  400f8c:	d0fb      	beq.n	400f86 <pmc_mck_set_division+0x1e>
}
  400f8e:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400f90:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400f94:	e7f1      	b.n	400f7a <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400f96:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400f9a:	e7ee      	b.n	400f7a <pmc_mck_set_division+0x12>
  400f9c:	400e0600 	.word	0x400e0600

00400fa0 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400fa0:	4a17      	ldr	r2, [pc, #92]	; (401000 <pmc_switch_mck_to_pllack+0x60>)
  400fa2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400fa4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400fa8:	4318      	orrs	r0, r3
  400faa:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400fac:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fae:	f013 0f08 	tst.w	r3, #8
  400fb2:	d10a      	bne.n	400fca <pmc_switch_mck_to_pllack+0x2a>
  400fb4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400fb8:	4911      	ldr	r1, [pc, #68]	; (401000 <pmc_switch_mck_to_pllack+0x60>)
  400fba:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400fbc:	f012 0f08 	tst.w	r2, #8
  400fc0:	d103      	bne.n	400fca <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400fc2:	3b01      	subs	r3, #1
  400fc4:	d1f9      	bne.n	400fba <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400fc6:	2001      	movs	r0, #1
  400fc8:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400fca:	4a0d      	ldr	r2, [pc, #52]	; (401000 <pmc_switch_mck_to_pllack+0x60>)
  400fcc:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400fce:	f023 0303 	bic.w	r3, r3, #3
  400fd2:	f043 0302 	orr.w	r3, r3, #2
  400fd6:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400fd8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fda:	f013 0f08 	tst.w	r3, #8
  400fde:	d10a      	bne.n	400ff6 <pmc_switch_mck_to_pllack+0x56>
  400fe0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400fe4:	4906      	ldr	r1, [pc, #24]	; (401000 <pmc_switch_mck_to_pllack+0x60>)
  400fe6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400fe8:	f012 0f08 	tst.w	r2, #8
  400fec:	d105      	bne.n	400ffa <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400fee:	3b01      	subs	r3, #1
  400ff0:	d1f9      	bne.n	400fe6 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400ff2:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400ff4:	4770      	bx	lr
	return 0;
  400ff6:	2000      	movs	r0, #0
  400ff8:	4770      	bx	lr
  400ffa:	2000      	movs	r0, #0
  400ffc:	4770      	bx	lr
  400ffe:	bf00      	nop
  401000:	400e0600 	.word	0x400e0600

00401004 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  401004:	b9a0      	cbnz	r0, 401030 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401006:	480e      	ldr	r0, [pc, #56]	; (401040 <pmc_switch_mainck_to_xtal+0x3c>)
  401008:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  40100a:	0209      	lsls	r1, r1, #8
  40100c:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40100e:	4a0d      	ldr	r2, [pc, #52]	; (401044 <pmc_switch_mainck_to_xtal+0x40>)
  401010:	401a      	ands	r2, r3
  401012:	4b0d      	ldr	r3, [pc, #52]	; (401048 <pmc_switch_mainck_to_xtal+0x44>)
  401014:	4313      	orrs	r3, r2
  401016:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401018:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40101a:	4602      	mov	r2, r0
  40101c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40101e:	f013 0f01 	tst.w	r3, #1
  401022:	d0fb      	beq.n	40101c <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401024:	4a06      	ldr	r2, [pc, #24]	; (401040 <pmc_switch_mainck_to_xtal+0x3c>)
  401026:	6a11      	ldr	r1, [r2, #32]
  401028:	4b08      	ldr	r3, [pc, #32]	; (40104c <pmc_switch_mainck_to_xtal+0x48>)
  40102a:	430b      	orrs	r3, r1
  40102c:	6213      	str	r3, [r2, #32]
  40102e:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401030:	4903      	ldr	r1, [pc, #12]	; (401040 <pmc_switch_mainck_to_xtal+0x3c>)
  401032:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401034:	4a06      	ldr	r2, [pc, #24]	; (401050 <pmc_switch_mainck_to_xtal+0x4c>)
  401036:	401a      	ands	r2, r3
  401038:	4b06      	ldr	r3, [pc, #24]	; (401054 <pmc_switch_mainck_to_xtal+0x50>)
  40103a:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40103c:	620b      	str	r3, [r1, #32]
  40103e:	4770      	bx	lr
  401040:	400e0600 	.word	0x400e0600
  401044:	ffc8fffc 	.word	0xffc8fffc
  401048:	00370001 	.word	0x00370001
  40104c:	01370000 	.word	0x01370000
  401050:	fec8fffc 	.word	0xfec8fffc
  401054:	01370002 	.word	0x01370002

00401058 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  401058:	4b02      	ldr	r3, [pc, #8]	; (401064 <pmc_osc_is_ready_mainck+0xc>)
  40105a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40105c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401060:	4770      	bx	lr
  401062:	bf00      	nop
  401064:	400e0600 	.word	0x400e0600

00401068 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401068:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40106c:	4b01      	ldr	r3, [pc, #4]	; (401074 <pmc_disable_pllack+0xc>)
  40106e:	629a      	str	r2, [r3, #40]	; 0x28
  401070:	4770      	bx	lr
  401072:	bf00      	nop
  401074:	400e0600 	.word	0x400e0600

00401078 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401078:	4b02      	ldr	r3, [pc, #8]	; (401084 <pmc_is_locked_pllack+0xc>)
  40107a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40107c:	f000 0002 	and.w	r0, r0, #2
  401080:	4770      	bx	lr
  401082:	bf00      	nop
  401084:	400e0600 	.word	0x400e0600

00401088 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401088:	283f      	cmp	r0, #63	; 0x3f
  40108a:	d81e      	bhi.n	4010ca <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40108c:	281f      	cmp	r0, #31
  40108e:	d80c      	bhi.n	4010aa <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401090:	4b11      	ldr	r3, [pc, #68]	; (4010d8 <pmc_enable_periph_clk+0x50>)
  401092:	699a      	ldr	r2, [r3, #24]
  401094:	2301      	movs	r3, #1
  401096:	4083      	lsls	r3, r0
  401098:	4393      	bics	r3, r2
  40109a:	d018      	beq.n	4010ce <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40109c:	2301      	movs	r3, #1
  40109e:	fa03 f000 	lsl.w	r0, r3, r0
  4010a2:	4b0d      	ldr	r3, [pc, #52]	; (4010d8 <pmc_enable_periph_clk+0x50>)
  4010a4:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4010a6:	2000      	movs	r0, #0
  4010a8:	4770      	bx	lr
		ul_id -= 32;
  4010aa:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4010ac:	4b0a      	ldr	r3, [pc, #40]	; (4010d8 <pmc_enable_periph_clk+0x50>)
  4010ae:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4010b2:	2301      	movs	r3, #1
  4010b4:	4083      	lsls	r3, r0
  4010b6:	4393      	bics	r3, r2
  4010b8:	d00b      	beq.n	4010d2 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4010ba:	2301      	movs	r3, #1
  4010bc:	fa03 f000 	lsl.w	r0, r3, r0
  4010c0:	4b05      	ldr	r3, [pc, #20]	; (4010d8 <pmc_enable_periph_clk+0x50>)
  4010c2:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  4010c6:	2000      	movs	r0, #0
  4010c8:	4770      	bx	lr
		return 1;
  4010ca:	2001      	movs	r0, #1
  4010cc:	4770      	bx	lr
	return 0;
  4010ce:	2000      	movs	r0, #0
  4010d0:	4770      	bx	lr
  4010d2:	2000      	movs	r0, #0
}
  4010d4:	4770      	bx	lr
  4010d6:	bf00      	nop
  4010d8:	400e0600 	.word	0x400e0600

004010dc <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4010dc:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4010de:	0189      	lsls	r1, r1, #6
  4010e0:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4010e2:	2402      	movs	r4, #2
  4010e4:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4010e6:	f04f 31ff 	mov.w	r1, #4294967295
  4010ea:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  4010ec:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  4010ee:	605a      	str	r2, [r3, #4]
}
  4010f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  4010f4:	4770      	bx	lr

004010f6 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  4010f6:	0189      	lsls	r1, r1, #6
  4010f8:	2305      	movs	r3, #5
  4010fa:	5043      	str	r3, [r0, r1]
  4010fc:	4770      	bx	lr

004010fe <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4010fe:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  401102:	61ca      	str	r2, [r1, #28]
  401104:	4770      	bx	lr

00401106 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  401106:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  40110a:	624a      	str	r2, [r1, #36]	; 0x24
  40110c:	4770      	bx	lr

0040110e <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40110e:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  401112:	6a08      	ldr	r0, [r1, #32]
}
  401114:	4770      	bx	lr

00401116 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  401116:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  401118:	23ac      	movs	r3, #172	; 0xac
  40111a:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  40111c:	680b      	ldr	r3, [r1, #0]
  40111e:	684a      	ldr	r2, [r1, #4]
  401120:	fbb3 f3f2 	udiv	r3, r3, r2
  401124:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  401126:	1e5c      	subs	r4, r3, #1
  401128:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  40112c:	4294      	cmp	r4, r2
  40112e:	d808      	bhi.n	401142 <uart_init+0x2c>
		return 1;

	p_uart->UART_BRGR = cd;
  401130:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  401132:	688b      	ldr	r3, [r1, #8]
  401134:	6043      	str	r3, [r0, #4]
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  401136:	2350      	movs	r3, #80	; 0x50
  401138:	6003      	str	r3, [r0, #0]

	return 0;
  40113a:	2000      	movs	r0, #0
}
  40113c:	f85d 4b04 	ldr.w	r4, [sp], #4
  401140:	4770      	bx	lr
		return 1;
  401142:	2001      	movs	r0, #1
  401144:	e7fa      	b.n	40113c <uart_init+0x26>

00401146 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  401146:	6943      	ldr	r3, [r0, #20]
  401148:	f013 0f02 	tst.w	r3, #2
  40114c:	d002      	beq.n	401154 <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  40114e:	61c1      	str	r1, [r0, #28]
	return 0;
  401150:	2000      	movs	r0, #0
  401152:	4770      	bx	lr
		return 1;
  401154:	2001      	movs	r0, #1
}
  401156:	4770      	bx	lr

00401158 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  401158:	6943      	ldr	r3, [r0, #20]
  40115a:	f013 0f01 	tst.w	r3, #1
  40115e:	d003      	beq.n	401168 <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  401160:	6983      	ldr	r3, [r0, #24]
  401162:	700b      	strb	r3, [r1, #0]
	return 0;
  401164:	2000      	movs	r0, #0
  401166:	4770      	bx	lr
		return 1;
  401168:	2001      	movs	r0, #1
}
  40116a:	4770      	bx	lr

0040116c <board_init>:
		ioport_set_pin_sense_mode(pin, sense); \
	} \
	while (0)

void board_init(void)
{
  40116c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    /* Disable watchdog for now */
    WDT->WDT_MR = WDT_MR_WDDIS;
  40116e:	f44f 4500 	mov.w	r5, #32768	; 0x8000
  401172:	4b81      	ldr	r3, [pc, #516]	; (401378 <board_init+0x20c>)
  401174:	605d      	str	r5, [r3, #4]
  401176:	200a      	movs	r0, #10
  401178:	4c80      	ldr	r4, [pc, #512]	; (40137c <board_init+0x210>)
  40117a:	47a0      	blx	r4
  40117c:	200b      	movs	r0, #11
  40117e:	47a0      	blx	r4
  401180:	2010      	movs	r0, #16
  401182:	47a0      	blx	r4
		base->PIO_PUDR = mask;
  401184:	4a7e      	ldr	r2, [pc, #504]	; (401380 <board_init+0x214>)
  401186:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  40118a:	6613      	str	r3, [r2, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40118c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
		base->PIO_MDDR = mask;
  401190:	6553      	str	r3, [r2, #84]	; 0x54
		base->PIO_IFDR = mask;
  401192:	6253      	str	r3, [r2, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  401194:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  401198:	6f11      	ldr	r1, [r2, #112]	; 0x70
  40119a:	4319      	orrs	r1, r3
  40119c:	6711      	str	r1, [r2, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40119e:	6f51      	ldr	r1, [r2, #116]	; 0x74
  4011a0:	f421 1180 	bic.w	r1, r1, #1048576	; 0x100000
  4011a4:	6751      	str	r1, [r2, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4011a6:	6053      	str	r3, [r2, #4]
		base->PIO_PUDR = mask;
  4011a8:	f44f 1400 	mov.w	r4, #2097152	; 0x200000
  4011ac:	6614      	str	r4, [r2, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4011ae:	f8c2 4090 	str.w	r4, [r2, #144]	; 0x90
		base->PIO_MDDR = mask;
  4011b2:	6554      	str	r4, [r2, #84]	; 0x54
		base->PIO_IFDR = mask;
  4011b4:	6254      	str	r4, [r2, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4011b6:	f8c2 4080 	str.w	r4, [r2, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  4011ba:	6f13      	ldr	r3, [r2, #112]	; 0x70
  4011bc:	4323      	orrs	r3, r4
  4011be:	6713      	str	r3, [r2, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4011c0:	6f53      	ldr	r3, [r2, #116]	; 0x74
  4011c2:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
  4011c6:	6753      	str	r3, [r2, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4011c8:	6054      	str	r4, [r2, #4]
		base->PIO_PUDR = mask;
  4011ca:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  4011ce:	6613      	str	r3, [r2, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4011d0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
		base->PIO_MDDR = mask;
  4011d4:	6553      	str	r3, [r2, #84]	; 0x54
		base->PIO_IFDR = mask;
  4011d6:	6253      	str	r3, [r2, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4011d8:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  4011dc:	6f11      	ldr	r1, [r2, #112]	; 0x70
  4011de:	4319      	orrs	r1, r3
  4011e0:	6711      	str	r1, [r2, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4011e2:	6f51      	ldr	r1, [r2, #116]	; 0x74
  4011e4:	f421 0180 	bic.w	r1, r1, #4194304	; 0x400000
  4011e8:	6751      	str	r1, [r2, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4011ea:	6053      	str	r3, [r2, #4]
		base->PIO_PUDR = mask;
  4011ec:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  4011f0:	6613      	str	r3, [r2, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4011f2:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
		base->PIO_MDDR = mask;
  4011f6:	6553      	str	r3, [r2, #84]	; 0x54
		base->PIO_IFDR = mask;
  4011f8:	6253      	str	r3, [r2, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4011fa:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  4011fe:	6f11      	ldr	r1, [r2, #112]	; 0x70
  401200:	4319      	orrs	r1, r3
  401202:	6711      	str	r1, [r2, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  401204:	6f51      	ldr	r1, [r2, #116]	; 0x74
  401206:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  40120a:	6751      	str	r1, [r2, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40120c:	6053      	str	r3, [r2, #4]
		base->PIO_PUDR = mask;
  40120e:	4b5d      	ldr	r3, [pc, #372]	; (401384 <board_init+0x218>)
  401210:	2102      	movs	r1, #2
  401212:	6619      	str	r1, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  401214:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  401218:	6559      	str	r1, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40121a:	6259      	str	r1, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40121c:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401220:	6f18      	ldr	r0, [r3, #112]	; 0x70
  401222:	f020 0002 	bic.w	r0, r0, #2
  401226:	6718      	str	r0, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  401228:	6f58      	ldr	r0, [r3, #116]	; 0x74
  40122a:	4308      	orrs	r0, r1
  40122c:	6758      	str	r0, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40122e:	6059      	str	r1, [r3, #4]
		base->PIO_PUDR = mask;
  401230:	2101      	movs	r1, #1
  401232:	6619      	str	r1, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  401234:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  401238:	6559      	str	r1, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40123a:	6259      	str	r1, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40123c:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401240:	6f18      	ldr	r0, [r3, #112]	; 0x70
  401242:	f020 0001 	bic.w	r0, r0, #1
  401246:	6718      	str	r0, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  401248:	6f58      	ldr	r0, [r3, #116]	; 0x74
  40124a:	4308      	orrs	r0, r1
  40124c:	6758      	str	r0, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40124e:	6059      	str	r1, [r3, #4]
		base->PIO_PUDR = mask;
  401250:	f44f 5000 	mov.w	r0, #8192	; 0x2000
  401254:	6618      	str	r0, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  401256:	f8c3 0090 	str.w	r0, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40125a:	6558      	str	r0, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40125c:	6258      	str	r0, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40125e:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401262:	6f1e      	ldr	r6, [r3, #112]	; 0x70
  401264:	f426 5600 	bic.w	r6, r6, #8192	; 0x2000
  401268:	671e      	str	r6, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  40126a:	6f5e      	ldr	r6, [r3, #116]	; 0x74
  40126c:	4306      	orrs	r6, r0
  40126e:	675e      	str	r6, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  401270:	6058      	str	r0, [r3, #4]
		base->PIO_PUDR = mask;
  401272:	2004      	movs	r0, #4
  401274:	6618      	str	r0, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  401276:	f8c3 0090 	str.w	r0, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40127a:	6558      	str	r0, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40127c:	6258      	str	r0, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40127e:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401282:	6f1e      	ldr	r6, [r3, #112]	; 0x70
  401284:	f026 0604 	bic.w	r6, r6, #4
  401288:	671e      	str	r6, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  40128a:	6f5e      	ldr	r6, [r3, #116]	; 0x74
  40128c:	4306      	orrs	r6, r0
  40128e:	675e      	str	r6, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  401290:	6058      	str	r0, [r3, #4]
		base->PIO_PUDR = mask;
  401292:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
  401296:	2008      	movs	r0, #8
  401298:	6618      	str	r0, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40129a:	f8c3 0090 	str.w	r0, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40129e:	6558      	str	r0, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4012a0:	6258      	str	r0, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4012a2:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4012a6:	6f1e      	ldr	r6, [r3, #112]	; 0x70
  4012a8:	f026 0608 	bic.w	r6, r6, #8
  4012ac:	671e      	str	r6, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4012ae:	6f5e      	ldr	r6, [r3, #116]	; 0x74
  4012b0:	f026 0608 	bic.w	r6, r6, #8
  4012b4:	675e      	str	r6, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4012b6:	6058      	str	r0, [r3, #4]
		base->PIO_PUDR = mask;
  4012b8:	2010      	movs	r0, #16
  4012ba:	6618      	str	r0, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4012bc:	f8c3 0090 	str.w	r0, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4012c0:	6558      	str	r0, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4012c2:	6258      	str	r0, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4012c4:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4012c8:	6f1e      	ldr	r6, [r3, #112]	; 0x70
  4012ca:	f026 0610 	bic.w	r6, r6, #16
  4012ce:	671e      	str	r6, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4012d0:	6f5e      	ldr	r6, [r3, #116]	; 0x74
  4012d2:	f026 0610 	bic.w	r6, r6, #16
  4012d6:	675e      	str	r6, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4012d8:	6058      	str	r0, [r3, #4]
		base->PIO_PUDR = mask;
  4012da:	f44f 7000 	mov.w	r0, #512	; 0x200
  4012de:	6618      	str	r0, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4012e0:	f8c3 0090 	str.w	r0, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4012e4:	6558      	str	r0, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4012e6:	6258      	str	r0, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4012e8:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4012ec:	6f1e      	ldr	r6, [r3, #112]	; 0x70
  4012ee:	f426 7600 	bic.w	r6, r6, #512	; 0x200
  4012f2:	671e      	str	r6, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4012f4:	6f5e      	ldr	r6, [r3, #116]	; 0x74
  4012f6:	f426 7600 	bic.w	r6, r6, #512	; 0x200
  4012fa:	675e      	str	r6, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4012fc:	6058      	str	r0, [r3, #4]
		base->PIO_PUDR = mask;
  4012fe:	f44f 6080 	mov.w	r0, #1024	; 0x400
  401302:	6618      	str	r0, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  401304:	f8c3 0090 	str.w	r0, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  401308:	6558      	str	r0, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40130a:	6258      	str	r0, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40130c:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401310:	6f1e      	ldr	r6, [r3, #112]	; 0x70
  401312:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
  401316:	671e      	str	r6, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  401318:	6f5e      	ldr	r6, [r3, #116]	; 0x74
  40131a:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
  40131e:	675e      	str	r6, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  401320:	6058      	str	r0, [r3, #4]
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401322:	f44f 7780 	mov.w	r7, #256	; 0x100
  401326:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401328:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40132c:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
  401330:	6116      	str	r6, [r2, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401332:	f8c2 60a0 	str.w	r6, [r2, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401336:	631f      	str	r7, [r3, #48]	; 0x30
  401338:	6316      	str	r6, [r2, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  40133a:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  40133e:	615e      	str	r6, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401340:	f8c3 60a0 	str.w	r6, [r3, #160]	; 0xa0
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401344:	615c      	str	r4, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401346:	f8c3 40a0 	str.w	r4, [r3, #160]	; 0xa0
		base->PIO_PUDR = mask;
  40134a:	6619      	str	r1, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40134c:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  401350:	6559      	str	r1, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  401352:	6259      	str	r1, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  401354:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  401358:	6f1c      	ldr	r4, [r3, #112]	; 0x70
  40135a:	430c      	orrs	r4, r1
  40135c:	671c      	str	r4, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40135e:	6f5c      	ldr	r4, [r3, #116]	; 0x74
  401360:	f024 0401 	bic.w	r4, r4, #1
  401364:	675c      	str	r4, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  401366:	6059      	str	r1, [r3, #4]
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401368:	6115      	str	r5, [r2, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40136a:	f8c2 50a0 	str.w	r5, [r2, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40136e:	6315      	str	r5, [r2, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401370:	6158      	str	r0, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401372:	f8c3 00a0 	str.w	r0, [r3, #160]	; 0xa0
  401376:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401378:	400e1850 	.word	0x400e1850
  40137c:	00401089 	.word	0x00401089
  401380:	400e1400 	.word	0x400e1400
  401384:	400e1000 	.word	0x400e1000

00401388 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401388:	e7fe      	b.n	401388 <Dummy_Handler>
	...

0040138c <Reset_Handler>:
{
  40138c:	b500      	push	{lr}
  40138e:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401390:	4b25      	ldr	r3, [pc, #148]	; (401428 <Reset_Handler+0x9c>)
  401392:	4a26      	ldr	r2, [pc, #152]	; (40142c <Reset_Handler+0xa0>)
  401394:	429a      	cmp	r2, r3
  401396:	d010      	beq.n	4013ba <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401398:	4b25      	ldr	r3, [pc, #148]	; (401430 <Reset_Handler+0xa4>)
  40139a:	4a23      	ldr	r2, [pc, #140]	; (401428 <Reset_Handler+0x9c>)
  40139c:	429a      	cmp	r2, r3
  40139e:	d20c      	bcs.n	4013ba <Reset_Handler+0x2e>
  4013a0:	3b01      	subs	r3, #1
  4013a2:	1a9b      	subs	r3, r3, r2
  4013a4:	f023 0303 	bic.w	r3, r3, #3
  4013a8:	3304      	adds	r3, #4
  4013aa:	4413      	add	r3, r2
  4013ac:	491f      	ldr	r1, [pc, #124]	; (40142c <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4013ae:	f851 0b04 	ldr.w	r0, [r1], #4
  4013b2:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4013b6:	429a      	cmp	r2, r3
  4013b8:	d1f9      	bne.n	4013ae <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4013ba:	4b1e      	ldr	r3, [pc, #120]	; (401434 <Reset_Handler+0xa8>)
  4013bc:	4a1e      	ldr	r2, [pc, #120]	; (401438 <Reset_Handler+0xac>)
  4013be:	429a      	cmp	r2, r3
  4013c0:	d20a      	bcs.n	4013d8 <Reset_Handler+0x4c>
  4013c2:	3b01      	subs	r3, #1
  4013c4:	1a9b      	subs	r3, r3, r2
  4013c6:	f023 0303 	bic.w	r3, r3, #3
  4013ca:	3304      	adds	r3, #4
  4013cc:	4413      	add	r3, r2
                *pDest++ = 0;
  4013ce:	2100      	movs	r1, #0
  4013d0:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4013d4:	4293      	cmp	r3, r2
  4013d6:	d1fb      	bne.n	4013d0 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4013d8:	4a18      	ldr	r2, [pc, #96]	; (40143c <Reset_Handler+0xb0>)
  4013da:	4b19      	ldr	r3, [pc, #100]	; (401440 <Reset_Handler+0xb4>)
  4013dc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4013e0:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4013e2:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4013e6:	fab3 f383 	clz	r3, r3
  4013ea:	095b      	lsrs	r3, r3, #5
  4013ec:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4013ee:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  4013f0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4013f4:	2200      	movs	r2, #0
  4013f6:	4b13      	ldr	r3, [pc, #76]	; (401444 <Reset_Handler+0xb8>)
  4013f8:	701a      	strb	r2, [r3, #0]
	return flags;
  4013fa:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4013fc:	4a12      	ldr	r2, [pc, #72]	; (401448 <Reset_Handler+0xbc>)
  4013fe:	6813      	ldr	r3, [r2, #0]
  401400:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401404:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401406:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40140a:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40140e:	b129      	cbz	r1, 40141c <Reset_Handler+0x90>
		cpu_irq_enable();
  401410:	2201      	movs	r2, #1
  401412:	4b0c      	ldr	r3, [pc, #48]	; (401444 <Reset_Handler+0xb8>)
  401414:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401416:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40141a:	b662      	cpsie	i
        __libc_init_array();
  40141c:	4b0b      	ldr	r3, [pc, #44]	; (40144c <Reset_Handler+0xc0>)
  40141e:	4798      	blx	r3
        main();
  401420:	4b0b      	ldr	r3, [pc, #44]	; (401450 <Reset_Handler+0xc4>)
  401422:	4798      	blx	r3
  401424:	e7fe      	b.n	401424 <Reset_Handler+0x98>
  401426:	bf00      	nop
  401428:	20400000 	.word	0x20400000
  40142c:	004075ec 	.word	0x004075ec
  401430:	204009c8 	.word	0x204009c8
  401434:	20401680 	.word	0x20401680
  401438:	204009c8 	.word	0x204009c8
  40143c:	e000ed00 	.word	0xe000ed00
  401440:	00400000 	.word	0x00400000
  401444:	20400010 	.word	0x20400010
  401448:	e000ed88 	.word	0xe000ed88
  40144c:	004020e1 	.word	0x004020e1
  401450:	00400635 	.word	0x00400635

00401454 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401454:	4b3b      	ldr	r3, [pc, #236]	; (401544 <SystemCoreClockUpdate+0xf0>)
  401456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401458:	f003 0303 	and.w	r3, r3, #3
  40145c:	2b01      	cmp	r3, #1
  40145e:	d01d      	beq.n	40149c <SystemCoreClockUpdate+0x48>
  401460:	b183      	cbz	r3, 401484 <SystemCoreClockUpdate+0x30>
  401462:	2b02      	cmp	r3, #2
  401464:	d036      	beq.n	4014d4 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401466:	4b37      	ldr	r3, [pc, #220]	; (401544 <SystemCoreClockUpdate+0xf0>)
  401468:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40146a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40146e:	2b70      	cmp	r3, #112	; 0x70
  401470:	d05f      	beq.n	401532 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401472:	4b34      	ldr	r3, [pc, #208]	; (401544 <SystemCoreClockUpdate+0xf0>)
  401474:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401476:	4934      	ldr	r1, [pc, #208]	; (401548 <SystemCoreClockUpdate+0xf4>)
  401478:	f3c2 1202 	ubfx	r2, r2, #4, #3
  40147c:	680b      	ldr	r3, [r1, #0]
  40147e:	40d3      	lsrs	r3, r2
  401480:	600b      	str	r3, [r1, #0]
  401482:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401484:	4b31      	ldr	r3, [pc, #196]	; (40154c <SystemCoreClockUpdate+0xf8>)
  401486:	695b      	ldr	r3, [r3, #20]
  401488:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40148c:	bf14      	ite	ne
  40148e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401492:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401496:	4b2c      	ldr	r3, [pc, #176]	; (401548 <SystemCoreClockUpdate+0xf4>)
  401498:	601a      	str	r2, [r3, #0]
  40149a:	e7e4      	b.n	401466 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  40149c:	4b29      	ldr	r3, [pc, #164]	; (401544 <SystemCoreClockUpdate+0xf0>)
  40149e:	6a1b      	ldr	r3, [r3, #32]
  4014a0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4014a4:	d003      	beq.n	4014ae <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4014a6:	4a2a      	ldr	r2, [pc, #168]	; (401550 <SystemCoreClockUpdate+0xfc>)
  4014a8:	4b27      	ldr	r3, [pc, #156]	; (401548 <SystemCoreClockUpdate+0xf4>)
  4014aa:	601a      	str	r2, [r3, #0]
  4014ac:	e7db      	b.n	401466 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4014ae:	4a29      	ldr	r2, [pc, #164]	; (401554 <SystemCoreClockUpdate+0x100>)
  4014b0:	4b25      	ldr	r3, [pc, #148]	; (401548 <SystemCoreClockUpdate+0xf4>)
  4014b2:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4014b4:	4b23      	ldr	r3, [pc, #140]	; (401544 <SystemCoreClockUpdate+0xf0>)
  4014b6:	6a1b      	ldr	r3, [r3, #32]
  4014b8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014bc:	2b10      	cmp	r3, #16
  4014be:	d005      	beq.n	4014cc <SystemCoreClockUpdate+0x78>
  4014c0:	2b20      	cmp	r3, #32
  4014c2:	d1d0      	bne.n	401466 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4014c4:	4a22      	ldr	r2, [pc, #136]	; (401550 <SystemCoreClockUpdate+0xfc>)
  4014c6:	4b20      	ldr	r3, [pc, #128]	; (401548 <SystemCoreClockUpdate+0xf4>)
  4014c8:	601a      	str	r2, [r3, #0]
          break;
  4014ca:	e7cc      	b.n	401466 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4014cc:	4a22      	ldr	r2, [pc, #136]	; (401558 <SystemCoreClockUpdate+0x104>)
  4014ce:	4b1e      	ldr	r3, [pc, #120]	; (401548 <SystemCoreClockUpdate+0xf4>)
  4014d0:	601a      	str	r2, [r3, #0]
          break;
  4014d2:	e7c8      	b.n	401466 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4014d4:	4b1b      	ldr	r3, [pc, #108]	; (401544 <SystemCoreClockUpdate+0xf0>)
  4014d6:	6a1b      	ldr	r3, [r3, #32]
  4014d8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4014dc:	d016      	beq.n	40150c <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4014de:	4a1c      	ldr	r2, [pc, #112]	; (401550 <SystemCoreClockUpdate+0xfc>)
  4014e0:	4b19      	ldr	r3, [pc, #100]	; (401548 <SystemCoreClockUpdate+0xf4>)
  4014e2:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4014e4:	4b17      	ldr	r3, [pc, #92]	; (401544 <SystemCoreClockUpdate+0xf0>)
  4014e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014e8:	f003 0303 	and.w	r3, r3, #3
  4014ec:	2b02      	cmp	r3, #2
  4014ee:	d1ba      	bne.n	401466 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4014f0:	4a14      	ldr	r2, [pc, #80]	; (401544 <SystemCoreClockUpdate+0xf0>)
  4014f2:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4014f4:	6a92      	ldr	r2, [r2, #40]	; 0x28
  4014f6:	4814      	ldr	r0, [pc, #80]	; (401548 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4014f8:	f3c1 410a 	ubfx	r1, r1, #16, #11
  4014fc:	6803      	ldr	r3, [r0, #0]
  4014fe:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401502:	b2d2      	uxtb	r2, r2
  401504:	fbb3 f3f2 	udiv	r3, r3, r2
  401508:	6003      	str	r3, [r0, #0]
  40150a:	e7ac      	b.n	401466 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40150c:	4a11      	ldr	r2, [pc, #68]	; (401554 <SystemCoreClockUpdate+0x100>)
  40150e:	4b0e      	ldr	r3, [pc, #56]	; (401548 <SystemCoreClockUpdate+0xf4>)
  401510:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401512:	4b0c      	ldr	r3, [pc, #48]	; (401544 <SystemCoreClockUpdate+0xf0>)
  401514:	6a1b      	ldr	r3, [r3, #32]
  401516:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40151a:	2b10      	cmp	r3, #16
  40151c:	d005      	beq.n	40152a <SystemCoreClockUpdate+0xd6>
  40151e:	2b20      	cmp	r3, #32
  401520:	d1e0      	bne.n	4014e4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401522:	4a0b      	ldr	r2, [pc, #44]	; (401550 <SystemCoreClockUpdate+0xfc>)
  401524:	4b08      	ldr	r3, [pc, #32]	; (401548 <SystemCoreClockUpdate+0xf4>)
  401526:	601a      	str	r2, [r3, #0]
          break;
  401528:	e7dc      	b.n	4014e4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  40152a:	4a0b      	ldr	r2, [pc, #44]	; (401558 <SystemCoreClockUpdate+0x104>)
  40152c:	4b06      	ldr	r3, [pc, #24]	; (401548 <SystemCoreClockUpdate+0xf4>)
  40152e:	601a      	str	r2, [r3, #0]
          break;
  401530:	e7d8      	b.n	4014e4 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401532:	4a05      	ldr	r2, [pc, #20]	; (401548 <SystemCoreClockUpdate+0xf4>)
  401534:	6813      	ldr	r3, [r2, #0]
  401536:	4909      	ldr	r1, [pc, #36]	; (40155c <SystemCoreClockUpdate+0x108>)
  401538:	fba1 1303 	umull	r1, r3, r1, r3
  40153c:	085b      	lsrs	r3, r3, #1
  40153e:	6013      	str	r3, [r2, #0]
  401540:	4770      	bx	lr
  401542:	bf00      	nop
  401544:	400e0600 	.word	0x400e0600
  401548:	20400014 	.word	0x20400014
  40154c:	400e1810 	.word	0x400e1810
  401550:	00b71b00 	.word	0x00b71b00
  401554:	003d0900 	.word	0x003d0900
  401558:	007a1200 	.word	0x007a1200
  40155c:	aaaaaaab 	.word	0xaaaaaaab

00401560 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401560:	4b16      	ldr	r3, [pc, #88]	; (4015bc <system_init_flash+0x5c>)
  401562:	4298      	cmp	r0, r3
  401564:	d913      	bls.n	40158e <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401566:	4b16      	ldr	r3, [pc, #88]	; (4015c0 <system_init_flash+0x60>)
  401568:	4298      	cmp	r0, r3
  40156a:	d915      	bls.n	401598 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  40156c:	4b15      	ldr	r3, [pc, #84]	; (4015c4 <system_init_flash+0x64>)
  40156e:	4298      	cmp	r0, r3
  401570:	d916      	bls.n	4015a0 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401572:	4b15      	ldr	r3, [pc, #84]	; (4015c8 <system_init_flash+0x68>)
  401574:	4298      	cmp	r0, r3
  401576:	d917      	bls.n	4015a8 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401578:	4b14      	ldr	r3, [pc, #80]	; (4015cc <system_init_flash+0x6c>)
  40157a:	4298      	cmp	r0, r3
  40157c:	d918      	bls.n	4015b0 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40157e:	4b14      	ldr	r3, [pc, #80]	; (4015d0 <system_init_flash+0x70>)
  401580:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401582:	bf94      	ite	ls
  401584:	4a13      	ldrls	r2, [pc, #76]	; (4015d4 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401586:	4a14      	ldrhi	r2, [pc, #80]	; (4015d8 <system_init_flash+0x78>)
  401588:	4b14      	ldr	r3, [pc, #80]	; (4015dc <system_init_flash+0x7c>)
  40158a:	601a      	str	r2, [r3, #0]
  40158c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40158e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401592:	4b12      	ldr	r3, [pc, #72]	; (4015dc <system_init_flash+0x7c>)
  401594:	601a      	str	r2, [r3, #0]
  401596:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401598:	4a11      	ldr	r2, [pc, #68]	; (4015e0 <system_init_flash+0x80>)
  40159a:	4b10      	ldr	r3, [pc, #64]	; (4015dc <system_init_flash+0x7c>)
  40159c:	601a      	str	r2, [r3, #0]
  40159e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4015a0:	4a10      	ldr	r2, [pc, #64]	; (4015e4 <system_init_flash+0x84>)
  4015a2:	4b0e      	ldr	r3, [pc, #56]	; (4015dc <system_init_flash+0x7c>)
  4015a4:	601a      	str	r2, [r3, #0]
  4015a6:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4015a8:	4a0f      	ldr	r2, [pc, #60]	; (4015e8 <system_init_flash+0x88>)
  4015aa:	4b0c      	ldr	r3, [pc, #48]	; (4015dc <system_init_flash+0x7c>)
  4015ac:	601a      	str	r2, [r3, #0]
  4015ae:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4015b0:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4015b4:	4b09      	ldr	r3, [pc, #36]	; (4015dc <system_init_flash+0x7c>)
  4015b6:	601a      	str	r2, [r3, #0]
  4015b8:	4770      	bx	lr
  4015ba:	bf00      	nop
  4015bc:	015ef3bf 	.word	0x015ef3bf
  4015c0:	02bde77f 	.word	0x02bde77f
  4015c4:	041cdb3f 	.word	0x041cdb3f
  4015c8:	057bceff 	.word	0x057bceff
  4015cc:	06dac2bf 	.word	0x06dac2bf
  4015d0:	0839b67f 	.word	0x0839b67f
  4015d4:	04000500 	.word	0x04000500
  4015d8:	04000600 	.word	0x04000600
  4015dc:	400e0c00 	.word	0x400e0c00
  4015e0:	04000100 	.word	0x04000100
  4015e4:	04000200 	.word	0x04000200
  4015e8:	04000300 	.word	0x04000300

004015ec <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4015ec:	4b0a      	ldr	r3, [pc, #40]	; (401618 <_sbrk+0x2c>)
  4015ee:	681b      	ldr	r3, [r3, #0]
  4015f0:	b153      	cbz	r3, 401608 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4015f2:	4b09      	ldr	r3, [pc, #36]	; (401618 <_sbrk+0x2c>)
  4015f4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4015f6:	181a      	adds	r2, r3, r0
  4015f8:	4908      	ldr	r1, [pc, #32]	; (40161c <_sbrk+0x30>)
  4015fa:	4291      	cmp	r1, r2
  4015fc:	db08      	blt.n	401610 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4015fe:	4610      	mov	r0, r2
  401600:	4a05      	ldr	r2, [pc, #20]	; (401618 <_sbrk+0x2c>)
  401602:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401604:	4618      	mov	r0, r3
  401606:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401608:	4a05      	ldr	r2, [pc, #20]	; (401620 <_sbrk+0x34>)
  40160a:	4b03      	ldr	r3, [pc, #12]	; (401618 <_sbrk+0x2c>)
  40160c:	601a      	str	r2, [r3, #0]
  40160e:	e7f0      	b.n	4015f2 <_sbrk+0x6>
		return (caddr_t) -1;	
  401610:	f04f 30ff 	mov.w	r0, #4294967295
}
  401614:	4770      	bx	lr
  401616:	bf00      	nop
  401618:	20401594 	.word	0x20401594
  40161c:	2045fffc 	.word	0x2045fffc
  401620:	20403880 	.word	0x20403880

00401624 <_close>:

extern int _close(int file)
{   
    (void)file;
	return -1;
}
  401624:	f04f 30ff 	mov.w	r0, #4294967295
  401628:	4770      	bx	lr

0040162a <_fstat>:

extern int _fstat(int file, struct stat *st)
{
    (void)file;
	st->st_mode = S_IFCHR;
  40162a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  40162e:	604b      	str	r3, [r1, #4]

	return 0;
}
  401630:	2000      	movs	r0, #0
  401632:	4770      	bx	lr

00401634 <_isatty>:

extern int _isatty(int file)
{
    (void)file;
	return 1;
}
  401634:	2001      	movs	r0, #1
  401636:	4770      	bx	lr

00401638 <_lseek>:
{
    (void)file;
    (void)ptr;
    (void)dir;
	return 0;
}
  401638:	2000      	movs	r0, #0
  40163a:	4770      	bx	lr

0040163c <__aeabi_drsub>:
  40163c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401640:	e002      	b.n	401648 <__adddf3>
  401642:	bf00      	nop

00401644 <__aeabi_dsub>:
  401644:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401648 <__adddf3>:
  401648:	b530      	push	{r4, r5, lr}
  40164a:	ea4f 0441 	mov.w	r4, r1, lsl #1
  40164e:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401652:	ea94 0f05 	teq	r4, r5
  401656:	bf08      	it	eq
  401658:	ea90 0f02 	teqeq	r0, r2
  40165c:	bf1f      	itttt	ne
  40165e:	ea54 0c00 	orrsne.w	ip, r4, r0
  401662:	ea55 0c02 	orrsne.w	ip, r5, r2
  401666:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40166a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40166e:	f000 80e2 	beq.w	401836 <__adddf3+0x1ee>
  401672:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401676:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40167a:	bfb8      	it	lt
  40167c:	426d      	neglt	r5, r5
  40167e:	dd0c      	ble.n	40169a <__adddf3+0x52>
  401680:	442c      	add	r4, r5
  401682:	ea80 0202 	eor.w	r2, r0, r2
  401686:	ea81 0303 	eor.w	r3, r1, r3
  40168a:	ea82 0000 	eor.w	r0, r2, r0
  40168e:	ea83 0101 	eor.w	r1, r3, r1
  401692:	ea80 0202 	eor.w	r2, r0, r2
  401696:	ea81 0303 	eor.w	r3, r1, r3
  40169a:	2d36      	cmp	r5, #54	; 0x36
  40169c:	bf88      	it	hi
  40169e:	bd30      	pophi	{r4, r5, pc}
  4016a0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4016a4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4016a8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4016ac:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4016b0:	d002      	beq.n	4016b8 <__adddf3+0x70>
  4016b2:	4240      	negs	r0, r0
  4016b4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4016b8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  4016bc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4016c0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  4016c4:	d002      	beq.n	4016cc <__adddf3+0x84>
  4016c6:	4252      	negs	r2, r2
  4016c8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4016cc:	ea94 0f05 	teq	r4, r5
  4016d0:	f000 80a7 	beq.w	401822 <__adddf3+0x1da>
  4016d4:	f1a4 0401 	sub.w	r4, r4, #1
  4016d8:	f1d5 0e20 	rsbs	lr, r5, #32
  4016dc:	db0d      	blt.n	4016fa <__adddf3+0xb2>
  4016de:	fa02 fc0e 	lsl.w	ip, r2, lr
  4016e2:	fa22 f205 	lsr.w	r2, r2, r5
  4016e6:	1880      	adds	r0, r0, r2
  4016e8:	f141 0100 	adc.w	r1, r1, #0
  4016ec:	fa03 f20e 	lsl.w	r2, r3, lr
  4016f0:	1880      	adds	r0, r0, r2
  4016f2:	fa43 f305 	asr.w	r3, r3, r5
  4016f6:	4159      	adcs	r1, r3
  4016f8:	e00e      	b.n	401718 <__adddf3+0xd0>
  4016fa:	f1a5 0520 	sub.w	r5, r5, #32
  4016fe:	f10e 0e20 	add.w	lr, lr, #32
  401702:	2a01      	cmp	r2, #1
  401704:	fa03 fc0e 	lsl.w	ip, r3, lr
  401708:	bf28      	it	cs
  40170a:	f04c 0c02 	orrcs.w	ip, ip, #2
  40170e:	fa43 f305 	asr.w	r3, r3, r5
  401712:	18c0      	adds	r0, r0, r3
  401714:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401718:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40171c:	d507      	bpl.n	40172e <__adddf3+0xe6>
  40171e:	f04f 0e00 	mov.w	lr, #0
  401722:	f1dc 0c00 	rsbs	ip, ip, #0
  401726:	eb7e 0000 	sbcs.w	r0, lr, r0
  40172a:	eb6e 0101 	sbc.w	r1, lr, r1
  40172e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401732:	d31b      	bcc.n	40176c <__adddf3+0x124>
  401734:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401738:	d30c      	bcc.n	401754 <__adddf3+0x10c>
  40173a:	0849      	lsrs	r1, r1, #1
  40173c:	ea5f 0030 	movs.w	r0, r0, rrx
  401740:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401744:	f104 0401 	add.w	r4, r4, #1
  401748:	ea4f 5244 	mov.w	r2, r4, lsl #21
  40174c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401750:	f080 809a 	bcs.w	401888 <__adddf3+0x240>
  401754:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401758:	bf08      	it	eq
  40175a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40175e:	f150 0000 	adcs.w	r0, r0, #0
  401762:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401766:	ea41 0105 	orr.w	r1, r1, r5
  40176a:	bd30      	pop	{r4, r5, pc}
  40176c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401770:	4140      	adcs	r0, r0
  401772:	eb41 0101 	adc.w	r1, r1, r1
  401776:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40177a:	f1a4 0401 	sub.w	r4, r4, #1
  40177e:	d1e9      	bne.n	401754 <__adddf3+0x10c>
  401780:	f091 0f00 	teq	r1, #0
  401784:	bf04      	itt	eq
  401786:	4601      	moveq	r1, r0
  401788:	2000      	moveq	r0, #0
  40178a:	fab1 f381 	clz	r3, r1
  40178e:	bf08      	it	eq
  401790:	3320      	addeq	r3, #32
  401792:	f1a3 030b 	sub.w	r3, r3, #11
  401796:	f1b3 0220 	subs.w	r2, r3, #32
  40179a:	da0c      	bge.n	4017b6 <__adddf3+0x16e>
  40179c:	320c      	adds	r2, #12
  40179e:	dd08      	ble.n	4017b2 <__adddf3+0x16a>
  4017a0:	f102 0c14 	add.w	ip, r2, #20
  4017a4:	f1c2 020c 	rsb	r2, r2, #12
  4017a8:	fa01 f00c 	lsl.w	r0, r1, ip
  4017ac:	fa21 f102 	lsr.w	r1, r1, r2
  4017b0:	e00c      	b.n	4017cc <__adddf3+0x184>
  4017b2:	f102 0214 	add.w	r2, r2, #20
  4017b6:	bfd8      	it	le
  4017b8:	f1c2 0c20 	rsble	ip, r2, #32
  4017bc:	fa01 f102 	lsl.w	r1, r1, r2
  4017c0:	fa20 fc0c 	lsr.w	ip, r0, ip
  4017c4:	bfdc      	itt	le
  4017c6:	ea41 010c 	orrle.w	r1, r1, ip
  4017ca:	4090      	lslle	r0, r2
  4017cc:	1ae4      	subs	r4, r4, r3
  4017ce:	bfa2      	ittt	ge
  4017d0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  4017d4:	4329      	orrge	r1, r5
  4017d6:	bd30      	popge	{r4, r5, pc}
  4017d8:	ea6f 0404 	mvn.w	r4, r4
  4017dc:	3c1f      	subs	r4, #31
  4017de:	da1c      	bge.n	40181a <__adddf3+0x1d2>
  4017e0:	340c      	adds	r4, #12
  4017e2:	dc0e      	bgt.n	401802 <__adddf3+0x1ba>
  4017e4:	f104 0414 	add.w	r4, r4, #20
  4017e8:	f1c4 0220 	rsb	r2, r4, #32
  4017ec:	fa20 f004 	lsr.w	r0, r0, r4
  4017f0:	fa01 f302 	lsl.w	r3, r1, r2
  4017f4:	ea40 0003 	orr.w	r0, r0, r3
  4017f8:	fa21 f304 	lsr.w	r3, r1, r4
  4017fc:	ea45 0103 	orr.w	r1, r5, r3
  401800:	bd30      	pop	{r4, r5, pc}
  401802:	f1c4 040c 	rsb	r4, r4, #12
  401806:	f1c4 0220 	rsb	r2, r4, #32
  40180a:	fa20 f002 	lsr.w	r0, r0, r2
  40180e:	fa01 f304 	lsl.w	r3, r1, r4
  401812:	ea40 0003 	orr.w	r0, r0, r3
  401816:	4629      	mov	r1, r5
  401818:	bd30      	pop	{r4, r5, pc}
  40181a:	fa21 f004 	lsr.w	r0, r1, r4
  40181e:	4629      	mov	r1, r5
  401820:	bd30      	pop	{r4, r5, pc}
  401822:	f094 0f00 	teq	r4, #0
  401826:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  40182a:	bf06      	itte	eq
  40182c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401830:	3401      	addeq	r4, #1
  401832:	3d01      	subne	r5, #1
  401834:	e74e      	b.n	4016d4 <__adddf3+0x8c>
  401836:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40183a:	bf18      	it	ne
  40183c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401840:	d029      	beq.n	401896 <__adddf3+0x24e>
  401842:	ea94 0f05 	teq	r4, r5
  401846:	bf08      	it	eq
  401848:	ea90 0f02 	teqeq	r0, r2
  40184c:	d005      	beq.n	40185a <__adddf3+0x212>
  40184e:	ea54 0c00 	orrs.w	ip, r4, r0
  401852:	bf04      	itt	eq
  401854:	4619      	moveq	r1, r3
  401856:	4610      	moveq	r0, r2
  401858:	bd30      	pop	{r4, r5, pc}
  40185a:	ea91 0f03 	teq	r1, r3
  40185e:	bf1e      	ittt	ne
  401860:	2100      	movne	r1, #0
  401862:	2000      	movne	r0, #0
  401864:	bd30      	popne	{r4, r5, pc}
  401866:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40186a:	d105      	bne.n	401878 <__adddf3+0x230>
  40186c:	0040      	lsls	r0, r0, #1
  40186e:	4149      	adcs	r1, r1
  401870:	bf28      	it	cs
  401872:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401876:	bd30      	pop	{r4, r5, pc}
  401878:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40187c:	bf3c      	itt	cc
  40187e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401882:	bd30      	popcc	{r4, r5, pc}
  401884:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401888:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40188c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401890:	f04f 0000 	mov.w	r0, #0
  401894:	bd30      	pop	{r4, r5, pc}
  401896:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40189a:	bf1a      	itte	ne
  40189c:	4619      	movne	r1, r3
  40189e:	4610      	movne	r0, r2
  4018a0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4018a4:	bf1c      	itt	ne
  4018a6:	460b      	movne	r3, r1
  4018a8:	4602      	movne	r2, r0
  4018aa:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4018ae:	bf06      	itte	eq
  4018b0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4018b4:	ea91 0f03 	teqeq	r1, r3
  4018b8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  4018bc:	bd30      	pop	{r4, r5, pc}
  4018be:	bf00      	nop

004018c0 <__aeabi_ui2d>:
  4018c0:	f090 0f00 	teq	r0, #0
  4018c4:	bf04      	itt	eq
  4018c6:	2100      	moveq	r1, #0
  4018c8:	4770      	bxeq	lr
  4018ca:	b530      	push	{r4, r5, lr}
  4018cc:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4018d0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4018d4:	f04f 0500 	mov.w	r5, #0
  4018d8:	f04f 0100 	mov.w	r1, #0
  4018dc:	e750      	b.n	401780 <__adddf3+0x138>
  4018de:	bf00      	nop

004018e0 <__aeabi_i2d>:
  4018e0:	f090 0f00 	teq	r0, #0
  4018e4:	bf04      	itt	eq
  4018e6:	2100      	moveq	r1, #0
  4018e8:	4770      	bxeq	lr
  4018ea:	b530      	push	{r4, r5, lr}
  4018ec:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4018f0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4018f4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4018f8:	bf48      	it	mi
  4018fa:	4240      	negmi	r0, r0
  4018fc:	f04f 0100 	mov.w	r1, #0
  401900:	e73e      	b.n	401780 <__adddf3+0x138>
  401902:	bf00      	nop

00401904 <__aeabi_f2d>:
  401904:	0042      	lsls	r2, r0, #1
  401906:	ea4f 01e2 	mov.w	r1, r2, asr #3
  40190a:	ea4f 0131 	mov.w	r1, r1, rrx
  40190e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401912:	bf1f      	itttt	ne
  401914:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401918:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40191c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401920:	4770      	bxne	lr
  401922:	f092 0f00 	teq	r2, #0
  401926:	bf14      	ite	ne
  401928:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40192c:	4770      	bxeq	lr
  40192e:	b530      	push	{r4, r5, lr}
  401930:	f44f 7460 	mov.w	r4, #896	; 0x380
  401934:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401938:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40193c:	e720      	b.n	401780 <__adddf3+0x138>
  40193e:	bf00      	nop

00401940 <__aeabi_ul2d>:
  401940:	ea50 0201 	orrs.w	r2, r0, r1
  401944:	bf08      	it	eq
  401946:	4770      	bxeq	lr
  401948:	b530      	push	{r4, r5, lr}
  40194a:	f04f 0500 	mov.w	r5, #0
  40194e:	e00a      	b.n	401966 <__aeabi_l2d+0x16>

00401950 <__aeabi_l2d>:
  401950:	ea50 0201 	orrs.w	r2, r0, r1
  401954:	bf08      	it	eq
  401956:	4770      	bxeq	lr
  401958:	b530      	push	{r4, r5, lr}
  40195a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  40195e:	d502      	bpl.n	401966 <__aeabi_l2d+0x16>
  401960:	4240      	negs	r0, r0
  401962:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401966:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40196a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40196e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401972:	f43f aedc 	beq.w	40172e <__adddf3+0xe6>
  401976:	f04f 0203 	mov.w	r2, #3
  40197a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40197e:	bf18      	it	ne
  401980:	3203      	addne	r2, #3
  401982:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401986:	bf18      	it	ne
  401988:	3203      	addne	r2, #3
  40198a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40198e:	f1c2 0320 	rsb	r3, r2, #32
  401992:	fa00 fc03 	lsl.w	ip, r0, r3
  401996:	fa20 f002 	lsr.w	r0, r0, r2
  40199a:	fa01 fe03 	lsl.w	lr, r1, r3
  40199e:	ea40 000e 	orr.w	r0, r0, lr
  4019a2:	fa21 f102 	lsr.w	r1, r1, r2
  4019a6:	4414      	add	r4, r2
  4019a8:	e6c1      	b.n	40172e <__adddf3+0xe6>
  4019aa:	bf00      	nop

004019ac <__aeabi_dmul>:
  4019ac:	b570      	push	{r4, r5, r6, lr}
  4019ae:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4019b2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4019b6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4019ba:	bf1d      	ittte	ne
  4019bc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4019c0:	ea94 0f0c 	teqne	r4, ip
  4019c4:	ea95 0f0c 	teqne	r5, ip
  4019c8:	f000 f8de 	bleq	401b88 <__aeabi_dmul+0x1dc>
  4019cc:	442c      	add	r4, r5
  4019ce:	ea81 0603 	eor.w	r6, r1, r3
  4019d2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  4019d6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  4019da:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  4019de:	bf18      	it	ne
  4019e0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  4019e4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4019e8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4019ec:	d038      	beq.n	401a60 <__aeabi_dmul+0xb4>
  4019ee:	fba0 ce02 	umull	ip, lr, r0, r2
  4019f2:	f04f 0500 	mov.w	r5, #0
  4019f6:	fbe1 e502 	umlal	lr, r5, r1, r2
  4019fa:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4019fe:	fbe0 e503 	umlal	lr, r5, r0, r3
  401a02:	f04f 0600 	mov.w	r6, #0
  401a06:	fbe1 5603 	umlal	r5, r6, r1, r3
  401a0a:	f09c 0f00 	teq	ip, #0
  401a0e:	bf18      	it	ne
  401a10:	f04e 0e01 	orrne.w	lr, lr, #1
  401a14:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401a18:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401a1c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401a20:	d204      	bcs.n	401a2c <__aeabi_dmul+0x80>
  401a22:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401a26:	416d      	adcs	r5, r5
  401a28:	eb46 0606 	adc.w	r6, r6, r6
  401a2c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401a30:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401a34:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401a38:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401a3c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401a40:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401a44:	bf88      	it	hi
  401a46:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401a4a:	d81e      	bhi.n	401a8a <__aeabi_dmul+0xde>
  401a4c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401a50:	bf08      	it	eq
  401a52:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401a56:	f150 0000 	adcs.w	r0, r0, #0
  401a5a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401a5e:	bd70      	pop	{r4, r5, r6, pc}
  401a60:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401a64:	ea46 0101 	orr.w	r1, r6, r1
  401a68:	ea40 0002 	orr.w	r0, r0, r2
  401a6c:	ea81 0103 	eor.w	r1, r1, r3
  401a70:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401a74:	bfc2      	ittt	gt
  401a76:	ebd4 050c 	rsbsgt	r5, r4, ip
  401a7a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401a7e:	bd70      	popgt	{r4, r5, r6, pc}
  401a80:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401a84:	f04f 0e00 	mov.w	lr, #0
  401a88:	3c01      	subs	r4, #1
  401a8a:	f300 80ab 	bgt.w	401be4 <__aeabi_dmul+0x238>
  401a8e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401a92:	bfde      	ittt	le
  401a94:	2000      	movle	r0, #0
  401a96:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401a9a:	bd70      	pople	{r4, r5, r6, pc}
  401a9c:	f1c4 0400 	rsb	r4, r4, #0
  401aa0:	3c20      	subs	r4, #32
  401aa2:	da35      	bge.n	401b10 <__aeabi_dmul+0x164>
  401aa4:	340c      	adds	r4, #12
  401aa6:	dc1b      	bgt.n	401ae0 <__aeabi_dmul+0x134>
  401aa8:	f104 0414 	add.w	r4, r4, #20
  401aac:	f1c4 0520 	rsb	r5, r4, #32
  401ab0:	fa00 f305 	lsl.w	r3, r0, r5
  401ab4:	fa20 f004 	lsr.w	r0, r0, r4
  401ab8:	fa01 f205 	lsl.w	r2, r1, r5
  401abc:	ea40 0002 	orr.w	r0, r0, r2
  401ac0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401ac4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401ac8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401acc:	fa21 f604 	lsr.w	r6, r1, r4
  401ad0:	eb42 0106 	adc.w	r1, r2, r6
  401ad4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401ad8:	bf08      	it	eq
  401ada:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401ade:	bd70      	pop	{r4, r5, r6, pc}
  401ae0:	f1c4 040c 	rsb	r4, r4, #12
  401ae4:	f1c4 0520 	rsb	r5, r4, #32
  401ae8:	fa00 f304 	lsl.w	r3, r0, r4
  401aec:	fa20 f005 	lsr.w	r0, r0, r5
  401af0:	fa01 f204 	lsl.w	r2, r1, r4
  401af4:	ea40 0002 	orr.w	r0, r0, r2
  401af8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401afc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401b00:	f141 0100 	adc.w	r1, r1, #0
  401b04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401b08:	bf08      	it	eq
  401b0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401b0e:	bd70      	pop	{r4, r5, r6, pc}
  401b10:	f1c4 0520 	rsb	r5, r4, #32
  401b14:	fa00 f205 	lsl.w	r2, r0, r5
  401b18:	ea4e 0e02 	orr.w	lr, lr, r2
  401b1c:	fa20 f304 	lsr.w	r3, r0, r4
  401b20:	fa01 f205 	lsl.w	r2, r1, r5
  401b24:	ea43 0302 	orr.w	r3, r3, r2
  401b28:	fa21 f004 	lsr.w	r0, r1, r4
  401b2c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401b30:	fa21 f204 	lsr.w	r2, r1, r4
  401b34:	ea20 0002 	bic.w	r0, r0, r2
  401b38:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401b3c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401b40:	bf08      	it	eq
  401b42:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401b46:	bd70      	pop	{r4, r5, r6, pc}
  401b48:	f094 0f00 	teq	r4, #0
  401b4c:	d10f      	bne.n	401b6e <__aeabi_dmul+0x1c2>
  401b4e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401b52:	0040      	lsls	r0, r0, #1
  401b54:	eb41 0101 	adc.w	r1, r1, r1
  401b58:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401b5c:	bf08      	it	eq
  401b5e:	3c01      	subeq	r4, #1
  401b60:	d0f7      	beq.n	401b52 <__aeabi_dmul+0x1a6>
  401b62:	ea41 0106 	orr.w	r1, r1, r6
  401b66:	f095 0f00 	teq	r5, #0
  401b6a:	bf18      	it	ne
  401b6c:	4770      	bxne	lr
  401b6e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401b72:	0052      	lsls	r2, r2, #1
  401b74:	eb43 0303 	adc.w	r3, r3, r3
  401b78:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401b7c:	bf08      	it	eq
  401b7e:	3d01      	subeq	r5, #1
  401b80:	d0f7      	beq.n	401b72 <__aeabi_dmul+0x1c6>
  401b82:	ea43 0306 	orr.w	r3, r3, r6
  401b86:	4770      	bx	lr
  401b88:	ea94 0f0c 	teq	r4, ip
  401b8c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401b90:	bf18      	it	ne
  401b92:	ea95 0f0c 	teqne	r5, ip
  401b96:	d00c      	beq.n	401bb2 <__aeabi_dmul+0x206>
  401b98:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401b9c:	bf18      	it	ne
  401b9e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401ba2:	d1d1      	bne.n	401b48 <__aeabi_dmul+0x19c>
  401ba4:	ea81 0103 	eor.w	r1, r1, r3
  401ba8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401bac:	f04f 0000 	mov.w	r0, #0
  401bb0:	bd70      	pop	{r4, r5, r6, pc}
  401bb2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401bb6:	bf06      	itte	eq
  401bb8:	4610      	moveq	r0, r2
  401bba:	4619      	moveq	r1, r3
  401bbc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401bc0:	d019      	beq.n	401bf6 <__aeabi_dmul+0x24a>
  401bc2:	ea94 0f0c 	teq	r4, ip
  401bc6:	d102      	bne.n	401bce <__aeabi_dmul+0x222>
  401bc8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401bcc:	d113      	bne.n	401bf6 <__aeabi_dmul+0x24a>
  401bce:	ea95 0f0c 	teq	r5, ip
  401bd2:	d105      	bne.n	401be0 <__aeabi_dmul+0x234>
  401bd4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401bd8:	bf1c      	itt	ne
  401bda:	4610      	movne	r0, r2
  401bdc:	4619      	movne	r1, r3
  401bde:	d10a      	bne.n	401bf6 <__aeabi_dmul+0x24a>
  401be0:	ea81 0103 	eor.w	r1, r1, r3
  401be4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401be8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401bec:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401bf0:	f04f 0000 	mov.w	r0, #0
  401bf4:	bd70      	pop	{r4, r5, r6, pc}
  401bf6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401bfa:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401bfe:	bd70      	pop	{r4, r5, r6, pc}

00401c00 <__aeabi_ddiv>:
  401c00:	b570      	push	{r4, r5, r6, lr}
  401c02:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401c06:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401c0a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401c0e:	bf1d      	ittte	ne
  401c10:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401c14:	ea94 0f0c 	teqne	r4, ip
  401c18:	ea95 0f0c 	teqne	r5, ip
  401c1c:	f000 f8a7 	bleq	401d6e <__aeabi_ddiv+0x16e>
  401c20:	eba4 0405 	sub.w	r4, r4, r5
  401c24:	ea81 0e03 	eor.w	lr, r1, r3
  401c28:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401c2c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401c30:	f000 8088 	beq.w	401d44 <__aeabi_ddiv+0x144>
  401c34:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401c38:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401c3c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401c40:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401c44:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401c48:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401c4c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401c50:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401c54:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401c58:	429d      	cmp	r5, r3
  401c5a:	bf08      	it	eq
  401c5c:	4296      	cmpeq	r6, r2
  401c5e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401c62:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401c66:	d202      	bcs.n	401c6e <__aeabi_ddiv+0x6e>
  401c68:	085b      	lsrs	r3, r3, #1
  401c6a:	ea4f 0232 	mov.w	r2, r2, rrx
  401c6e:	1ab6      	subs	r6, r6, r2
  401c70:	eb65 0503 	sbc.w	r5, r5, r3
  401c74:	085b      	lsrs	r3, r3, #1
  401c76:	ea4f 0232 	mov.w	r2, r2, rrx
  401c7a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401c7e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401c82:	ebb6 0e02 	subs.w	lr, r6, r2
  401c86:	eb75 0e03 	sbcs.w	lr, r5, r3
  401c8a:	bf22      	ittt	cs
  401c8c:	1ab6      	subcs	r6, r6, r2
  401c8e:	4675      	movcs	r5, lr
  401c90:	ea40 000c 	orrcs.w	r0, r0, ip
  401c94:	085b      	lsrs	r3, r3, #1
  401c96:	ea4f 0232 	mov.w	r2, r2, rrx
  401c9a:	ebb6 0e02 	subs.w	lr, r6, r2
  401c9e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401ca2:	bf22      	ittt	cs
  401ca4:	1ab6      	subcs	r6, r6, r2
  401ca6:	4675      	movcs	r5, lr
  401ca8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401cac:	085b      	lsrs	r3, r3, #1
  401cae:	ea4f 0232 	mov.w	r2, r2, rrx
  401cb2:	ebb6 0e02 	subs.w	lr, r6, r2
  401cb6:	eb75 0e03 	sbcs.w	lr, r5, r3
  401cba:	bf22      	ittt	cs
  401cbc:	1ab6      	subcs	r6, r6, r2
  401cbe:	4675      	movcs	r5, lr
  401cc0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401cc4:	085b      	lsrs	r3, r3, #1
  401cc6:	ea4f 0232 	mov.w	r2, r2, rrx
  401cca:	ebb6 0e02 	subs.w	lr, r6, r2
  401cce:	eb75 0e03 	sbcs.w	lr, r5, r3
  401cd2:	bf22      	ittt	cs
  401cd4:	1ab6      	subcs	r6, r6, r2
  401cd6:	4675      	movcs	r5, lr
  401cd8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401cdc:	ea55 0e06 	orrs.w	lr, r5, r6
  401ce0:	d018      	beq.n	401d14 <__aeabi_ddiv+0x114>
  401ce2:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401ce6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401cea:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401cee:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401cf2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401cf6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401cfa:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401cfe:	d1c0      	bne.n	401c82 <__aeabi_ddiv+0x82>
  401d00:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401d04:	d10b      	bne.n	401d1e <__aeabi_ddiv+0x11e>
  401d06:	ea41 0100 	orr.w	r1, r1, r0
  401d0a:	f04f 0000 	mov.w	r0, #0
  401d0e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401d12:	e7b6      	b.n	401c82 <__aeabi_ddiv+0x82>
  401d14:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401d18:	bf04      	itt	eq
  401d1a:	4301      	orreq	r1, r0
  401d1c:	2000      	moveq	r0, #0
  401d1e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401d22:	bf88      	it	hi
  401d24:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401d28:	f63f aeaf 	bhi.w	401a8a <__aeabi_dmul+0xde>
  401d2c:	ebb5 0c03 	subs.w	ip, r5, r3
  401d30:	bf04      	itt	eq
  401d32:	ebb6 0c02 	subseq.w	ip, r6, r2
  401d36:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401d3a:	f150 0000 	adcs.w	r0, r0, #0
  401d3e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401d42:	bd70      	pop	{r4, r5, r6, pc}
  401d44:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  401d48:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  401d4c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  401d50:	bfc2      	ittt	gt
  401d52:	ebd4 050c 	rsbsgt	r5, r4, ip
  401d56:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401d5a:	bd70      	popgt	{r4, r5, r6, pc}
  401d5c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401d60:	f04f 0e00 	mov.w	lr, #0
  401d64:	3c01      	subs	r4, #1
  401d66:	e690      	b.n	401a8a <__aeabi_dmul+0xde>
  401d68:	ea45 0e06 	orr.w	lr, r5, r6
  401d6c:	e68d      	b.n	401a8a <__aeabi_dmul+0xde>
  401d6e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401d72:	ea94 0f0c 	teq	r4, ip
  401d76:	bf08      	it	eq
  401d78:	ea95 0f0c 	teqeq	r5, ip
  401d7c:	f43f af3b 	beq.w	401bf6 <__aeabi_dmul+0x24a>
  401d80:	ea94 0f0c 	teq	r4, ip
  401d84:	d10a      	bne.n	401d9c <__aeabi_ddiv+0x19c>
  401d86:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401d8a:	f47f af34 	bne.w	401bf6 <__aeabi_dmul+0x24a>
  401d8e:	ea95 0f0c 	teq	r5, ip
  401d92:	f47f af25 	bne.w	401be0 <__aeabi_dmul+0x234>
  401d96:	4610      	mov	r0, r2
  401d98:	4619      	mov	r1, r3
  401d9a:	e72c      	b.n	401bf6 <__aeabi_dmul+0x24a>
  401d9c:	ea95 0f0c 	teq	r5, ip
  401da0:	d106      	bne.n	401db0 <__aeabi_ddiv+0x1b0>
  401da2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401da6:	f43f aefd 	beq.w	401ba4 <__aeabi_dmul+0x1f8>
  401daa:	4610      	mov	r0, r2
  401dac:	4619      	mov	r1, r3
  401dae:	e722      	b.n	401bf6 <__aeabi_dmul+0x24a>
  401db0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401db4:	bf18      	it	ne
  401db6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401dba:	f47f aec5 	bne.w	401b48 <__aeabi_dmul+0x19c>
  401dbe:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401dc2:	f47f af0d 	bne.w	401be0 <__aeabi_dmul+0x234>
  401dc6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401dca:	f47f aeeb 	bne.w	401ba4 <__aeabi_dmul+0x1f8>
  401dce:	e712      	b.n	401bf6 <__aeabi_dmul+0x24a>

00401dd0 <__aeabi_uldivmod>:
  401dd0:	b953      	cbnz	r3, 401de8 <__aeabi_uldivmod+0x18>
  401dd2:	b94a      	cbnz	r2, 401de8 <__aeabi_uldivmod+0x18>
  401dd4:	2900      	cmp	r1, #0
  401dd6:	bf08      	it	eq
  401dd8:	2800      	cmpeq	r0, #0
  401dda:	bf1c      	itt	ne
  401ddc:	f04f 31ff 	movne.w	r1, #4294967295
  401de0:	f04f 30ff 	movne.w	r0, #4294967295
  401de4:	f000 b97a 	b.w	4020dc <__aeabi_idiv0>
  401de8:	f1ad 0c08 	sub.w	ip, sp, #8
  401dec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  401df0:	f000 f806 	bl	401e00 <__udivmoddi4>
  401df4:	f8dd e004 	ldr.w	lr, [sp, #4]
  401df8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401dfc:	b004      	add	sp, #16
  401dfe:	4770      	bx	lr

00401e00 <__udivmoddi4>:
  401e00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401e04:	468c      	mov	ip, r1
  401e06:	460d      	mov	r5, r1
  401e08:	4604      	mov	r4, r0
  401e0a:	9e08      	ldr	r6, [sp, #32]
  401e0c:	2b00      	cmp	r3, #0
  401e0e:	d151      	bne.n	401eb4 <__udivmoddi4+0xb4>
  401e10:	428a      	cmp	r2, r1
  401e12:	4617      	mov	r7, r2
  401e14:	d96d      	bls.n	401ef2 <__udivmoddi4+0xf2>
  401e16:	fab2 fe82 	clz	lr, r2
  401e1a:	f1be 0f00 	cmp.w	lr, #0
  401e1e:	d00b      	beq.n	401e38 <__udivmoddi4+0x38>
  401e20:	f1ce 0c20 	rsb	ip, lr, #32
  401e24:	fa01 f50e 	lsl.w	r5, r1, lr
  401e28:	fa20 fc0c 	lsr.w	ip, r0, ip
  401e2c:	fa02 f70e 	lsl.w	r7, r2, lr
  401e30:	ea4c 0c05 	orr.w	ip, ip, r5
  401e34:	fa00 f40e 	lsl.w	r4, r0, lr
  401e38:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  401e3c:	0c25      	lsrs	r5, r4, #16
  401e3e:	fbbc f8fa 	udiv	r8, ip, sl
  401e42:	fa1f f987 	uxth.w	r9, r7
  401e46:	fb0a cc18 	mls	ip, sl, r8, ip
  401e4a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  401e4e:	fb08 f309 	mul.w	r3, r8, r9
  401e52:	42ab      	cmp	r3, r5
  401e54:	d90a      	bls.n	401e6c <__udivmoddi4+0x6c>
  401e56:	19ed      	adds	r5, r5, r7
  401e58:	f108 32ff 	add.w	r2, r8, #4294967295
  401e5c:	f080 8123 	bcs.w	4020a6 <__udivmoddi4+0x2a6>
  401e60:	42ab      	cmp	r3, r5
  401e62:	f240 8120 	bls.w	4020a6 <__udivmoddi4+0x2a6>
  401e66:	f1a8 0802 	sub.w	r8, r8, #2
  401e6a:	443d      	add	r5, r7
  401e6c:	1aed      	subs	r5, r5, r3
  401e6e:	b2a4      	uxth	r4, r4
  401e70:	fbb5 f0fa 	udiv	r0, r5, sl
  401e74:	fb0a 5510 	mls	r5, sl, r0, r5
  401e78:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  401e7c:	fb00 f909 	mul.w	r9, r0, r9
  401e80:	45a1      	cmp	r9, r4
  401e82:	d909      	bls.n	401e98 <__udivmoddi4+0x98>
  401e84:	19e4      	adds	r4, r4, r7
  401e86:	f100 33ff 	add.w	r3, r0, #4294967295
  401e8a:	f080 810a 	bcs.w	4020a2 <__udivmoddi4+0x2a2>
  401e8e:	45a1      	cmp	r9, r4
  401e90:	f240 8107 	bls.w	4020a2 <__udivmoddi4+0x2a2>
  401e94:	3802      	subs	r0, #2
  401e96:	443c      	add	r4, r7
  401e98:	eba4 0409 	sub.w	r4, r4, r9
  401e9c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  401ea0:	2100      	movs	r1, #0
  401ea2:	2e00      	cmp	r6, #0
  401ea4:	d061      	beq.n	401f6a <__udivmoddi4+0x16a>
  401ea6:	fa24 f40e 	lsr.w	r4, r4, lr
  401eaa:	2300      	movs	r3, #0
  401eac:	6034      	str	r4, [r6, #0]
  401eae:	6073      	str	r3, [r6, #4]
  401eb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401eb4:	428b      	cmp	r3, r1
  401eb6:	d907      	bls.n	401ec8 <__udivmoddi4+0xc8>
  401eb8:	2e00      	cmp	r6, #0
  401eba:	d054      	beq.n	401f66 <__udivmoddi4+0x166>
  401ebc:	2100      	movs	r1, #0
  401ebe:	e886 0021 	stmia.w	r6, {r0, r5}
  401ec2:	4608      	mov	r0, r1
  401ec4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401ec8:	fab3 f183 	clz	r1, r3
  401ecc:	2900      	cmp	r1, #0
  401ece:	f040 808e 	bne.w	401fee <__udivmoddi4+0x1ee>
  401ed2:	42ab      	cmp	r3, r5
  401ed4:	d302      	bcc.n	401edc <__udivmoddi4+0xdc>
  401ed6:	4282      	cmp	r2, r0
  401ed8:	f200 80fa 	bhi.w	4020d0 <__udivmoddi4+0x2d0>
  401edc:	1a84      	subs	r4, r0, r2
  401ede:	eb65 0503 	sbc.w	r5, r5, r3
  401ee2:	2001      	movs	r0, #1
  401ee4:	46ac      	mov	ip, r5
  401ee6:	2e00      	cmp	r6, #0
  401ee8:	d03f      	beq.n	401f6a <__udivmoddi4+0x16a>
  401eea:	e886 1010 	stmia.w	r6, {r4, ip}
  401eee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401ef2:	b912      	cbnz	r2, 401efa <__udivmoddi4+0xfa>
  401ef4:	2701      	movs	r7, #1
  401ef6:	fbb7 f7f2 	udiv	r7, r7, r2
  401efa:	fab7 fe87 	clz	lr, r7
  401efe:	f1be 0f00 	cmp.w	lr, #0
  401f02:	d134      	bne.n	401f6e <__udivmoddi4+0x16e>
  401f04:	1beb      	subs	r3, r5, r7
  401f06:	0c3a      	lsrs	r2, r7, #16
  401f08:	fa1f fc87 	uxth.w	ip, r7
  401f0c:	2101      	movs	r1, #1
  401f0e:	fbb3 f8f2 	udiv	r8, r3, r2
  401f12:	0c25      	lsrs	r5, r4, #16
  401f14:	fb02 3318 	mls	r3, r2, r8, r3
  401f18:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  401f1c:	fb0c f308 	mul.w	r3, ip, r8
  401f20:	42ab      	cmp	r3, r5
  401f22:	d907      	bls.n	401f34 <__udivmoddi4+0x134>
  401f24:	19ed      	adds	r5, r5, r7
  401f26:	f108 30ff 	add.w	r0, r8, #4294967295
  401f2a:	d202      	bcs.n	401f32 <__udivmoddi4+0x132>
  401f2c:	42ab      	cmp	r3, r5
  401f2e:	f200 80d1 	bhi.w	4020d4 <__udivmoddi4+0x2d4>
  401f32:	4680      	mov	r8, r0
  401f34:	1aed      	subs	r5, r5, r3
  401f36:	b2a3      	uxth	r3, r4
  401f38:	fbb5 f0f2 	udiv	r0, r5, r2
  401f3c:	fb02 5510 	mls	r5, r2, r0, r5
  401f40:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  401f44:	fb0c fc00 	mul.w	ip, ip, r0
  401f48:	45a4      	cmp	ip, r4
  401f4a:	d907      	bls.n	401f5c <__udivmoddi4+0x15c>
  401f4c:	19e4      	adds	r4, r4, r7
  401f4e:	f100 33ff 	add.w	r3, r0, #4294967295
  401f52:	d202      	bcs.n	401f5a <__udivmoddi4+0x15a>
  401f54:	45a4      	cmp	ip, r4
  401f56:	f200 80b8 	bhi.w	4020ca <__udivmoddi4+0x2ca>
  401f5a:	4618      	mov	r0, r3
  401f5c:	eba4 040c 	sub.w	r4, r4, ip
  401f60:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  401f64:	e79d      	b.n	401ea2 <__udivmoddi4+0xa2>
  401f66:	4631      	mov	r1, r6
  401f68:	4630      	mov	r0, r6
  401f6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401f6e:	f1ce 0420 	rsb	r4, lr, #32
  401f72:	fa05 f30e 	lsl.w	r3, r5, lr
  401f76:	fa07 f70e 	lsl.w	r7, r7, lr
  401f7a:	fa20 f804 	lsr.w	r8, r0, r4
  401f7e:	0c3a      	lsrs	r2, r7, #16
  401f80:	fa25 f404 	lsr.w	r4, r5, r4
  401f84:	ea48 0803 	orr.w	r8, r8, r3
  401f88:	fbb4 f1f2 	udiv	r1, r4, r2
  401f8c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  401f90:	fb02 4411 	mls	r4, r2, r1, r4
  401f94:	fa1f fc87 	uxth.w	ip, r7
  401f98:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  401f9c:	fb01 f30c 	mul.w	r3, r1, ip
  401fa0:	42ab      	cmp	r3, r5
  401fa2:	fa00 f40e 	lsl.w	r4, r0, lr
  401fa6:	d909      	bls.n	401fbc <__udivmoddi4+0x1bc>
  401fa8:	19ed      	adds	r5, r5, r7
  401faa:	f101 30ff 	add.w	r0, r1, #4294967295
  401fae:	f080 808a 	bcs.w	4020c6 <__udivmoddi4+0x2c6>
  401fb2:	42ab      	cmp	r3, r5
  401fb4:	f240 8087 	bls.w	4020c6 <__udivmoddi4+0x2c6>
  401fb8:	3902      	subs	r1, #2
  401fba:	443d      	add	r5, r7
  401fbc:	1aeb      	subs	r3, r5, r3
  401fbe:	fa1f f588 	uxth.w	r5, r8
  401fc2:	fbb3 f0f2 	udiv	r0, r3, r2
  401fc6:	fb02 3310 	mls	r3, r2, r0, r3
  401fca:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  401fce:	fb00 f30c 	mul.w	r3, r0, ip
  401fd2:	42ab      	cmp	r3, r5
  401fd4:	d907      	bls.n	401fe6 <__udivmoddi4+0x1e6>
  401fd6:	19ed      	adds	r5, r5, r7
  401fd8:	f100 38ff 	add.w	r8, r0, #4294967295
  401fdc:	d26f      	bcs.n	4020be <__udivmoddi4+0x2be>
  401fde:	42ab      	cmp	r3, r5
  401fe0:	d96d      	bls.n	4020be <__udivmoddi4+0x2be>
  401fe2:	3802      	subs	r0, #2
  401fe4:	443d      	add	r5, r7
  401fe6:	1aeb      	subs	r3, r5, r3
  401fe8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  401fec:	e78f      	b.n	401f0e <__udivmoddi4+0x10e>
  401fee:	f1c1 0720 	rsb	r7, r1, #32
  401ff2:	fa22 f807 	lsr.w	r8, r2, r7
  401ff6:	408b      	lsls	r3, r1
  401ff8:	fa05 f401 	lsl.w	r4, r5, r1
  401ffc:	ea48 0303 	orr.w	r3, r8, r3
  402000:	fa20 fe07 	lsr.w	lr, r0, r7
  402004:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  402008:	40fd      	lsrs	r5, r7
  40200a:	ea4e 0e04 	orr.w	lr, lr, r4
  40200e:	fbb5 f9fc 	udiv	r9, r5, ip
  402012:	ea4f 441e 	mov.w	r4, lr, lsr #16
  402016:	fb0c 5519 	mls	r5, ip, r9, r5
  40201a:	fa1f f883 	uxth.w	r8, r3
  40201e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  402022:	fb09 f408 	mul.w	r4, r9, r8
  402026:	42ac      	cmp	r4, r5
  402028:	fa02 f201 	lsl.w	r2, r2, r1
  40202c:	fa00 fa01 	lsl.w	sl, r0, r1
  402030:	d908      	bls.n	402044 <__udivmoddi4+0x244>
  402032:	18ed      	adds	r5, r5, r3
  402034:	f109 30ff 	add.w	r0, r9, #4294967295
  402038:	d243      	bcs.n	4020c2 <__udivmoddi4+0x2c2>
  40203a:	42ac      	cmp	r4, r5
  40203c:	d941      	bls.n	4020c2 <__udivmoddi4+0x2c2>
  40203e:	f1a9 0902 	sub.w	r9, r9, #2
  402042:	441d      	add	r5, r3
  402044:	1b2d      	subs	r5, r5, r4
  402046:	fa1f fe8e 	uxth.w	lr, lr
  40204a:	fbb5 f0fc 	udiv	r0, r5, ip
  40204e:	fb0c 5510 	mls	r5, ip, r0, r5
  402052:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  402056:	fb00 f808 	mul.w	r8, r0, r8
  40205a:	45a0      	cmp	r8, r4
  40205c:	d907      	bls.n	40206e <__udivmoddi4+0x26e>
  40205e:	18e4      	adds	r4, r4, r3
  402060:	f100 35ff 	add.w	r5, r0, #4294967295
  402064:	d229      	bcs.n	4020ba <__udivmoddi4+0x2ba>
  402066:	45a0      	cmp	r8, r4
  402068:	d927      	bls.n	4020ba <__udivmoddi4+0x2ba>
  40206a:	3802      	subs	r0, #2
  40206c:	441c      	add	r4, r3
  40206e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  402072:	eba4 0408 	sub.w	r4, r4, r8
  402076:	fba0 8902 	umull	r8, r9, r0, r2
  40207a:	454c      	cmp	r4, r9
  40207c:	46c6      	mov	lr, r8
  40207e:	464d      	mov	r5, r9
  402080:	d315      	bcc.n	4020ae <__udivmoddi4+0x2ae>
  402082:	d012      	beq.n	4020aa <__udivmoddi4+0x2aa>
  402084:	b156      	cbz	r6, 40209c <__udivmoddi4+0x29c>
  402086:	ebba 030e 	subs.w	r3, sl, lr
  40208a:	eb64 0405 	sbc.w	r4, r4, r5
  40208e:	fa04 f707 	lsl.w	r7, r4, r7
  402092:	40cb      	lsrs	r3, r1
  402094:	431f      	orrs	r7, r3
  402096:	40cc      	lsrs	r4, r1
  402098:	6037      	str	r7, [r6, #0]
  40209a:	6074      	str	r4, [r6, #4]
  40209c:	2100      	movs	r1, #0
  40209e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4020a2:	4618      	mov	r0, r3
  4020a4:	e6f8      	b.n	401e98 <__udivmoddi4+0x98>
  4020a6:	4690      	mov	r8, r2
  4020a8:	e6e0      	b.n	401e6c <__udivmoddi4+0x6c>
  4020aa:	45c2      	cmp	sl, r8
  4020ac:	d2ea      	bcs.n	402084 <__udivmoddi4+0x284>
  4020ae:	ebb8 0e02 	subs.w	lr, r8, r2
  4020b2:	eb69 0503 	sbc.w	r5, r9, r3
  4020b6:	3801      	subs	r0, #1
  4020b8:	e7e4      	b.n	402084 <__udivmoddi4+0x284>
  4020ba:	4628      	mov	r0, r5
  4020bc:	e7d7      	b.n	40206e <__udivmoddi4+0x26e>
  4020be:	4640      	mov	r0, r8
  4020c0:	e791      	b.n	401fe6 <__udivmoddi4+0x1e6>
  4020c2:	4681      	mov	r9, r0
  4020c4:	e7be      	b.n	402044 <__udivmoddi4+0x244>
  4020c6:	4601      	mov	r1, r0
  4020c8:	e778      	b.n	401fbc <__udivmoddi4+0x1bc>
  4020ca:	3802      	subs	r0, #2
  4020cc:	443c      	add	r4, r7
  4020ce:	e745      	b.n	401f5c <__udivmoddi4+0x15c>
  4020d0:	4608      	mov	r0, r1
  4020d2:	e708      	b.n	401ee6 <__udivmoddi4+0xe6>
  4020d4:	f1a8 0802 	sub.w	r8, r8, #2
  4020d8:	443d      	add	r5, r7
  4020da:	e72b      	b.n	401f34 <__udivmoddi4+0x134>

004020dc <__aeabi_idiv0>:
  4020dc:	4770      	bx	lr
  4020de:	bf00      	nop

004020e0 <__libc_init_array>:
  4020e0:	b570      	push	{r4, r5, r6, lr}
  4020e2:	4e0f      	ldr	r6, [pc, #60]	; (402120 <__libc_init_array+0x40>)
  4020e4:	4d0f      	ldr	r5, [pc, #60]	; (402124 <__libc_init_array+0x44>)
  4020e6:	1b76      	subs	r6, r6, r5
  4020e8:	10b6      	asrs	r6, r6, #2
  4020ea:	bf18      	it	ne
  4020ec:	2400      	movne	r4, #0
  4020ee:	d005      	beq.n	4020fc <__libc_init_array+0x1c>
  4020f0:	3401      	adds	r4, #1
  4020f2:	f855 3b04 	ldr.w	r3, [r5], #4
  4020f6:	4798      	blx	r3
  4020f8:	42a6      	cmp	r6, r4
  4020fa:	d1f9      	bne.n	4020f0 <__libc_init_array+0x10>
  4020fc:	4e0a      	ldr	r6, [pc, #40]	; (402128 <__libc_init_array+0x48>)
  4020fe:	4d0b      	ldr	r5, [pc, #44]	; (40212c <__libc_init_array+0x4c>)
  402100:	1b76      	subs	r6, r6, r5
  402102:	f005 fa5d 	bl	4075c0 <_init>
  402106:	10b6      	asrs	r6, r6, #2
  402108:	bf18      	it	ne
  40210a:	2400      	movne	r4, #0
  40210c:	d006      	beq.n	40211c <__libc_init_array+0x3c>
  40210e:	3401      	adds	r4, #1
  402110:	f855 3b04 	ldr.w	r3, [r5], #4
  402114:	4798      	blx	r3
  402116:	42a6      	cmp	r6, r4
  402118:	d1f9      	bne.n	40210e <__libc_init_array+0x2e>
  40211a:	bd70      	pop	{r4, r5, r6, pc}
  40211c:	bd70      	pop	{r4, r5, r6, pc}
  40211e:	bf00      	nop
  402120:	004075cc 	.word	0x004075cc
  402124:	004075cc 	.word	0x004075cc
  402128:	004075d4 	.word	0x004075d4
  40212c:	004075cc 	.word	0x004075cc

00402130 <memcpy>:
  402130:	4684      	mov	ip, r0
  402132:	ea41 0300 	orr.w	r3, r1, r0
  402136:	f013 0303 	ands.w	r3, r3, #3
  40213a:	d16d      	bne.n	402218 <memcpy+0xe8>
  40213c:	3a40      	subs	r2, #64	; 0x40
  40213e:	d341      	bcc.n	4021c4 <memcpy+0x94>
  402140:	f851 3b04 	ldr.w	r3, [r1], #4
  402144:	f840 3b04 	str.w	r3, [r0], #4
  402148:	f851 3b04 	ldr.w	r3, [r1], #4
  40214c:	f840 3b04 	str.w	r3, [r0], #4
  402150:	f851 3b04 	ldr.w	r3, [r1], #4
  402154:	f840 3b04 	str.w	r3, [r0], #4
  402158:	f851 3b04 	ldr.w	r3, [r1], #4
  40215c:	f840 3b04 	str.w	r3, [r0], #4
  402160:	f851 3b04 	ldr.w	r3, [r1], #4
  402164:	f840 3b04 	str.w	r3, [r0], #4
  402168:	f851 3b04 	ldr.w	r3, [r1], #4
  40216c:	f840 3b04 	str.w	r3, [r0], #4
  402170:	f851 3b04 	ldr.w	r3, [r1], #4
  402174:	f840 3b04 	str.w	r3, [r0], #4
  402178:	f851 3b04 	ldr.w	r3, [r1], #4
  40217c:	f840 3b04 	str.w	r3, [r0], #4
  402180:	f851 3b04 	ldr.w	r3, [r1], #4
  402184:	f840 3b04 	str.w	r3, [r0], #4
  402188:	f851 3b04 	ldr.w	r3, [r1], #4
  40218c:	f840 3b04 	str.w	r3, [r0], #4
  402190:	f851 3b04 	ldr.w	r3, [r1], #4
  402194:	f840 3b04 	str.w	r3, [r0], #4
  402198:	f851 3b04 	ldr.w	r3, [r1], #4
  40219c:	f840 3b04 	str.w	r3, [r0], #4
  4021a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4021a4:	f840 3b04 	str.w	r3, [r0], #4
  4021a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4021ac:	f840 3b04 	str.w	r3, [r0], #4
  4021b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4021b4:	f840 3b04 	str.w	r3, [r0], #4
  4021b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4021bc:	f840 3b04 	str.w	r3, [r0], #4
  4021c0:	3a40      	subs	r2, #64	; 0x40
  4021c2:	d2bd      	bcs.n	402140 <memcpy+0x10>
  4021c4:	3230      	adds	r2, #48	; 0x30
  4021c6:	d311      	bcc.n	4021ec <memcpy+0xbc>
  4021c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4021cc:	f840 3b04 	str.w	r3, [r0], #4
  4021d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4021d4:	f840 3b04 	str.w	r3, [r0], #4
  4021d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4021dc:	f840 3b04 	str.w	r3, [r0], #4
  4021e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4021e4:	f840 3b04 	str.w	r3, [r0], #4
  4021e8:	3a10      	subs	r2, #16
  4021ea:	d2ed      	bcs.n	4021c8 <memcpy+0x98>
  4021ec:	320c      	adds	r2, #12
  4021ee:	d305      	bcc.n	4021fc <memcpy+0xcc>
  4021f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4021f4:	f840 3b04 	str.w	r3, [r0], #4
  4021f8:	3a04      	subs	r2, #4
  4021fa:	d2f9      	bcs.n	4021f0 <memcpy+0xc0>
  4021fc:	3204      	adds	r2, #4
  4021fe:	d008      	beq.n	402212 <memcpy+0xe2>
  402200:	07d2      	lsls	r2, r2, #31
  402202:	bf1c      	itt	ne
  402204:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402208:	f800 3b01 	strbne.w	r3, [r0], #1
  40220c:	d301      	bcc.n	402212 <memcpy+0xe2>
  40220e:	880b      	ldrh	r3, [r1, #0]
  402210:	8003      	strh	r3, [r0, #0]
  402212:	4660      	mov	r0, ip
  402214:	4770      	bx	lr
  402216:	bf00      	nop
  402218:	2a08      	cmp	r2, #8
  40221a:	d313      	bcc.n	402244 <memcpy+0x114>
  40221c:	078b      	lsls	r3, r1, #30
  40221e:	d08d      	beq.n	40213c <memcpy+0xc>
  402220:	f010 0303 	ands.w	r3, r0, #3
  402224:	d08a      	beq.n	40213c <memcpy+0xc>
  402226:	f1c3 0304 	rsb	r3, r3, #4
  40222a:	1ad2      	subs	r2, r2, r3
  40222c:	07db      	lsls	r3, r3, #31
  40222e:	bf1c      	itt	ne
  402230:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402234:	f800 3b01 	strbne.w	r3, [r0], #1
  402238:	d380      	bcc.n	40213c <memcpy+0xc>
  40223a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40223e:	f820 3b02 	strh.w	r3, [r0], #2
  402242:	e77b      	b.n	40213c <memcpy+0xc>
  402244:	3a04      	subs	r2, #4
  402246:	d3d9      	bcc.n	4021fc <memcpy+0xcc>
  402248:	3a01      	subs	r2, #1
  40224a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40224e:	f800 3b01 	strb.w	r3, [r0], #1
  402252:	d2f9      	bcs.n	402248 <memcpy+0x118>
  402254:	780b      	ldrb	r3, [r1, #0]
  402256:	7003      	strb	r3, [r0, #0]
  402258:	784b      	ldrb	r3, [r1, #1]
  40225a:	7043      	strb	r3, [r0, #1]
  40225c:	788b      	ldrb	r3, [r1, #2]
  40225e:	7083      	strb	r3, [r0, #2]
  402260:	4660      	mov	r0, ip
  402262:	4770      	bx	lr

00402264 <memset>:
  402264:	b470      	push	{r4, r5, r6}
  402266:	0786      	lsls	r6, r0, #30
  402268:	d046      	beq.n	4022f8 <memset+0x94>
  40226a:	1e54      	subs	r4, r2, #1
  40226c:	2a00      	cmp	r2, #0
  40226e:	d041      	beq.n	4022f4 <memset+0x90>
  402270:	b2ca      	uxtb	r2, r1
  402272:	4603      	mov	r3, r0
  402274:	e002      	b.n	40227c <memset+0x18>
  402276:	f114 34ff 	adds.w	r4, r4, #4294967295
  40227a:	d33b      	bcc.n	4022f4 <memset+0x90>
  40227c:	f803 2b01 	strb.w	r2, [r3], #1
  402280:	079d      	lsls	r5, r3, #30
  402282:	d1f8      	bne.n	402276 <memset+0x12>
  402284:	2c03      	cmp	r4, #3
  402286:	d92e      	bls.n	4022e6 <memset+0x82>
  402288:	b2cd      	uxtb	r5, r1
  40228a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40228e:	2c0f      	cmp	r4, #15
  402290:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402294:	d919      	bls.n	4022ca <memset+0x66>
  402296:	f103 0210 	add.w	r2, r3, #16
  40229a:	4626      	mov	r6, r4
  40229c:	3e10      	subs	r6, #16
  40229e:	2e0f      	cmp	r6, #15
  4022a0:	f842 5c10 	str.w	r5, [r2, #-16]
  4022a4:	f842 5c0c 	str.w	r5, [r2, #-12]
  4022a8:	f842 5c08 	str.w	r5, [r2, #-8]
  4022ac:	f842 5c04 	str.w	r5, [r2, #-4]
  4022b0:	f102 0210 	add.w	r2, r2, #16
  4022b4:	d8f2      	bhi.n	40229c <memset+0x38>
  4022b6:	f1a4 0210 	sub.w	r2, r4, #16
  4022ba:	f022 020f 	bic.w	r2, r2, #15
  4022be:	f004 040f 	and.w	r4, r4, #15
  4022c2:	3210      	adds	r2, #16
  4022c4:	2c03      	cmp	r4, #3
  4022c6:	4413      	add	r3, r2
  4022c8:	d90d      	bls.n	4022e6 <memset+0x82>
  4022ca:	461e      	mov	r6, r3
  4022cc:	4622      	mov	r2, r4
  4022ce:	3a04      	subs	r2, #4
  4022d0:	2a03      	cmp	r2, #3
  4022d2:	f846 5b04 	str.w	r5, [r6], #4
  4022d6:	d8fa      	bhi.n	4022ce <memset+0x6a>
  4022d8:	1f22      	subs	r2, r4, #4
  4022da:	f022 0203 	bic.w	r2, r2, #3
  4022de:	3204      	adds	r2, #4
  4022e0:	4413      	add	r3, r2
  4022e2:	f004 0403 	and.w	r4, r4, #3
  4022e6:	b12c      	cbz	r4, 4022f4 <memset+0x90>
  4022e8:	b2c9      	uxtb	r1, r1
  4022ea:	441c      	add	r4, r3
  4022ec:	f803 1b01 	strb.w	r1, [r3], #1
  4022f0:	429c      	cmp	r4, r3
  4022f2:	d1fb      	bne.n	4022ec <memset+0x88>
  4022f4:	bc70      	pop	{r4, r5, r6}
  4022f6:	4770      	bx	lr
  4022f8:	4614      	mov	r4, r2
  4022fa:	4603      	mov	r3, r0
  4022fc:	e7c2      	b.n	402284 <memset+0x20>
  4022fe:	bf00      	nop

00402300 <printf>:
  402300:	b40f      	push	{r0, r1, r2, r3}
  402302:	b500      	push	{lr}
  402304:	4907      	ldr	r1, [pc, #28]	; (402324 <printf+0x24>)
  402306:	b083      	sub	sp, #12
  402308:	ab04      	add	r3, sp, #16
  40230a:	6808      	ldr	r0, [r1, #0]
  40230c:	f853 2b04 	ldr.w	r2, [r3], #4
  402310:	6881      	ldr	r1, [r0, #8]
  402312:	9301      	str	r3, [sp, #4]
  402314:	f000 fa0c 	bl	402730 <_vfprintf_r>
  402318:	b003      	add	sp, #12
  40231a:	f85d eb04 	ldr.w	lr, [sp], #4
  40231e:	b004      	add	sp, #16
  402320:	4770      	bx	lr
  402322:	bf00      	nop
  402324:	20400018 	.word	0x20400018

00402328 <_puts_r>:
  402328:	b5f0      	push	{r4, r5, r6, r7, lr}
  40232a:	4605      	mov	r5, r0
  40232c:	b089      	sub	sp, #36	; 0x24
  40232e:	4608      	mov	r0, r1
  402330:	460c      	mov	r4, r1
  402332:	f000 f945 	bl	4025c0 <strlen>
  402336:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402338:	4f21      	ldr	r7, [pc, #132]	; (4023c0 <_puts_r+0x98>)
  40233a:	9404      	str	r4, [sp, #16]
  40233c:	2601      	movs	r6, #1
  40233e:	1c44      	adds	r4, r0, #1
  402340:	a904      	add	r1, sp, #16
  402342:	2202      	movs	r2, #2
  402344:	9403      	str	r4, [sp, #12]
  402346:	9005      	str	r0, [sp, #20]
  402348:	68ac      	ldr	r4, [r5, #8]
  40234a:	9706      	str	r7, [sp, #24]
  40234c:	9607      	str	r6, [sp, #28]
  40234e:	9101      	str	r1, [sp, #4]
  402350:	9202      	str	r2, [sp, #8]
  402352:	b353      	cbz	r3, 4023aa <_puts_r+0x82>
  402354:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402356:	f013 0f01 	tst.w	r3, #1
  40235a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40235e:	b29a      	uxth	r2, r3
  402360:	d101      	bne.n	402366 <_puts_r+0x3e>
  402362:	0590      	lsls	r0, r2, #22
  402364:	d525      	bpl.n	4023b2 <_puts_r+0x8a>
  402366:	0491      	lsls	r1, r2, #18
  402368:	d406      	bmi.n	402378 <_puts_r+0x50>
  40236a:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40236c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402370:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  402374:	81a3      	strh	r3, [r4, #12]
  402376:	6662      	str	r2, [r4, #100]	; 0x64
  402378:	4628      	mov	r0, r5
  40237a:	aa01      	add	r2, sp, #4
  40237c:	4621      	mov	r1, r4
  40237e:	f003 f80f 	bl	4053a0 <__sfvwrite_r>
  402382:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402384:	2800      	cmp	r0, #0
  402386:	bf0c      	ite	eq
  402388:	250a      	moveq	r5, #10
  40238a:	f04f 35ff 	movne.w	r5, #4294967295
  40238e:	07da      	lsls	r2, r3, #31
  402390:	d402      	bmi.n	402398 <_puts_r+0x70>
  402392:	89a3      	ldrh	r3, [r4, #12]
  402394:	059b      	lsls	r3, r3, #22
  402396:	d502      	bpl.n	40239e <_puts_r+0x76>
  402398:	4628      	mov	r0, r5
  40239a:	b009      	add	sp, #36	; 0x24
  40239c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40239e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4023a0:	f003 f9e8 	bl	405774 <__retarget_lock_release_recursive>
  4023a4:	4628      	mov	r0, r5
  4023a6:	b009      	add	sp, #36	; 0x24
  4023a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4023aa:	4628      	mov	r0, r5
  4023ac:	f002 fdec 	bl	404f88 <__sinit>
  4023b0:	e7d0      	b.n	402354 <_puts_r+0x2c>
  4023b2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4023b4:	f003 f9dc 	bl	405770 <__retarget_lock_acquire_recursive>
  4023b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4023bc:	b29a      	uxth	r2, r3
  4023be:	e7d2      	b.n	402366 <_puts_r+0x3e>
  4023c0:	004070f4 	.word	0x004070f4

004023c4 <puts>:
  4023c4:	4b02      	ldr	r3, [pc, #8]	; (4023d0 <puts+0xc>)
  4023c6:	4601      	mov	r1, r0
  4023c8:	6818      	ldr	r0, [r3, #0]
  4023ca:	f7ff bfad 	b.w	402328 <_puts_r>
  4023ce:	bf00      	nop
  4023d0:	20400018 	.word	0x20400018

004023d4 <__srget_r>:
  4023d4:	b538      	push	{r3, r4, r5, lr}
  4023d6:	460c      	mov	r4, r1
  4023d8:	4605      	mov	r5, r0
  4023da:	b108      	cbz	r0, 4023e0 <__srget_r+0xc>
  4023dc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4023de:	b163      	cbz	r3, 4023fa <__srget_r+0x26>
  4023e0:	4628      	mov	r0, r5
  4023e2:	4621      	mov	r1, r4
  4023e4:	f004 fa7e 	bl	4068e4 <__srefill_r>
  4023e8:	b950      	cbnz	r0, 402400 <__srget_r+0x2c>
  4023ea:	e894 000c 	ldmia.w	r4, {r2, r3}
  4023ee:	3b01      	subs	r3, #1
  4023f0:	1c51      	adds	r1, r2, #1
  4023f2:	e884 000a 	stmia.w	r4, {r1, r3}
  4023f6:	7810      	ldrb	r0, [r2, #0]
  4023f8:	bd38      	pop	{r3, r4, r5, pc}
  4023fa:	f002 fdc5 	bl	404f88 <__sinit>
  4023fe:	e7ef      	b.n	4023e0 <__srget_r+0xc>
  402400:	f04f 30ff 	mov.w	r0, #4294967295
  402404:	bd38      	pop	{r3, r4, r5, pc}
  402406:	bf00      	nop

00402408 <setbuf>:
  402408:	2900      	cmp	r1, #0
  40240a:	bf0c      	ite	eq
  40240c:	2202      	moveq	r2, #2
  40240e:	2200      	movne	r2, #0
  402410:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402414:	f000 b800 	b.w	402418 <setvbuf>

00402418 <setvbuf>:
  402418:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40241c:	4c61      	ldr	r4, [pc, #388]	; (4025a4 <setvbuf+0x18c>)
  40241e:	6825      	ldr	r5, [r4, #0]
  402420:	b083      	sub	sp, #12
  402422:	4604      	mov	r4, r0
  402424:	460f      	mov	r7, r1
  402426:	4690      	mov	r8, r2
  402428:	461e      	mov	r6, r3
  40242a:	b115      	cbz	r5, 402432 <setvbuf+0x1a>
  40242c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40242e:	2b00      	cmp	r3, #0
  402430:	d064      	beq.n	4024fc <setvbuf+0xe4>
  402432:	f1b8 0f02 	cmp.w	r8, #2
  402436:	d006      	beq.n	402446 <setvbuf+0x2e>
  402438:	f1b8 0f01 	cmp.w	r8, #1
  40243c:	f200 809f 	bhi.w	40257e <setvbuf+0x166>
  402440:	2e00      	cmp	r6, #0
  402442:	f2c0 809c 	blt.w	40257e <setvbuf+0x166>
  402446:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402448:	07d8      	lsls	r0, r3, #31
  40244a:	d534      	bpl.n	4024b6 <setvbuf+0x9e>
  40244c:	4621      	mov	r1, r4
  40244e:	4628      	mov	r0, r5
  402450:	f002 fd30 	bl	404eb4 <_fflush_r>
  402454:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402456:	b141      	cbz	r1, 40246a <setvbuf+0x52>
  402458:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40245c:	4299      	cmp	r1, r3
  40245e:	d002      	beq.n	402466 <setvbuf+0x4e>
  402460:	4628      	mov	r0, r5
  402462:	f002 feb7 	bl	4051d4 <_free_r>
  402466:	2300      	movs	r3, #0
  402468:	6323      	str	r3, [r4, #48]	; 0x30
  40246a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40246e:	2200      	movs	r2, #0
  402470:	61a2      	str	r2, [r4, #24]
  402472:	6062      	str	r2, [r4, #4]
  402474:	061a      	lsls	r2, r3, #24
  402476:	d43a      	bmi.n	4024ee <setvbuf+0xd6>
  402478:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  40247c:	f023 0303 	bic.w	r3, r3, #3
  402480:	f1b8 0f02 	cmp.w	r8, #2
  402484:	81a3      	strh	r3, [r4, #12]
  402486:	d01d      	beq.n	4024c4 <setvbuf+0xac>
  402488:	ab01      	add	r3, sp, #4
  40248a:	466a      	mov	r2, sp
  40248c:	4621      	mov	r1, r4
  40248e:	4628      	mov	r0, r5
  402490:	f003 f972 	bl	405778 <__swhatbuf_r>
  402494:	89a3      	ldrh	r3, [r4, #12]
  402496:	4318      	orrs	r0, r3
  402498:	81a0      	strh	r0, [r4, #12]
  40249a:	2e00      	cmp	r6, #0
  40249c:	d132      	bne.n	402504 <setvbuf+0xec>
  40249e:	9e00      	ldr	r6, [sp, #0]
  4024a0:	4630      	mov	r0, r6
  4024a2:	f003 f9e1 	bl	405868 <malloc>
  4024a6:	4607      	mov	r7, r0
  4024a8:	2800      	cmp	r0, #0
  4024aa:	d06b      	beq.n	402584 <setvbuf+0x16c>
  4024ac:	89a3      	ldrh	r3, [r4, #12]
  4024ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4024b2:	81a3      	strh	r3, [r4, #12]
  4024b4:	e028      	b.n	402508 <setvbuf+0xf0>
  4024b6:	89a3      	ldrh	r3, [r4, #12]
  4024b8:	0599      	lsls	r1, r3, #22
  4024ba:	d4c7      	bmi.n	40244c <setvbuf+0x34>
  4024bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4024be:	f003 f957 	bl	405770 <__retarget_lock_acquire_recursive>
  4024c2:	e7c3      	b.n	40244c <setvbuf+0x34>
  4024c4:	2500      	movs	r5, #0
  4024c6:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4024c8:	2600      	movs	r6, #0
  4024ca:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4024ce:	f043 0302 	orr.w	r3, r3, #2
  4024d2:	2001      	movs	r0, #1
  4024d4:	60a6      	str	r6, [r4, #8]
  4024d6:	07ce      	lsls	r6, r1, #31
  4024d8:	81a3      	strh	r3, [r4, #12]
  4024da:	6022      	str	r2, [r4, #0]
  4024dc:	6122      	str	r2, [r4, #16]
  4024de:	6160      	str	r0, [r4, #20]
  4024e0:	d401      	bmi.n	4024e6 <setvbuf+0xce>
  4024e2:	0598      	lsls	r0, r3, #22
  4024e4:	d53e      	bpl.n	402564 <setvbuf+0x14c>
  4024e6:	4628      	mov	r0, r5
  4024e8:	b003      	add	sp, #12
  4024ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4024ee:	6921      	ldr	r1, [r4, #16]
  4024f0:	4628      	mov	r0, r5
  4024f2:	f002 fe6f 	bl	4051d4 <_free_r>
  4024f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4024fa:	e7bd      	b.n	402478 <setvbuf+0x60>
  4024fc:	4628      	mov	r0, r5
  4024fe:	f002 fd43 	bl	404f88 <__sinit>
  402502:	e796      	b.n	402432 <setvbuf+0x1a>
  402504:	2f00      	cmp	r7, #0
  402506:	d0cb      	beq.n	4024a0 <setvbuf+0x88>
  402508:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40250a:	2b00      	cmp	r3, #0
  40250c:	d033      	beq.n	402576 <setvbuf+0x15e>
  40250e:	9b00      	ldr	r3, [sp, #0]
  402510:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402514:	6027      	str	r7, [r4, #0]
  402516:	429e      	cmp	r6, r3
  402518:	bf1c      	itt	ne
  40251a:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  40251e:	81a2      	strhne	r2, [r4, #12]
  402520:	f1b8 0f01 	cmp.w	r8, #1
  402524:	bf04      	itt	eq
  402526:	f042 0201 	orreq.w	r2, r2, #1
  40252a:	81a2      	strheq	r2, [r4, #12]
  40252c:	b292      	uxth	r2, r2
  40252e:	f012 0308 	ands.w	r3, r2, #8
  402532:	6127      	str	r7, [r4, #16]
  402534:	6166      	str	r6, [r4, #20]
  402536:	d00e      	beq.n	402556 <setvbuf+0x13e>
  402538:	07d1      	lsls	r1, r2, #31
  40253a:	d51a      	bpl.n	402572 <setvbuf+0x15a>
  40253c:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40253e:	4276      	negs	r6, r6
  402540:	2300      	movs	r3, #0
  402542:	f015 0501 	ands.w	r5, r5, #1
  402546:	61a6      	str	r6, [r4, #24]
  402548:	60a3      	str	r3, [r4, #8]
  40254a:	d009      	beq.n	402560 <setvbuf+0x148>
  40254c:	2500      	movs	r5, #0
  40254e:	4628      	mov	r0, r5
  402550:	b003      	add	sp, #12
  402552:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402556:	60a3      	str	r3, [r4, #8]
  402558:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40255a:	f015 0501 	ands.w	r5, r5, #1
  40255e:	d1f5      	bne.n	40254c <setvbuf+0x134>
  402560:	0593      	lsls	r3, r2, #22
  402562:	d4c0      	bmi.n	4024e6 <setvbuf+0xce>
  402564:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402566:	f003 f905 	bl	405774 <__retarget_lock_release_recursive>
  40256a:	4628      	mov	r0, r5
  40256c:	b003      	add	sp, #12
  40256e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402572:	60a6      	str	r6, [r4, #8]
  402574:	e7f0      	b.n	402558 <setvbuf+0x140>
  402576:	4628      	mov	r0, r5
  402578:	f002 fd06 	bl	404f88 <__sinit>
  40257c:	e7c7      	b.n	40250e <setvbuf+0xf6>
  40257e:	f04f 35ff 	mov.w	r5, #4294967295
  402582:	e7b0      	b.n	4024e6 <setvbuf+0xce>
  402584:	f8dd 9000 	ldr.w	r9, [sp]
  402588:	45b1      	cmp	r9, r6
  40258a:	d004      	beq.n	402596 <setvbuf+0x17e>
  40258c:	4648      	mov	r0, r9
  40258e:	f003 f96b 	bl	405868 <malloc>
  402592:	4607      	mov	r7, r0
  402594:	b920      	cbnz	r0, 4025a0 <setvbuf+0x188>
  402596:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40259a:	f04f 35ff 	mov.w	r5, #4294967295
  40259e:	e792      	b.n	4024c6 <setvbuf+0xae>
  4025a0:	464e      	mov	r6, r9
  4025a2:	e783      	b.n	4024ac <setvbuf+0x94>
  4025a4:	20400018 	.word	0x20400018
	...

004025c0 <strlen>:
  4025c0:	f890 f000 	pld	[r0]
  4025c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  4025c8:	f020 0107 	bic.w	r1, r0, #7
  4025cc:	f06f 0c00 	mvn.w	ip, #0
  4025d0:	f010 0407 	ands.w	r4, r0, #7
  4025d4:	f891 f020 	pld	[r1, #32]
  4025d8:	f040 8049 	bne.w	40266e <strlen+0xae>
  4025dc:	f04f 0400 	mov.w	r4, #0
  4025e0:	f06f 0007 	mvn.w	r0, #7
  4025e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4025e8:	f891 f040 	pld	[r1, #64]	; 0x40
  4025ec:	f100 0008 	add.w	r0, r0, #8
  4025f0:	fa82 f24c 	uadd8	r2, r2, ip
  4025f4:	faa4 f28c 	sel	r2, r4, ip
  4025f8:	fa83 f34c 	uadd8	r3, r3, ip
  4025fc:	faa2 f38c 	sel	r3, r2, ip
  402600:	bb4b      	cbnz	r3, 402656 <strlen+0x96>
  402602:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  402606:	fa82 f24c 	uadd8	r2, r2, ip
  40260a:	f100 0008 	add.w	r0, r0, #8
  40260e:	faa4 f28c 	sel	r2, r4, ip
  402612:	fa83 f34c 	uadd8	r3, r3, ip
  402616:	faa2 f38c 	sel	r3, r2, ip
  40261a:	b9e3      	cbnz	r3, 402656 <strlen+0x96>
  40261c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  402620:	fa82 f24c 	uadd8	r2, r2, ip
  402624:	f100 0008 	add.w	r0, r0, #8
  402628:	faa4 f28c 	sel	r2, r4, ip
  40262c:	fa83 f34c 	uadd8	r3, r3, ip
  402630:	faa2 f38c 	sel	r3, r2, ip
  402634:	b97b      	cbnz	r3, 402656 <strlen+0x96>
  402636:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40263a:	f101 0120 	add.w	r1, r1, #32
  40263e:	fa82 f24c 	uadd8	r2, r2, ip
  402642:	f100 0008 	add.w	r0, r0, #8
  402646:	faa4 f28c 	sel	r2, r4, ip
  40264a:	fa83 f34c 	uadd8	r3, r3, ip
  40264e:	faa2 f38c 	sel	r3, r2, ip
  402652:	2b00      	cmp	r3, #0
  402654:	d0c6      	beq.n	4025e4 <strlen+0x24>
  402656:	2a00      	cmp	r2, #0
  402658:	bf04      	itt	eq
  40265a:	3004      	addeq	r0, #4
  40265c:	461a      	moveq	r2, r3
  40265e:	ba12      	rev	r2, r2
  402660:	fab2 f282 	clz	r2, r2
  402664:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  402668:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40266c:	4770      	bx	lr
  40266e:	e9d1 2300 	ldrd	r2, r3, [r1]
  402672:	f004 0503 	and.w	r5, r4, #3
  402676:	f1c4 0000 	rsb	r0, r4, #0
  40267a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40267e:	f014 0f04 	tst.w	r4, #4
  402682:	f891 f040 	pld	[r1, #64]	; 0x40
  402686:	fa0c f505 	lsl.w	r5, ip, r5
  40268a:	ea62 0205 	orn	r2, r2, r5
  40268e:	bf1c      	itt	ne
  402690:	ea63 0305 	ornne	r3, r3, r5
  402694:	4662      	movne	r2, ip
  402696:	f04f 0400 	mov.w	r4, #0
  40269a:	e7a9      	b.n	4025f0 <strlen+0x30>

0040269c <__sprint_r.part.0>:
  40269c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4026a0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4026a2:	049c      	lsls	r4, r3, #18
  4026a4:	4693      	mov	fp, r2
  4026a6:	d52f      	bpl.n	402708 <__sprint_r.part.0+0x6c>
  4026a8:	6893      	ldr	r3, [r2, #8]
  4026aa:	6812      	ldr	r2, [r2, #0]
  4026ac:	b353      	cbz	r3, 402704 <__sprint_r.part.0+0x68>
  4026ae:	460e      	mov	r6, r1
  4026b0:	4607      	mov	r7, r0
  4026b2:	f102 0908 	add.w	r9, r2, #8
  4026b6:	e919 0420 	ldmdb	r9, {r5, sl}
  4026ba:	ea5f 089a 	movs.w	r8, sl, lsr #2
  4026be:	d017      	beq.n	4026f0 <__sprint_r.part.0+0x54>
  4026c0:	3d04      	subs	r5, #4
  4026c2:	2400      	movs	r4, #0
  4026c4:	e001      	b.n	4026ca <__sprint_r.part.0+0x2e>
  4026c6:	45a0      	cmp	r8, r4
  4026c8:	d010      	beq.n	4026ec <__sprint_r.part.0+0x50>
  4026ca:	4632      	mov	r2, r6
  4026cc:	f855 1f04 	ldr.w	r1, [r5, #4]!
  4026d0:	4638      	mov	r0, r7
  4026d2:	f002 fcfb 	bl	4050cc <_fputwc_r>
  4026d6:	1c43      	adds	r3, r0, #1
  4026d8:	f104 0401 	add.w	r4, r4, #1
  4026dc:	d1f3      	bne.n	4026c6 <__sprint_r.part.0+0x2a>
  4026de:	2300      	movs	r3, #0
  4026e0:	f8cb 3008 	str.w	r3, [fp, #8]
  4026e4:	f8cb 3004 	str.w	r3, [fp, #4]
  4026e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4026ec:	f8db 3008 	ldr.w	r3, [fp, #8]
  4026f0:	f02a 0a03 	bic.w	sl, sl, #3
  4026f4:	eba3 030a 	sub.w	r3, r3, sl
  4026f8:	f8cb 3008 	str.w	r3, [fp, #8]
  4026fc:	f109 0908 	add.w	r9, r9, #8
  402700:	2b00      	cmp	r3, #0
  402702:	d1d8      	bne.n	4026b6 <__sprint_r.part.0+0x1a>
  402704:	2000      	movs	r0, #0
  402706:	e7ea      	b.n	4026de <__sprint_r.part.0+0x42>
  402708:	f002 fe4a 	bl	4053a0 <__sfvwrite_r>
  40270c:	2300      	movs	r3, #0
  40270e:	f8cb 3008 	str.w	r3, [fp, #8]
  402712:	f8cb 3004 	str.w	r3, [fp, #4]
  402716:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40271a:	bf00      	nop

0040271c <__sprint_r>:
  40271c:	6893      	ldr	r3, [r2, #8]
  40271e:	b10b      	cbz	r3, 402724 <__sprint_r+0x8>
  402720:	f7ff bfbc 	b.w	40269c <__sprint_r.part.0>
  402724:	b410      	push	{r4}
  402726:	4618      	mov	r0, r3
  402728:	6053      	str	r3, [r2, #4]
  40272a:	bc10      	pop	{r4}
  40272c:	4770      	bx	lr
  40272e:	bf00      	nop

00402730 <_vfprintf_r>:
  402730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402734:	b0c1      	sub	sp, #260	; 0x104
  402736:	461d      	mov	r5, r3
  402738:	468a      	mov	sl, r1
  40273a:	4691      	mov	r9, r2
  40273c:	4604      	mov	r4, r0
  40273e:	9008      	str	r0, [sp, #32]
  402740:	f003 f804 	bl	40574c <_localeconv_r>
  402744:	6803      	ldr	r3, [r0, #0]
  402746:	9315      	str	r3, [sp, #84]	; 0x54
  402748:	4618      	mov	r0, r3
  40274a:	f7ff ff39 	bl	4025c0 <strlen>
  40274e:	950e      	str	r5, [sp, #56]	; 0x38
  402750:	9014      	str	r0, [sp, #80]	; 0x50
  402752:	b11c      	cbz	r4, 40275c <_vfprintf_r+0x2c>
  402754:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  402756:	2b00      	cmp	r3, #0
  402758:	f000 825f 	beq.w	402c1a <_vfprintf_r+0x4ea>
  40275c:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  402760:	f9ba 200c 	ldrsh.w	r2, [sl, #12]
  402764:	f013 0f01 	tst.w	r3, #1
  402768:	b293      	uxth	r3, r2
  40276a:	d102      	bne.n	402772 <_vfprintf_r+0x42>
  40276c:	0599      	lsls	r1, r3, #22
  40276e:	f140 8275 	bpl.w	402c5c <_vfprintf_r+0x52c>
  402772:	049f      	lsls	r7, r3, #18
  402774:	d40a      	bmi.n	40278c <_vfprintf_r+0x5c>
  402776:	f8da 1064 	ldr.w	r1, [sl, #100]	; 0x64
  40277a:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
  40277e:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  402782:	f8aa 300c 	strh.w	r3, [sl, #12]
  402786:	f8ca 1064 	str.w	r1, [sl, #100]	; 0x64
  40278a:	b29b      	uxth	r3, r3
  40278c:	071e      	lsls	r6, r3, #28
  40278e:	f140 8223 	bpl.w	402bd8 <_vfprintf_r+0x4a8>
  402792:	f8da 2010 	ldr.w	r2, [sl, #16]
  402796:	2a00      	cmp	r2, #0
  402798:	f000 821e 	beq.w	402bd8 <_vfprintf_r+0x4a8>
  40279c:	f003 021a 	and.w	r2, r3, #26
  4027a0:	2a0a      	cmp	r2, #10
  4027a2:	f000 823e 	beq.w	402c22 <_vfprintf_r+0x4f2>
  4027a6:	2300      	movs	r3, #0
  4027a8:	4618      	mov	r0, r3
  4027aa:	9311      	str	r3, [sp, #68]	; 0x44
  4027ac:	9313      	str	r3, [sp, #76]	; 0x4c
  4027ae:	9312      	str	r3, [sp, #72]	; 0x48
  4027b0:	9325      	str	r3, [sp, #148]	; 0x94
  4027b2:	9324      	str	r3, [sp, #144]	; 0x90
  4027b4:	9318      	str	r3, [sp, #96]	; 0x60
  4027b6:	9319      	str	r3, [sp, #100]	; 0x64
  4027b8:	930b      	str	r3, [sp, #44]	; 0x2c
  4027ba:	ab30      	add	r3, sp, #192	; 0xc0
  4027bc:	9323      	str	r3, [sp, #140]	; 0x8c
  4027be:	4698      	mov	r8, r3
  4027c0:	9016      	str	r0, [sp, #88]	; 0x58
  4027c2:	9017      	str	r0, [sp, #92]	; 0x5c
  4027c4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
  4027c8:	f899 3000 	ldrb.w	r3, [r9]
  4027cc:	464c      	mov	r4, r9
  4027ce:	b1eb      	cbz	r3, 40280c <_vfprintf_r+0xdc>
  4027d0:	2b25      	cmp	r3, #37	; 0x25
  4027d2:	d102      	bne.n	4027da <_vfprintf_r+0xaa>
  4027d4:	e01a      	b.n	40280c <_vfprintf_r+0xdc>
  4027d6:	2b25      	cmp	r3, #37	; 0x25
  4027d8:	d003      	beq.n	4027e2 <_vfprintf_r+0xb2>
  4027da:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4027de:	2b00      	cmp	r3, #0
  4027e0:	d1f9      	bne.n	4027d6 <_vfprintf_r+0xa6>
  4027e2:	eba4 0509 	sub.w	r5, r4, r9
  4027e6:	b18d      	cbz	r5, 40280c <_vfprintf_r+0xdc>
  4027e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4027ea:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4027ec:	f8c8 9000 	str.w	r9, [r8]
  4027f0:	3301      	adds	r3, #1
  4027f2:	442a      	add	r2, r5
  4027f4:	2b07      	cmp	r3, #7
  4027f6:	f8c8 5004 	str.w	r5, [r8, #4]
  4027fa:	9225      	str	r2, [sp, #148]	; 0x94
  4027fc:	9324      	str	r3, [sp, #144]	; 0x90
  4027fe:	f300 8201 	bgt.w	402c04 <_vfprintf_r+0x4d4>
  402802:	f108 0808 	add.w	r8, r8, #8
  402806:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402808:	442b      	add	r3, r5
  40280a:	930b      	str	r3, [sp, #44]	; 0x2c
  40280c:	7823      	ldrb	r3, [r4, #0]
  40280e:	2b00      	cmp	r3, #0
  402810:	f000 83f0 	beq.w	402ff4 <_vfprintf_r+0x8c4>
  402814:	2300      	movs	r3, #0
  402816:	461a      	mov	r2, r3
  402818:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  40281c:	4619      	mov	r1, r3
  40281e:	930c      	str	r3, [sp, #48]	; 0x30
  402820:	469b      	mov	fp, r3
  402822:	7866      	ldrb	r6, [r4, #1]
  402824:	f04f 33ff 	mov.w	r3, #4294967295
  402828:	f104 0901 	add.w	r9, r4, #1
  40282c:	9309      	str	r3, [sp, #36]	; 0x24
  40282e:	f109 0901 	add.w	r9, r9, #1
  402832:	f1a6 0320 	sub.w	r3, r6, #32
  402836:	2b58      	cmp	r3, #88	; 0x58
  402838:	f200 83bf 	bhi.w	402fba <_vfprintf_r+0x88a>
  40283c:	e8df f013 	tbh	[pc, r3, lsl #1]
  402840:	03bd02e0 	.word	0x03bd02e0
  402844:	034f03bd 	.word	0x034f03bd
  402848:	03bd03bd 	.word	0x03bd03bd
  40284c:	03bd03bd 	.word	0x03bd03bd
  402850:	03bd03bd 	.word	0x03bd03bd
  402854:	03080354 	.word	0x03080354
  402858:	021a03bd 	.word	0x021a03bd
  40285c:	03bd02e8 	.word	0x03bd02e8
  402860:	033a0303 	.word	0x033a0303
  402864:	033a033a 	.word	0x033a033a
  402868:	033a033a 	.word	0x033a033a
  40286c:	033a033a 	.word	0x033a033a
  402870:	033a033a 	.word	0x033a033a
  402874:	03bd03bd 	.word	0x03bd03bd
  402878:	03bd03bd 	.word	0x03bd03bd
  40287c:	03bd03bd 	.word	0x03bd03bd
  402880:	03bd03bd 	.word	0x03bd03bd
  402884:	03bd03bd 	.word	0x03bd03bd
  402888:	03620349 	.word	0x03620349
  40288c:	036203bd 	.word	0x036203bd
  402890:	03bd03bd 	.word	0x03bd03bd
  402894:	03bd03bd 	.word	0x03bd03bd
  402898:	03bd03a2 	.word	0x03bd03a2
  40289c:	006f03bd 	.word	0x006f03bd
  4028a0:	03bd03bd 	.word	0x03bd03bd
  4028a4:	03bd03bd 	.word	0x03bd03bd
  4028a8:	005903bd 	.word	0x005903bd
  4028ac:	03bd03bd 	.word	0x03bd03bd
  4028b0:	03bd031e 	.word	0x03bd031e
  4028b4:	03bd03bd 	.word	0x03bd03bd
  4028b8:	03bd03bd 	.word	0x03bd03bd
  4028bc:	03bd03bd 	.word	0x03bd03bd
  4028c0:	03bd03bd 	.word	0x03bd03bd
  4028c4:	032403bd 	.word	0x032403bd
  4028c8:	03620273 	.word	0x03620273
  4028cc:	03620362 	.word	0x03620362
  4028d0:	027302b7 	.word	0x027302b7
  4028d4:	03bd03bd 	.word	0x03bd03bd
  4028d8:	03bd02bc 	.word	0x03bd02bc
  4028dc:	007102c9 	.word	0x007102c9
  4028e0:	0247030d 	.word	0x0247030d
  4028e4:	025203bd 	.word	0x025203bd
  4028e8:	005b03bd 	.word	0x005b03bd
  4028ec:	03bd03bd 	.word	0x03bd03bd
  4028f0:	021f      	.short	0x021f
  4028f2:	f04b 0b10 	orr.w	fp, fp, #16
  4028f6:	f01b 0f20 	tst.w	fp, #32
  4028fa:	f040 8353 	bne.w	402fa4 <_vfprintf_r+0x874>
  4028fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402900:	f01b 0f10 	tst.w	fp, #16
  402904:	4613      	mov	r3, r2
  402906:	f040 85b4 	bne.w	403472 <_vfprintf_r+0xd42>
  40290a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40290e:	f000 85b0 	beq.w	403472 <_vfprintf_r+0xd42>
  402912:	8814      	ldrh	r4, [r2, #0]
  402914:	3204      	adds	r2, #4
  402916:	2500      	movs	r5, #0
  402918:	2301      	movs	r3, #1
  40291a:	920e      	str	r2, [sp, #56]	; 0x38
  40291c:	e014      	b.n	402948 <_vfprintf_r+0x218>
  40291e:	f04b 0b10 	orr.w	fp, fp, #16
  402922:	f01b 0320 	ands.w	r3, fp, #32
  402926:	f040 8332 	bne.w	402f8e <_vfprintf_r+0x85e>
  40292a:	f01b 0210 	ands.w	r2, fp, #16
  40292e:	f040 8589 	bne.w	403444 <_vfprintf_r+0xd14>
  402932:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402936:	f000 8585 	beq.w	403444 <_vfprintf_r+0xd14>
  40293a:	990e      	ldr	r1, [sp, #56]	; 0x38
  40293c:	4613      	mov	r3, r2
  40293e:	460a      	mov	r2, r1
  402940:	3204      	adds	r2, #4
  402942:	880c      	ldrh	r4, [r1, #0]
  402944:	920e      	str	r2, [sp, #56]	; 0x38
  402946:	2500      	movs	r5, #0
  402948:	f04f 0a00 	mov.w	sl, #0
  40294c:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  402950:	9909      	ldr	r1, [sp, #36]	; 0x24
  402952:	1c4a      	adds	r2, r1, #1
  402954:	f000 820b 	beq.w	402d6e <_vfprintf_r+0x63e>
  402958:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  40295c:	9206      	str	r2, [sp, #24]
  40295e:	ea54 0205 	orrs.w	r2, r4, r5
  402962:	f040 820a 	bne.w	402d7a <_vfprintf_r+0x64a>
  402966:	2900      	cmp	r1, #0
  402968:	f040 846f 	bne.w	40324a <_vfprintf_r+0xb1a>
  40296c:	2b00      	cmp	r3, #0
  40296e:	f040 852d 	bne.w	4033cc <_vfprintf_r+0xc9c>
  402972:	f01b 0301 	ands.w	r3, fp, #1
  402976:	930d      	str	r3, [sp, #52]	; 0x34
  402978:	f000 8668 	beq.w	40364c <_vfprintf_r+0xf1c>
  40297c:	af40      	add	r7, sp, #256	; 0x100
  40297e:	2330      	movs	r3, #48	; 0x30
  402980:	f807 3d41 	strb.w	r3, [r7, #-65]!
  402984:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402986:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402988:	4293      	cmp	r3, r2
  40298a:	bfb8      	it	lt
  40298c:	4613      	movlt	r3, r2
  40298e:	9307      	str	r3, [sp, #28]
  402990:	2300      	movs	r3, #0
  402992:	9310      	str	r3, [sp, #64]	; 0x40
  402994:	f1ba 0f00 	cmp.w	sl, #0
  402998:	d002      	beq.n	4029a0 <_vfprintf_r+0x270>
  40299a:	9b07      	ldr	r3, [sp, #28]
  40299c:	3301      	adds	r3, #1
  40299e:	9307      	str	r3, [sp, #28]
  4029a0:	9b06      	ldr	r3, [sp, #24]
  4029a2:	f013 0302 	ands.w	r3, r3, #2
  4029a6:	930f      	str	r3, [sp, #60]	; 0x3c
  4029a8:	d002      	beq.n	4029b0 <_vfprintf_r+0x280>
  4029aa:	9b07      	ldr	r3, [sp, #28]
  4029ac:	3302      	adds	r3, #2
  4029ae:	9307      	str	r3, [sp, #28]
  4029b0:	9b06      	ldr	r3, [sp, #24]
  4029b2:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4029b6:	f040 831b 	bne.w	402ff0 <_vfprintf_r+0x8c0>
  4029ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4029bc:	9a07      	ldr	r2, [sp, #28]
  4029be:	eba3 0b02 	sub.w	fp, r3, r2
  4029c2:	f1bb 0f00 	cmp.w	fp, #0
  4029c6:	f340 8313 	ble.w	402ff0 <_vfprintf_r+0x8c0>
  4029ca:	f1bb 0f10 	cmp.w	fp, #16
  4029ce:	9925      	ldr	r1, [sp, #148]	; 0x94
  4029d0:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4029d2:	dd28      	ble.n	402a26 <_vfprintf_r+0x2f6>
  4029d4:	4643      	mov	r3, r8
  4029d6:	2410      	movs	r4, #16
  4029d8:	46a8      	mov	r8, r5
  4029da:	f8dd a020 	ldr.w	sl, [sp, #32]
  4029de:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4029e0:	e006      	b.n	4029f0 <_vfprintf_r+0x2c0>
  4029e2:	f1ab 0b10 	sub.w	fp, fp, #16
  4029e6:	f1bb 0f10 	cmp.w	fp, #16
  4029ea:	f103 0308 	add.w	r3, r3, #8
  4029ee:	dd18      	ble.n	402a22 <_vfprintf_r+0x2f2>
  4029f0:	3201      	adds	r2, #1
  4029f2:	48b9      	ldr	r0, [pc, #740]	; (402cd8 <_vfprintf_r+0x5a8>)
  4029f4:	9224      	str	r2, [sp, #144]	; 0x90
  4029f6:	3110      	adds	r1, #16
  4029f8:	2a07      	cmp	r2, #7
  4029fa:	9125      	str	r1, [sp, #148]	; 0x94
  4029fc:	e883 0011 	stmia.w	r3, {r0, r4}
  402a00:	ddef      	ble.n	4029e2 <_vfprintf_r+0x2b2>
  402a02:	aa23      	add	r2, sp, #140	; 0x8c
  402a04:	4629      	mov	r1, r5
  402a06:	4650      	mov	r0, sl
  402a08:	f7ff fe88 	bl	40271c <__sprint_r>
  402a0c:	2800      	cmp	r0, #0
  402a0e:	f040 836a 	bne.w	4030e6 <_vfprintf_r+0x9b6>
  402a12:	f1ab 0b10 	sub.w	fp, fp, #16
  402a16:	f1bb 0f10 	cmp.w	fp, #16
  402a1a:	9925      	ldr	r1, [sp, #148]	; 0x94
  402a1c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  402a1e:	ab30      	add	r3, sp, #192	; 0xc0
  402a20:	dce6      	bgt.n	4029f0 <_vfprintf_r+0x2c0>
  402a22:	4645      	mov	r5, r8
  402a24:	4698      	mov	r8, r3
  402a26:	3201      	adds	r2, #1
  402a28:	4bab      	ldr	r3, [pc, #684]	; (402cd8 <_vfprintf_r+0x5a8>)
  402a2a:	9224      	str	r2, [sp, #144]	; 0x90
  402a2c:	eb0b 0401 	add.w	r4, fp, r1
  402a30:	2a07      	cmp	r2, #7
  402a32:	9425      	str	r4, [sp, #148]	; 0x94
  402a34:	e888 0808 	stmia.w	r8, {r3, fp}
  402a38:	f300 84cd 	bgt.w	4033d6 <_vfprintf_r+0xca6>
  402a3c:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402a40:	f108 0808 	add.w	r8, r8, #8
  402a44:	f1ba 0f00 	cmp.w	sl, #0
  402a48:	d00e      	beq.n	402a68 <_vfprintf_r+0x338>
  402a4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402a4c:	3301      	adds	r3, #1
  402a4e:	3401      	adds	r4, #1
  402a50:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
  402a54:	2201      	movs	r2, #1
  402a56:	2b07      	cmp	r3, #7
  402a58:	9425      	str	r4, [sp, #148]	; 0x94
  402a5a:	9324      	str	r3, [sp, #144]	; 0x90
  402a5c:	e888 0006 	stmia.w	r8, {r1, r2}
  402a60:	f300 840a 	bgt.w	403278 <_vfprintf_r+0xb48>
  402a64:	f108 0808 	add.w	r8, r8, #8
  402a68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  402a6a:	b16b      	cbz	r3, 402a88 <_vfprintf_r+0x358>
  402a6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402a6e:	3301      	adds	r3, #1
  402a70:	3402      	adds	r4, #2
  402a72:	a91c      	add	r1, sp, #112	; 0x70
  402a74:	2202      	movs	r2, #2
  402a76:	2b07      	cmp	r3, #7
  402a78:	9425      	str	r4, [sp, #148]	; 0x94
  402a7a:	9324      	str	r3, [sp, #144]	; 0x90
  402a7c:	e888 0006 	stmia.w	r8, {r1, r2}
  402a80:	f300 8406 	bgt.w	403290 <_vfprintf_r+0xb60>
  402a84:	f108 0808 	add.w	r8, r8, #8
  402a88:	2d80      	cmp	r5, #128	; 0x80
  402a8a:	f000 832e 	beq.w	4030ea <_vfprintf_r+0x9ba>
  402a8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402a90:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402a92:	eba3 0a02 	sub.w	sl, r3, r2
  402a96:	f1ba 0f00 	cmp.w	sl, #0
  402a9a:	dd3b      	ble.n	402b14 <_vfprintf_r+0x3e4>
  402a9c:	f1ba 0f10 	cmp.w	sl, #16
  402aa0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402aa2:	4d8e      	ldr	r5, [pc, #568]	; (402cdc <_vfprintf_r+0x5ac>)
  402aa4:	dd2b      	ble.n	402afe <_vfprintf_r+0x3ce>
  402aa6:	4642      	mov	r2, r8
  402aa8:	4621      	mov	r1, r4
  402aaa:	46b0      	mov	r8, r6
  402aac:	f04f 0b10 	mov.w	fp, #16
  402ab0:	462e      	mov	r6, r5
  402ab2:	9c08      	ldr	r4, [sp, #32]
  402ab4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402ab6:	e006      	b.n	402ac6 <_vfprintf_r+0x396>
  402ab8:	f1aa 0a10 	sub.w	sl, sl, #16
  402abc:	f1ba 0f10 	cmp.w	sl, #16
  402ac0:	f102 0208 	add.w	r2, r2, #8
  402ac4:	dd17      	ble.n	402af6 <_vfprintf_r+0x3c6>
  402ac6:	3301      	adds	r3, #1
  402ac8:	3110      	adds	r1, #16
  402aca:	2b07      	cmp	r3, #7
  402acc:	9125      	str	r1, [sp, #148]	; 0x94
  402ace:	9324      	str	r3, [sp, #144]	; 0x90
  402ad0:	e882 0840 	stmia.w	r2, {r6, fp}
  402ad4:	ddf0      	ble.n	402ab8 <_vfprintf_r+0x388>
  402ad6:	aa23      	add	r2, sp, #140	; 0x8c
  402ad8:	4629      	mov	r1, r5
  402ada:	4620      	mov	r0, r4
  402adc:	f7ff fe1e 	bl	40271c <__sprint_r>
  402ae0:	2800      	cmp	r0, #0
  402ae2:	f040 8300 	bne.w	4030e6 <_vfprintf_r+0x9b6>
  402ae6:	f1aa 0a10 	sub.w	sl, sl, #16
  402aea:	f1ba 0f10 	cmp.w	sl, #16
  402aee:	9925      	ldr	r1, [sp, #148]	; 0x94
  402af0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402af2:	aa30      	add	r2, sp, #192	; 0xc0
  402af4:	dce7      	bgt.n	402ac6 <_vfprintf_r+0x396>
  402af6:	4635      	mov	r5, r6
  402af8:	460c      	mov	r4, r1
  402afa:	4646      	mov	r6, r8
  402afc:	4690      	mov	r8, r2
  402afe:	3301      	adds	r3, #1
  402b00:	4454      	add	r4, sl
  402b02:	2b07      	cmp	r3, #7
  402b04:	9425      	str	r4, [sp, #148]	; 0x94
  402b06:	9324      	str	r3, [sp, #144]	; 0x90
  402b08:	e888 0420 	stmia.w	r8, {r5, sl}
  402b0c:	f300 83a9 	bgt.w	403262 <_vfprintf_r+0xb32>
  402b10:	f108 0808 	add.w	r8, r8, #8
  402b14:	9b06      	ldr	r3, [sp, #24]
  402b16:	05db      	lsls	r3, r3, #23
  402b18:	f100 8285 	bmi.w	403026 <_vfprintf_r+0x8f6>
  402b1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402b1e:	990d      	ldr	r1, [sp, #52]	; 0x34
  402b20:	f8c8 7000 	str.w	r7, [r8]
  402b24:	3301      	adds	r3, #1
  402b26:	440c      	add	r4, r1
  402b28:	2b07      	cmp	r3, #7
  402b2a:	9425      	str	r4, [sp, #148]	; 0x94
  402b2c:	f8c8 1004 	str.w	r1, [r8, #4]
  402b30:	9324      	str	r3, [sp, #144]	; 0x90
  402b32:	f300 8375 	bgt.w	403220 <_vfprintf_r+0xaf0>
  402b36:	f108 0808 	add.w	r8, r8, #8
  402b3a:	9b06      	ldr	r3, [sp, #24]
  402b3c:	0759      	lsls	r1, r3, #29
  402b3e:	d53b      	bpl.n	402bb8 <_vfprintf_r+0x488>
  402b40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  402b42:	9a07      	ldr	r2, [sp, #28]
  402b44:	1a9d      	subs	r5, r3, r2
  402b46:	2d00      	cmp	r5, #0
  402b48:	dd36      	ble.n	402bb8 <_vfprintf_r+0x488>
  402b4a:	2d10      	cmp	r5, #16
  402b4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402b4e:	dd21      	ble.n	402b94 <_vfprintf_r+0x464>
  402b50:	2610      	movs	r6, #16
  402b52:	9f08      	ldr	r7, [sp, #32]
  402b54:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402b58:	e004      	b.n	402b64 <_vfprintf_r+0x434>
  402b5a:	3d10      	subs	r5, #16
  402b5c:	2d10      	cmp	r5, #16
  402b5e:	f108 0808 	add.w	r8, r8, #8
  402b62:	dd17      	ble.n	402b94 <_vfprintf_r+0x464>
  402b64:	3301      	adds	r3, #1
  402b66:	4a5c      	ldr	r2, [pc, #368]	; (402cd8 <_vfprintf_r+0x5a8>)
  402b68:	9324      	str	r3, [sp, #144]	; 0x90
  402b6a:	3410      	adds	r4, #16
  402b6c:	2b07      	cmp	r3, #7
  402b6e:	9425      	str	r4, [sp, #148]	; 0x94
  402b70:	e888 0044 	stmia.w	r8, {r2, r6}
  402b74:	ddf1      	ble.n	402b5a <_vfprintf_r+0x42a>
  402b76:	aa23      	add	r2, sp, #140	; 0x8c
  402b78:	4651      	mov	r1, sl
  402b7a:	4638      	mov	r0, r7
  402b7c:	f7ff fdce 	bl	40271c <__sprint_r>
  402b80:	2800      	cmp	r0, #0
  402b82:	f040 823f 	bne.w	403004 <_vfprintf_r+0x8d4>
  402b86:	3d10      	subs	r5, #16
  402b88:	2d10      	cmp	r5, #16
  402b8a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402b8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402b8e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402b92:	dce7      	bgt.n	402b64 <_vfprintf_r+0x434>
  402b94:	3301      	adds	r3, #1
  402b96:	4a50      	ldr	r2, [pc, #320]	; (402cd8 <_vfprintf_r+0x5a8>)
  402b98:	9324      	str	r3, [sp, #144]	; 0x90
  402b9a:	442c      	add	r4, r5
  402b9c:	2b07      	cmp	r3, #7
  402b9e:	9425      	str	r4, [sp, #148]	; 0x94
  402ba0:	e888 0024 	stmia.w	r8, {r2, r5}
  402ba4:	dd08      	ble.n	402bb8 <_vfprintf_r+0x488>
  402ba6:	aa23      	add	r2, sp, #140	; 0x8c
  402ba8:	990a      	ldr	r1, [sp, #40]	; 0x28
  402baa:	9808      	ldr	r0, [sp, #32]
  402bac:	f7ff fdb6 	bl	40271c <__sprint_r>
  402bb0:	2800      	cmp	r0, #0
  402bb2:	f040 8347 	bne.w	403244 <_vfprintf_r+0xb14>
  402bb6:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402bb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402bba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402bbc:	9907      	ldr	r1, [sp, #28]
  402bbe:	428a      	cmp	r2, r1
  402bc0:	bfac      	ite	ge
  402bc2:	189b      	addge	r3, r3, r2
  402bc4:	185b      	addlt	r3, r3, r1
  402bc6:	930b      	str	r3, [sp, #44]	; 0x2c
  402bc8:	2c00      	cmp	r4, #0
  402bca:	f040 8333 	bne.w	403234 <_vfprintf_r+0xb04>
  402bce:	2300      	movs	r3, #0
  402bd0:	9324      	str	r3, [sp, #144]	; 0x90
  402bd2:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402bd6:	e5f7      	b.n	4027c8 <_vfprintf_r+0x98>
  402bd8:	4651      	mov	r1, sl
  402bda:	9808      	ldr	r0, [sp, #32]
  402bdc:	f001 f896 	bl	403d0c <__swsetup_r>
  402be0:	2800      	cmp	r0, #0
  402be2:	d038      	beq.n	402c56 <_vfprintf_r+0x526>
  402be4:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  402be8:	07dd      	lsls	r5, r3, #31
  402bea:	d404      	bmi.n	402bf6 <_vfprintf_r+0x4c6>
  402bec:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  402bf0:	059c      	lsls	r4, r3, #22
  402bf2:	f140 85ca 	bpl.w	40378a <_vfprintf_r+0x105a>
  402bf6:	f04f 33ff 	mov.w	r3, #4294967295
  402bfa:	930b      	str	r3, [sp, #44]	; 0x2c
  402bfc:	980b      	ldr	r0, [sp, #44]	; 0x2c
  402bfe:	b041      	add	sp, #260	; 0x104
  402c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c04:	aa23      	add	r2, sp, #140	; 0x8c
  402c06:	990a      	ldr	r1, [sp, #40]	; 0x28
  402c08:	9808      	ldr	r0, [sp, #32]
  402c0a:	f7ff fd87 	bl	40271c <__sprint_r>
  402c0e:	2800      	cmp	r0, #0
  402c10:	f040 8318 	bne.w	403244 <_vfprintf_r+0xb14>
  402c14:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402c18:	e5f5      	b.n	402806 <_vfprintf_r+0xd6>
  402c1a:	9808      	ldr	r0, [sp, #32]
  402c1c:	f002 f9b4 	bl	404f88 <__sinit>
  402c20:	e59c      	b.n	40275c <_vfprintf_r+0x2c>
  402c22:	f9ba 200e 	ldrsh.w	r2, [sl, #14]
  402c26:	2a00      	cmp	r2, #0
  402c28:	f6ff adbd 	blt.w	4027a6 <_vfprintf_r+0x76>
  402c2c:	f8da 2064 	ldr.w	r2, [sl, #100]	; 0x64
  402c30:	07d0      	lsls	r0, r2, #31
  402c32:	d405      	bmi.n	402c40 <_vfprintf_r+0x510>
  402c34:	0599      	lsls	r1, r3, #22
  402c36:	d403      	bmi.n	402c40 <_vfprintf_r+0x510>
  402c38:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  402c3c:	f002 fd9a 	bl	405774 <__retarget_lock_release_recursive>
  402c40:	462b      	mov	r3, r5
  402c42:	464a      	mov	r2, r9
  402c44:	4651      	mov	r1, sl
  402c46:	9808      	ldr	r0, [sp, #32]
  402c48:	f001 f81e 	bl	403c88 <__sbprintf>
  402c4c:	900b      	str	r0, [sp, #44]	; 0x2c
  402c4e:	980b      	ldr	r0, [sp, #44]	; 0x2c
  402c50:	b041      	add	sp, #260	; 0x104
  402c52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c56:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  402c5a:	e59f      	b.n	40279c <_vfprintf_r+0x6c>
  402c5c:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  402c60:	f002 fd86 	bl	405770 <__retarget_lock_acquire_recursive>
  402c64:	f9ba 200c 	ldrsh.w	r2, [sl, #12]
  402c68:	b293      	uxth	r3, r2
  402c6a:	e582      	b.n	402772 <_vfprintf_r+0x42>
  402c6c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c6e:	930e      	str	r3, [sp, #56]	; 0x38
  402c70:	4240      	negs	r0, r0
  402c72:	900c      	str	r0, [sp, #48]	; 0x30
  402c74:	f04b 0b04 	orr.w	fp, fp, #4
  402c78:	f899 6000 	ldrb.w	r6, [r9]
  402c7c:	e5d7      	b.n	40282e <_vfprintf_r+0xfe>
  402c7e:	2a00      	cmp	r2, #0
  402c80:	f040 87df 	bne.w	403c42 <_vfprintf_r+0x1512>
  402c84:	4b16      	ldr	r3, [pc, #88]	; (402ce0 <_vfprintf_r+0x5b0>)
  402c86:	9318      	str	r3, [sp, #96]	; 0x60
  402c88:	f01b 0f20 	tst.w	fp, #32
  402c8c:	f040 84b9 	bne.w	403602 <_vfprintf_r+0xed2>
  402c90:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402c92:	f01b 0f10 	tst.w	fp, #16
  402c96:	4613      	mov	r3, r2
  402c98:	f040 83dc 	bne.w	403454 <_vfprintf_r+0xd24>
  402c9c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402ca0:	f000 83d8 	beq.w	403454 <_vfprintf_r+0xd24>
  402ca4:	3304      	adds	r3, #4
  402ca6:	8814      	ldrh	r4, [r2, #0]
  402ca8:	930e      	str	r3, [sp, #56]	; 0x38
  402caa:	2500      	movs	r5, #0
  402cac:	f01b 0f01 	tst.w	fp, #1
  402cb0:	f000 8322 	beq.w	4032f8 <_vfprintf_r+0xbc8>
  402cb4:	ea54 0305 	orrs.w	r3, r4, r5
  402cb8:	f000 831e 	beq.w	4032f8 <_vfprintf_r+0xbc8>
  402cbc:	2330      	movs	r3, #48	; 0x30
  402cbe:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  402cc2:	f88d 6071 	strb.w	r6, [sp, #113]	; 0x71
  402cc6:	f04b 0b02 	orr.w	fp, fp, #2
  402cca:	2302      	movs	r3, #2
  402ccc:	e63c      	b.n	402948 <_vfprintf_r+0x218>
  402cce:	f04b 0b20 	orr.w	fp, fp, #32
  402cd2:	f899 6000 	ldrb.w	r6, [r9]
  402cd6:	e5aa      	b.n	40282e <_vfprintf_r+0xfe>
  402cd8:	00407380 	.word	0x00407380
  402cdc:	00407390 	.word	0x00407390
  402ce0:	00407360 	.word	0x00407360
  402ce4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402ce6:	6817      	ldr	r7, [r2, #0]
  402ce8:	2400      	movs	r4, #0
  402cea:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
  402cee:	1d15      	adds	r5, r2, #4
  402cf0:	2f00      	cmp	r7, #0
  402cf2:	f000 864e 	beq.w	403992 <_vfprintf_r+0x1262>
  402cf6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402cf8:	1c53      	adds	r3, r2, #1
  402cfa:	f000 85cc 	beq.w	403896 <_vfprintf_r+0x1166>
  402cfe:	4621      	mov	r1, r4
  402d00:	4638      	mov	r0, r7
  402d02:	f003 f885 	bl	405e10 <memchr>
  402d06:	2800      	cmp	r0, #0
  402d08:	f000 8697 	beq.w	403a3a <_vfprintf_r+0x130a>
  402d0c:	1bc3      	subs	r3, r0, r7
  402d0e:	930d      	str	r3, [sp, #52]	; 0x34
  402d10:	9409      	str	r4, [sp, #36]	; 0x24
  402d12:	950e      	str	r5, [sp, #56]	; 0x38
  402d14:	f8cd b018 	str.w	fp, [sp, #24]
  402d18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402d1c:	9307      	str	r3, [sp, #28]
  402d1e:	9410      	str	r4, [sp, #64]	; 0x40
  402d20:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402d24:	e636      	b.n	402994 <_vfprintf_r+0x264>
  402d26:	2a00      	cmp	r2, #0
  402d28:	f040 8796 	bne.w	403c58 <_vfprintf_r+0x1528>
  402d2c:	f01b 0f20 	tst.w	fp, #32
  402d30:	f040 845a 	bne.w	4035e8 <_vfprintf_r+0xeb8>
  402d34:	f01b 0f10 	tst.w	fp, #16
  402d38:	f040 83a2 	bne.w	403480 <_vfprintf_r+0xd50>
  402d3c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402d40:	f000 839e 	beq.w	403480 <_vfprintf_r+0xd50>
  402d44:	990e      	ldr	r1, [sp, #56]	; 0x38
  402d46:	f9b1 4000 	ldrsh.w	r4, [r1]
  402d4a:	3104      	adds	r1, #4
  402d4c:	17e5      	asrs	r5, r4, #31
  402d4e:	4622      	mov	r2, r4
  402d50:	462b      	mov	r3, r5
  402d52:	910e      	str	r1, [sp, #56]	; 0x38
  402d54:	2a00      	cmp	r2, #0
  402d56:	f173 0300 	sbcs.w	r3, r3, #0
  402d5a:	f2c0 8487 	blt.w	40366c <_vfprintf_r+0xf3c>
  402d5e:	9909      	ldr	r1, [sp, #36]	; 0x24
  402d60:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402d64:	1c4a      	adds	r2, r1, #1
  402d66:	f04f 0301 	mov.w	r3, #1
  402d6a:	f47f adf5 	bne.w	402958 <_vfprintf_r+0x228>
  402d6e:	ea54 0205 	orrs.w	r2, r4, r5
  402d72:	f000 826c 	beq.w	40324e <_vfprintf_r+0xb1e>
  402d76:	f8cd b018 	str.w	fp, [sp, #24]
  402d7a:	2b01      	cmp	r3, #1
  402d7c:	f000 8308 	beq.w	403390 <_vfprintf_r+0xc60>
  402d80:	2b02      	cmp	r3, #2
  402d82:	f040 8295 	bne.w	4032b0 <_vfprintf_r+0xb80>
  402d86:	9818      	ldr	r0, [sp, #96]	; 0x60
  402d88:	af30      	add	r7, sp, #192	; 0xc0
  402d8a:	0923      	lsrs	r3, r4, #4
  402d8c:	f004 010f 	and.w	r1, r4, #15
  402d90:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402d94:	092a      	lsrs	r2, r5, #4
  402d96:	461c      	mov	r4, r3
  402d98:	4615      	mov	r5, r2
  402d9a:	5c43      	ldrb	r3, [r0, r1]
  402d9c:	f807 3d01 	strb.w	r3, [r7, #-1]!
  402da0:	ea54 0305 	orrs.w	r3, r4, r5
  402da4:	d1f1      	bne.n	402d8a <_vfprintf_r+0x65a>
  402da6:	ab30      	add	r3, sp, #192	; 0xc0
  402da8:	1bdb      	subs	r3, r3, r7
  402daa:	930d      	str	r3, [sp, #52]	; 0x34
  402dac:	e5ea      	b.n	402984 <_vfprintf_r+0x254>
  402dae:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402db2:	f899 6000 	ldrb.w	r6, [r9]
  402db6:	e53a      	b.n	40282e <_vfprintf_r+0xfe>
  402db8:	f899 6000 	ldrb.w	r6, [r9]
  402dbc:	2e6c      	cmp	r6, #108	; 0x6c
  402dbe:	bf03      	ittte	eq
  402dc0:	f899 6001 	ldrbeq.w	r6, [r9, #1]
  402dc4:	f04b 0b20 	orreq.w	fp, fp, #32
  402dc8:	f109 0901 	addeq.w	r9, r9, #1
  402dcc:	f04b 0b10 	orrne.w	fp, fp, #16
  402dd0:	e52d      	b.n	40282e <_vfprintf_r+0xfe>
  402dd2:	2a00      	cmp	r2, #0
  402dd4:	f040 874c 	bne.w	403c70 <_vfprintf_r+0x1540>
  402dd8:	f01b 0f20 	tst.w	fp, #32
  402ddc:	f040 853f 	bne.w	40385e <_vfprintf_r+0x112e>
  402de0:	f01b 0f10 	tst.w	fp, #16
  402de4:	f040 80fc 	bne.w	402fe0 <_vfprintf_r+0x8b0>
  402de8:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402dec:	f000 80f8 	beq.w	402fe0 <_vfprintf_r+0x8b0>
  402df0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402df2:	6813      	ldr	r3, [r2, #0]
  402df4:	3204      	adds	r2, #4
  402df6:	920e      	str	r2, [sp, #56]	; 0x38
  402df8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
  402dfc:	801a      	strh	r2, [r3, #0]
  402dfe:	e4e3      	b.n	4027c8 <_vfprintf_r+0x98>
  402e00:	f899 6000 	ldrb.w	r6, [r9]
  402e04:	2900      	cmp	r1, #0
  402e06:	f47f ad12 	bne.w	40282e <_vfprintf_r+0xfe>
  402e0a:	2201      	movs	r2, #1
  402e0c:	2120      	movs	r1, #32
  402e0e:	e50e      	b.n	40282e <_vfprintf_r+0xfe>
  402e10:	f899 6000 	ldrb.w	r6, [r9]
  402e14:	2e2a      	cmp	r6, #42	; 0x2a
  402e16:	f109 0001 	add.w	r0, r9, #1
  402e1a:	f000 86f1 	beq.w	403c00 <_vfprintf_r+0x14d0>
  402e1e:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402e22:	2b09      	cmp	r3, #9
  402e24:	4681      	mov	r9, r0
  402e26:	bf98      	it	ls
  402e28:	2000      	movls	r0, #0
  402e2a:	f200 863d 	bhi.w	403aa8 <_vfprintf_r+0x1378>
  402e2e:	f819 6b01 	ldrb.w	r6, [r9], #1
  402e32:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402e36:	eb03 0040 	add.w	r0, r3, r0, lsl #1
  402e3a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402e3e:	2b09      	cmp	r3, #9
  402e40:	d9f5      	bls.n	402e2e <_vfprintf_r+0x6fe>
  402e42:	9009      	str	r0, [sp, #36]	; 0x24
  402e44:	e4f5      	b.n	402832 <_vfprintf_r+0x102>
  402e46:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402e4a:	f899 6000 	ldrb.w	r6, [r9]
  402e4e:	e4ee      	b.n	40282e <_vfprintf_r+0xfe>
  402e50:	f899 6000 	ldrb.w	r6, [r9]
  402e54:	2201      	movs	r2, #1
  402e56:	212b      	movs	r1, #43	; 0x2b
  402e58:	e4e9      	b.n	40282e <_vfprintf_r+0xfe>
  402e5a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402e5c:	4bae      	ldr	r3, [pc, #696]	; (403118 <_vfprintf_r+0x9e8>)
  402e5e:	6814      	ldr	r4, [r2, #0]
  402e60:	9318      	str	r3, [sp, #96]	; 0x60
  402e62:	2678      	movs	r6, #120	; 0x78
  402e64:	2330      	movs	r3, #48	; 0x30
  402e66:	3204      	adds	r2, #4
  402e68:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  402e6c:	f04b 0b02 	orr.w	fp, fp, #2
  402e70:	920e      	str	r2, [sp, #56]	; 0x38
  402e72:	2500      	movs	r5, #0
  402e74:	f88d 6071 	strb.w	r6, [sp, #113]	; 0x71
  402e78:	2302      	movs	r3, #2
  402e7a:	e565      	b.n	402948 <_vfprintf_r+0x218>
  402e7c:	2a00      	cmp	r2, #0
  402e7e:	f040 86e4 	bne.w	403c4a <_vfprintf_r+0x151a>
  402e82:	4ba6      	ldr	r3, [pc, #664]	; (40311c <_vfprintf_r+0x9ec>)
  402e84:	9318      	str	r3, [sp, #96]	; 0x60
  402e86:	e6ff      	b.n	402c88 <_vfprintf_r+0x558>
  402e88:	990e      	ldr	r1, [sp, #56]	; 0x38
  402e8a:	f8cd b018 	str.w	fp, [sp, #24]
  402e8e:	680a      	ldr	r2, [r1, #0]
  402e90:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  402e94:	2300      	movs	r3, #0
  402e96:	460a      	mov	r2, r1
  402e98:	469a      	mov	sl, r3
  402e9a:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402e9e:	3204      	adds	r2, #4
  402ea0:	2301      	movs	r3, #1
  402ea2:	9307      	str	r3, [sp, #28]
  402ea4:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
  402ea8:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  402eac:	920e      	str	r2, [sp, #56]	; 0x38
  402eae:	930d      	str	r3, [sp, #52]	; 0x34
  402eb0:	af26      	add	r7, sp, #152	; 0x98
  402eb2:	e575      	b.n	4029a0 <_vfprintf_r+0x270>
  402eb4:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402eb8:	2000      	movs	r0, #0
  402eba:	f819 6b01 	ldrb.w	r6, [r9], #1
  402ebe:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402ec2:	eb03 0040 	add.w	r0, r3, r0, lsl #1
  402ec6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402eca:	2b09      	cmp	r3, #9
  402ecc:	d9f5      	bls.n	402eba <_vfprintf_r+0x78a>
  402ece:	900c      	str	r0, [sp, #48]	; 0x30
  402ed0:	e4af      	b.n	402832 <_vfprintf_r+0x102>
  402ed2:	2a00      	cmp	r2, #0
  402ed4:	f040 86c8 	bne.w	403c68 <_vfprintf_r+0x1538>
  402ed8:	f04b 0b10 	orr.w	fp, fp, #16
  402edc:	e726      	b.n	402d2c <_vfprintf_r+0x5fc>
  402ede:	f04b 0b01 	orr.w	fp, fp, #1
  402ee2:	f899 6000 	ldrb.w	r6, [r9]
  402ee6:	e4a2      	b.n	40282e <_vfprintf_r+0xfe>
  402ee8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  402eea:	6823      	ldr	r3, [r4, #0]
  402eec:	930c      	str	r3, [sp, #48]	; 0x30
  402eee:	4618      	mov	r0, r3
  402ef0:	2800      	cmp	r0, #0
  402ef2:	4623      	mov	r3, r4
  402ef4:	f103 0304 	add.w	r3, r3, #4
  402ef8:	f6ff aeb8 	blt.w	402c6c <_vfprintf_r+0x53c>
  402efc:	930e      	str	r3, [sp, #56]	; 0x38
  402efe:	f899 6000 	ldrb.w	r6, [r9]
  402f02:	e494      	b.n	40282e <_vfprintf_r+0xfe>
  402f04:	2a00      	cmp	r2, #0
  402f06:	f040 86b7 	bne.w	403c78 <_vfprintf_r+0x1548>
  402f0a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402f0c:	3507      	adds	r5, #7
  402f0e:	f025 0307 	bic.w	r3, r5, #7
  402f12:	f103 0208 	add.w	r2, r3, #8
  402f16:	920e      	str	r2, [sp, #56]	; 0x38
  402f18:	681a      	ldr	r2, [r3, #0]
  402f1a:	9213      	str	r2, [sp, #76]	; 0x4c
  402f1c:	685b      	ldr	r3, [r3, #4]
  402f1e:	9312      	str	r3, [sp, #72]	; 0x48
  402f20:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f22:	9d13      	ldr	r5, [sp, #76]	; 0x4c
  402f24:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402f28:	4628      	mov	r0, r5
  402f2a:	4621      	mov	r1, r4
  402f2c:	f04f 32ff 	mov.w	r2, #4294967295
  402f30:	4b7b      	ldr	r3, [pc, #492]	; (403120 <_vfprintf_r+0x9f0>)
  402f32:	f004 f83d 	bl	406fb0 <__aeabi_dcmpun>
  402f36:	2800      	cmp	r0, #0
  402f38:	f040 83a2 	bne.w	403680 <_vfprintf_r+0xf50>
  402f3c:	4628      	mov	r0, r5
  402f3e:	4621      	mov	r1, r4
  402f40:	f04f 32ff 	mov.w	r2, #4294967295
  402f44:	4b76      	ldr	r3, [pc, #472]	; (403120 <_vfprintf_r+0x9f0>)
  402f46:	f004 f815 	bl	406f74 <__aeabi_dcmple>
  402f4a:	2800      	cmp	r0, #0
  402f4c:	f040 8398 	bne.w	403680 <_vfprintf_r+0xf50>
  402f50:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402f52:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402f54:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402f56:	9912      	ldr	r1, [sp, #72]	; 0x48
  402f58:	f004 f802 	bl	406f60 <__aeabi_dcmplt>
  402f5c:	2800      	cmp	r0, #0
  402f5e:	f040 8435 	bne.w	4037cc <_vfprintf_r+0x109c>
  402f62:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402f66:	4f6f      	ldr	r7, [pc, #444]	; (403124 <_vfprintf_r+0x9f4>)
  402f68:	4b6f      	ldr	r3, [pc, #444]	; (403128 <_vfprintf_r+0x9f8>)
  402f6a:	2203      	movs	r2, #3
  402f6c:	2100      	movs	r1, #0
  402f6e:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402f72:	9207      	str	r2, [sp, #28]
  402f74:	9109      	str	r1, [sp, #36]	; 0x24
  402f76:	9006      	str	r0, [sp, #24]
  402f78:	2e47      	cmp	r6, #71	; 0x47
  402f7a:	bfd8      	it	le
  402f7c:	461f      	movle	r7, r3
  402f7e:	920d      	str	r2, [sp, #52]	; 0x34
  402f80:	9110      	str	r1, [sp, #64]	; 0x40
  402f82:	e507      	b.n	402994 <_vfprintf_r+0x264>
  402f84:	f04b 0b08 	orr.w	fp, fp, #8
  402f88:	f899 6000 	ldrb.w	r6, [r9]
  402f8c:	e44f      	b.n	40282e <_vfprintf_r+0xfe>
  402f8e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402f90:	3507      	adds	r5, #7
  402f92:	f025 0307 	bic.w	r3, r5, #7
  402f96:	f103 0208 	add.w	r2, r3, #8
  402f9a:	e9d3 4500 	ldrd	r4, r5, [r3]
  402f9e:	920e      	str	r2, [sp, #56]	; 0x38
  402fa0:	2300      	movs	r3, #0
  402fa2:	e4d1      	b.n	402948 <_vfprintf_r+0x218>
  402fa4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402fa6:	3507      	adds	r5, #7
  402fa8:	f025 0307 	bic.w	r3, r5, #7
  402fac:	f103 0208 	add.w	r2, r3, #8
  402fb0:	e9d3 4500 	ldrd	r4, r5, [r3]
  402fb4:	920e      	str	r2, [sp, #56]	; 0x38
  402fb6:	2301      	movs	r3, #1
  402fb8:	e4c6      	b.n	402948 <_vfprintf_r+0x218>
  402fba:	2a00      	cmp	r2, #0
  402fbc:	f040 8650 	bne.w	403c60 <_vfprintf_r+0x1530>
  402fc0:	b1c6      	cbz	r6, 402ff4 <_vfprintf_r+0x8c4>
  402fc2:	2300      	movs	r3, #0
  402fc4:	2201      	movs	r2, #1
  402fc6:	469a      	mov	sl, r3
  402fc8:	9207      	str	r2, [sp, #28]
  402fca:	f88d 6098 	strb.w	r6, [sp, #152]	; 0x98
  402fce:	f8cd b018 	str.w	fp, [sp, #24]
  402fd2:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402fd6:	9309      	str	r3, [sp, #36]	; 0x24
  402fd8:	9310      	str	r3, [sp, #64]	; 0x40
  402fda:	920d      	str	r2, [sp, #52]	; 0x34
  402fdc:	af26      	add	r7, sp, #152	; 0x98
  402fde:	e4df      	b.n	4029a0 <_vfprintf_r+0x270>
  402fe0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402fe2:	6813      	ldr	r3, [r2, #0]
  402fe4:	3204      	adds	r2, #4
  402fe6:	920e      	str	r2, [sp, #56]	; 0x38
  402fe8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402fea:	601a      	str	r2, [r3, #0]
  402fec:	f7ff bbec 	b.w	4027c8 <_vfprintf_r+0x98>
  402ff0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402ff2:	e527      	b.n	402a44 <_vfprintf_r+0x314>
  402ff4:	9b25      	ldr	r3, [sp, #148]	; 0x94
  402ff6:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402ffa:	2b00      	cmp	r3, #0
  402ffc:	f040 8594 	bne.w	403b28 <_vfprintf_r+0x13f8>
  403000:	2300      	movs	r3, #0
  403002:	9324      	str	r3, [sp, #144]	; 0x90
  403004:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  403008:	f013 0f01 	tst.w	r3, #1
  40300c:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  403010:	d102      	bne.n	403018 <_vfprintf_r+0x8e8>
  403012:	059a      	lsls	r2, r3, #22
  403014:	f140 8249 	bpl.w	4034aa <_vfprintf_r+0xd7a>
  403018:	065b      	lsls	r3, r3, #25
  40301a:	f53f adec 	bmi.w	402bf6 <_vfprintf_r+0x4c6>
  40301e:	980b      	ldr	r0, [sp, #44]	; 0x2c
  403020:	b041      	add	sp, #260	; 0x104
  403022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403026:	2e65      	cmp	r6, #101	; 0x65
  403028:	f340 80b2 	ble.w	403190 <_vfprintf_r+0xa60>
  40302c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40302e:	9813      	ldr	r0, [sp, #76]	; 0x4c
  403030:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403032:	9912      	ldr	r1, [sp, #72]	; 0x48
  403034:	f003 ff8a 	bl	406f4c <__aeabi_dcmpeq>
  403038:	2800      	cmp	r0, #0
  40303a:	f000 8160 	beq.w	4032fe <_vfprintf_r+0xbce>
  40303e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403040:	4a3a      	ldr	r2, [pc, #232]	; (40312c <_vfprintf_r+0x9fc>)
  403042:	f8c8 2000 	str.w	r2, [r8]
  403046:	3301      	adds	r3, #1
  403048:	3401      	adds	r4, #1
  40304a:	2201      	movs	r2, #1
  40304c:	2b07      	cmp	r3, #7
  40304e:	9425      	str	r4, [sp, #148]	; 0x94
  403050:	9324      	str	r3, [sp, #144]	; 0x90
  403052:	f8c8 2004 	str.w	r2, [r8, #4]
  403056:	f300 83bf 	bgt.w	4037d8 <_vfprintf_r+0x10a8>
  40305a:	f108 0808 	add.w	r8, r8, #8
  40305e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  403060:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403062:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403064:	4293      	cmp	r3, r2
  403066:	db03      	blt.n	403070 <_vfprintf_r+0x940>
  403068:	9b06      	ldr	r3, [sp, #24]
  40306a:	07df      	lsls	r7, r3, #31
  40306c:	f57f ad65 	bpl.w	402b3a <_vfprintf_r+0x40a>
  403070:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403072:	9914      	ldr	r1, [sp, #80]	; 0x50
  403074:	9a15      	ldr	r2, [sp, #84]	; 0x54
  403076:	f8c8 2000 	str.w	r2, [r8]
  40307a:	3301      	adds	r3, #1
  40307c:	440c      	add	r4, r1
  40307e:	2b07      	cmp	r3, #7
  403080:	f8c8 1004 	str.w	r1, [r8, #4]
  403084:	9425      	str	r4, [sp, #148]	; 0x94
  403086:	9324      	str	r3, [sp, #144]	; 0x90
  403088:	f300 83f8 	bgt.w	40387c <_vfprintf_r+0x114c>
  40308c:	f108 0808 	add.w	r8, r8, #8
  403090:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403092:	1e5e      	subs	r6, r3, #1
  403094:	2e00      	cmp	r6, #0
  403096:	f77f ad50 	ble.w	402b3a <_vfprintf_r+0x40a>
  40309a:	2e10      	cmp	r6, #16
  40309c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40309e:	4d24      	ldr	r5, [pc, #144]	; (403130 <_vfprintf_r+0xa00>)
  4030a0:	f340 81dd 	ble.w	40345e <_vfprintf_r+0xd2e>
  4030a4:	2710      	movs	r7, #16
  4030a6:	f8dd a020 	ldr.w	sl, [sp, #32]
  4030aa:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4030ae:	e005      	b.n	4030bc <_vfprintf_r+0x98c>
  4030b0:	f108 0808 	add.w	r8, r8, #8
  4030b4:	3e10      	subs	r6, #16
  4030b6:	2e10      	cmp	r6, #16
  4030b8:	f340 81d1 	ble.w	40345e <_vfprintf_r+0xd2e>
  4030bc:	3301      	adds	r3, #1
  4030be:	3410      	adds	r4, #16
  4030c0:	2b07      	cmp	r3, #7
  4030c2:	9425      	str	r4, [sp, #148]	; 0x94
  4030c4:	9324      	str	r3, [sp, #144]	; 0x90
  4030c6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4030ca:	ddf1      	ble.n	4030b0 <_vfprintf_r+0x980>
  4030cc:	aa23      	add	r2, sp, #140	; 0x8c
  4030ce:	4659      	mov	r1, fp
  4030d0:	4650      	mov	r0, sl
  4030d2:	f7ff fb23 	bl	40271c <__sprint_r>
  4030d6:	2800      	cmp	r0, #0
  4030d8:	f040 83cd 	bne.w	403876 <_vfprintf_r+0x1146>
  4030dc:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4030de:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4030e0:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4030e4:	e7e6      	b.n	4030b4 <_vfprintf_r+0x984>
  4030e6:	46aa      	mov	sl, r5
  4030e8:	e78c      	b.n	403004 <_vfprintf_r+0x8d4>
  4030ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4030ec:	9a07      	ldr	r2, [sp, #28]
  4030ee:	eba3 0a02 	sub.w	sl, r3, r2
  4030f2:	f1ba 0f00 	cmp.w	sl, #0
  4030f6:	f77f acca 	ble.w	402a8e <_vfprintf_r+0x35e>
  4030fa:	f1ba 0f10 	cmp.w	sl, #16
  4030fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403100:	4d0b      	ldr	r5, [pc, #44]	; (403130 <_vfprintf_r+0xa00>)
  403102:	dd39      	ble.n	403178 <_vfprintf_r+0xa48>
  403104:	4642      	mov	r2, r8
  403106:	4621      	mov	r1, r4
  403108:	46b0      	mov	r8, r6
  40310a:	f04f 0b10 	mov.w	fp, #16
  40310e:	462e      	mov	r6, r5
  403110:	9c08      	ldr	r4, [sp, #32]
  403112:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403114:	e015      	b.n	403142 <_vfprintf_r+0xa12>
  403116:	bf00      	nop
  403118:	00407360 	.word	0x00407360
  40311c:	0040734c 	.word	0x0040734c
  403120:	7fefffff 	.word	0x7fefffff
  403124:	00407340 	.word	0x00407340
  403128:	0040733c 	.word	0x0040733c
  40312c:	0040737c 	.word	0x0040737c
  403130:	00407390 	.word	0x00407390
  403134:	f1aa 0a10 	sub.w	sl, sl, #16
  403138:	f1ba 0f10 	cmp.w	sl, #16
  40313c:	f102 0208 	add.w	r2, r2, #8
  403140:	dd16      	ble.n	403170 <_vfprintf_r+0xa40>
  403142:	3301      	adds	r3, #1
  403144:	3110      	adds	r1, #16
  403146:	2b07      	cmp	r3, #7
  403148:	9125      	str	r1, [sp, #148]	; 0x94
  40314a:	9324      	str	r3, [sp, #144]	; 0x90
  40314c:	e882 0840 	stmia.w	r2, {r6, fp}
  403150:	ddf0      	ble.n	403134 <_vfprintf_r+0xa04>
  403152:	aa23      	add	r2, sp, #140	; 0x8c
  403154:	4629      	mov	r1, r5
  403156:	4620      	mov	r0, r4
  403158:	f7ff fae0 	bl	40271c <__sprint_r>
  40315c:	2800      	cmp	r0, #0
  40315e:	d1c2      	bne.n	4030e6 <_vfprintf_r+0x9b6>
  403160:	f1aa 0a10 	sub.w	sl, sl, #16
  403164:	f1ba 0f10 	cmp.w	sl, #16
  403168:	9925      	ldr	r1, [sp, #148]	; 0x94
  40316a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40316c:	aa30      	add	r2, sp, #192	; 0xc0
  40316e:	dce8      	bgt.n	403142 <_vfprintf_r+0xa12>
  403170:	4635      	mov	r5, r6
  403172:	460c      	mov	r4, r1
  403174:	4646      	mov	r6, r8
  403176:	4690      	mov	r8, r2
  403178:	3301      	adds	r3, #1
  40317a:	4454      	add	r4, sl
  40317c:	2b07      	cmp	r3, #7
  40317e:	9425      	str	r4, [sp, #148]	; 0x94
  403180:	9324      	str	r3, [sp, #144]	; 0x90
  403182:	e888 0420 	stmia.w	r8, {r5, sl}
  403186:	f300 8264 	bgt.w	403652 <_vfprintf_r+0xf22>
  40318a:	f108 0808 	add.w	r8, r8, #8
  40318e:	e47e      	b.n	402a8e <_vfprintf_r+0x35e>
  403190:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403192:	9e24      	ldr	r6, [sp, #144]	; 0x90
  403194:	2b01      	cmp	r3, #1
  403196:	f340 81fd 	ble.w	403594 <_vfprintf_r+0xe64>
  40319a:	3601      	adds	r6, #1
  40319c:	3401      	adds	r4, #1
  40319e:	2301      	movs	r3, #1
  4031a0:	2e07      	cmp	r6, #7
  4031a2:	9425      	str	r4, [sp, #148]	; 0x94
  4031a4:	9624      	str	r6, [sp, #144]	; 0x90
  4031a6:	f8c8 7000 	str.w	r7, [r8]
  4031aa:	f8c8 3004 	str.w	r3, [r8, #4]
  4031ae:	f300 820e 	bgt.w	4035ce <_vfprintf_r+0xe9e>
  4031b2:	f108 0808 	add.w	r8, r8, #8
  4031b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4031b8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4031ba:	f8c8 3000 	str.w	r3, [r8]
  4031be:	3601      	adds	r6, #1
  4031c0:	4414      	add	r4, r2
  4031c2:	2e07      	cmp	r6, #7
  4031c4:	9425      	str	r4, [sp, #148]	; 0x94
  4031c6:	9624      	str	r6, [sp, #144]	; 0x90
  4031c8:	f8c8 2004 	str.w	r2, [r8, #4]
  4031cc:	f300 822e 	bgt.w	40362c <_vfprintf_r+0xefc>
  4031d0:	f108 0808 	add.w	r8, r8, #8
  4031d4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4031d6:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4031d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
  4031da:	9912      	ldr	r1, [sp, #72]	; 0x48
  4031dc:	f003 feb6 	bl	406f4c <__aeabi_dcmpeq>
  4031e0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4031e2:	2800      	cmp	r0, #0
  4031e4:	f040 8106 	bne.w	4033f4 <_vfprintf_r+0xcc4>
  4031e8:	3b01      	subs	r3, #1
  4031ea:	3601      	adds	r6, #1
  4031ec:	3701      	adds	r7, #1
  4031ee:	441c      	add	r4, r3
  4031f0:	2e07      	cmp	r6, #7
  4031f2:	9624      	str	r6, [sp, #144]	; 0x90
  4031f4:	9425      	str	r4, [sp, #148]	; 0x94
  4031f6:	f8c8 7000 	str.w	r7, [r8]
  4031fa:	f8c8 3004 	str.w	r3, [r8, #4]
  4031fe:	f300 81d9 	bgt.w	4035b4 <_vfprintf_r+0xe84>
  403202:	f108 0808 	add.w	r8, r8, #8
  403206:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403208:	f8c8 2004 	str.w	r2, [r8, #4]
  40320c:	3601      	adds	r6, #1
  40320e:	4414      	add	r4, r2
  403210:	ab1f      	add	r3, sp, #124	; 0x7c
  403212:	2e07      	cmp	r6, #7
  403214:	9425      	str	r4, [sp, #148]	; 0x94
  403216:	9624      	str	r6, [sp, #144]	; 0x90
  403218:	f8c8 3000 	str.w	r3, [r8]
  40321c:	f77f ac8b 	ble.w	402b36 <_vfprintf_r+0x406>
  403220:	aa23      	add	r2, sp, #140	; 0x8c
  403222:	990a      	ldr	r1, [sp, #40]	; 0x28
  403224:	9808      	ldr	r0, [sp, #32]
  403226:	f7ff fa79 	bl	40271c <__sprint_r>
  40322a:	b958      	cbnz	r0, 403244 <_vfprintf_r+0xb14>
  40322c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40322e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403232:	e482      	b.n	402b3a <_vfprintf_r+0x40a>
  403234:	aa23      	add	r2, sp, #140	; 0x8c
  403236:	990a      	ldr	r1, [sp, #40]	; 0x28
  403238:	9808      	ldr	r0, [sp, #32]
  40323a:	f7ff fa6f 	bl	40271c <__sprint_r>
  40323e:	2800      	cmp	r0, #0
  403240:	f43f acc5 	beq.w	402bce <_vfprintf_r+0x49e>
  403244:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  403248:	e6dc      	b.n	403004 <_vfprintf_r+0x8d4>
  40324a:	f8dd b018 	ldr.w	fp, [sp, #24]
  40324e:	2b01      	cmp	r3, #1
  403250:	f000 8121 	beq.w	403496 <_vfprintf_r+0xd66>
  403254:	2b02      	cmp	r3, #2
  403256:	d127      	bne.n	4032a8 <_vfprintf_r+0xb78>
  403258:	f8cd b018 	str.w	fp, [sp, #24]
  40325c:	2400      	movs	r4, #0
  40325e:	2500      	movs	r5, #0
  403260:	e591      	b.n	402d86 <_vfprintf_r+0x656>
  403262:	aa23      	add	r2, sp, #140	; 0x8c
  403264:	990a      	ldr	r1, [sp, #40]	; 0x28
  403266:	9808      	ldr	r0, [sp, #32]
  403268:	f7ff fa58 	bl	40271c <__sprint_r>
  40326c:	2800      	cmp	r0, #0
  40326e:	d1e9      	bne.n	403244 <_vfprintf_r+0xb14>
  403270:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403272:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403276:	e44d      	b.n	402b14 <_vfprintf_r+0x3e4>
  403278:	aa23      	add	r2, sp, #140	; 0x8c
  40327a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40327c:	9808      	ldr	r0, [sp, #32]
  40327e:	f7ff fa4d 	bl	40271c <__sprint_r>
  403282:	2800      	cmp	r0, #0
  403284:	d1de      	bne.n	403244 <_vfprintf_r+0xb14>
  403286:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403288:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40328c:	f7ff bbec 	b.w	402a68 <_vfprintf_r+0x338>
  403290:	aa23      	add	r2, sp, #140	; 0x8c
  403292:	990a      	ldr	r1, [sp, #40]	; 0x28
  403294:	9808      	ldr	r0, [sp, #32]
  403296:	f7ff fa41 	bl	40271c <__sprint_r>
  40329a:	2800      	cmp	r0, #0
  40329c:	d1d2      	bne.n	403244 <_vfprintf_r+0xb14>
  40329e:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4032a0:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4032a4:	f7ff bbf0 	b.w	402a88 <_vfprintf_r+0x358>
  4032a8:	f8cd b018 	str.w	fp, [sp, #24]
  4032ac:	2400      	movs	r4, #0
  4032ae:	2500      	movs	r5, #0
  4032b0:	a930      	add	r1, sp, #192	; 0xc0
  4032b2:	e000      	b.n	4032b6 <_vfprintf_r+0xb86>
  4032b4:	4639      	mov	r1, r7
  4032b6:	08e2      	lsrs	r2, r4, #3
  4032b8:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  4032bc:	08e8      	lsrs	r0, r5, #3
  4032be:	f004 0307 	and.w	r3, r4, #7
  4032c2:	4605      	mov	r5, r0
  4032c4:	4614      	mov	r4, r2
  4032c6:	3330      	adds	r3, #48	; 0x30
  4032c8:	ea54 0205 	orrs.w	r2, r4, r5
  4032cc:	f801 3c01 	strb.w	r3, [r1, #-1]
  4032d0:	f101 37ff 	add.w	r7, r1, #4294967295
  4032d4:	d1ee      	bne.n	4032b4 <_vfprintf_r+0xb84>
  4032d6:	9a06      	ldr	r2, [sp, #24]
  4032d8:	07d2      	lsls	r2, r2, #31
  4032da:	f57f ad64 	bpl.w	402da6 <_vfprintf_r+0x676>
  4032de:	2b30      	cmp	r3, #48	; 0x30
  4032e0:	f43f ad61 	beq.w	402da6 <_vfprintf_r+0x676>
  4032e4:	2330      	movs	r3, #48	; 0x30
  4032e6:	3902      	subs	r1, #2
  4032e8:	f807 3c01 	strb.w	r3, [r7, #-1]
  4032ec:	ab30      	add	r3, sp, #192	; 0xc0
  4032ee:	1a5b      	subs	r3, r3, r1
  4032f0:	930d      	str	r3, [sp, #52]	; 0x34
  4032f2:	460f      	mov	r7, r1
  4032f4:	f7ff bb46 	b.w	402984 <_vfprintf_r+0x254>
  4032f8:	2302      	movs	r3, #2
  4032fa:	f7ff bb25 	b.w	402948 <_vfprintf_r+0x218>
  4032fe:	991d      	ldr	r1, [sp, #116]	; 0x74
  403300:	2900      	cmp	r1, #0
  403302:	f340 8274 	ble.w	4037ee <_vfprintf_r+0x10be>
  403306:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403308:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40330a:	4293      	cmp	r3, r2
  40330c:	bfa8      	it	ge
  40330e:	4613      	movge	r3, r2
  403310:	2b00      	cmp	r3, #0
  403312:	461e      	mov	r6, r3
  403314:	dd0d      	ble.n	403332 <_vfprintf_r+0xc02>
  403316:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403318:	f8c8 7000 	str.w	r7, [r8]
  40331c:	3301      	adds	r3, #1
  40331e:	4434      	add	r4, r6
  403320:	2b07      	cmp	r3, #7
  403322:	9425      	str	r4, [sp, #148]	; 0x94
  403324:	f8c8 6004 	str.w	r6, [r8, #4]
  403328:	9324      	str	r3, [sp, #144]	; 0x90
  40332a:	f300 8324 	bgt.w	403976 <_vfprintf_r+0x1246>
  40332e:	f108 0808 	add.w	r8, r8, #8
  403332:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403334:	2e00      	cmp	r6, #0
  403336:	bfa8      	it	ge
  403338:	1b9b      	subge	r3, r3, r6
  40333a:	2b00      	cmp	r3, #0
  40333c:	461e      	mov	r6, r3
  40333e:	f340 80d0 	ble.w	4034e2 <_vfprintf_r+0xdb2>
  403342:	2e10      	cmp	r6, #16
  403344:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403346:	4dc0      	ldr	r5, [pc, #768]	; (403648 <_vfprintf_r+0xf18>)
  403348:	f340 80b7 	ble.w	4034ba <_vfprintf_r+0xd8a>
  40334c:	4622      	mov	r2, r4
  40334e:	f04f 0a10 	mov.w	sl, #16
  403352:	f8dd b020 	ldr.w	fp, [sp, #32]
  403356:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403358:	e005      	b.n	403366 <_vfprintf_r+0xc36>
  40335a:	f108 0808 	add.w	r8, r8, #8
  40335e:	3e10      	subs	r6, #16
  403360:	2e10      	cmp	r6, #16
  403362:	f340 80a9 	ble.w	4034b8 <_vfprintf_r+0xd88>
  403366:	3301      	adds	r3, #1
  403368:	3210      	adds	r2, #16
  40336a:	2b07      	cmp	r3, #7
  40336c:	9225      	str	r2, [sp, #148]	; 0x94
  40336e:	9324      	str	r3, [sp, #144]	; 0x90
  403370:	e888 0420 	stmia.w	r8, {r5, sl}
  403374:	ddf1      	ble.n	40335a <_vfprintf_r+0xc2a>
  403376:	aa23      	add	r2, sp, #140	; 0x8c
  403378:	4621      	mov	r1, r4
  40337a:	4658      	mov	r0, fp
  40337c:	f7ff f9ce 	bl	40271c <__sprint_r>
  403380:	2800      	cmp	r0, #0
  403382:	f040 8324 	bne.w	4039ce <_vfprintf_r+0x129e>
  403386:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403388:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40338a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40338e:	e7e6      	b.n	40335e <_vfprintf_r+0xc2e>
  403390:	2d00      	cmp	r5, #0
  403392:	bf08      	it	eq
  403394:	2c0a      	cmpeq	r4, #10
  403396:	d37c      	bcc.n	403492 <_vfprintf_r+0xd62>
  403398:	af30      	add	r7, sp, #192	; 0xc0
  40339a:	4620      	mov	r0, r4
  40339c:	4629      	mov	r1, r5
  40339e:	220a      	movs	r2, #10
  4033a0:	2300      	movs	r3, #0
  4033a2:	f7fe fd15 	bl	401dd0 <__aeabi_uldivmod>
  4033a6:	3230      	adds	r2, #48	; 0x30
  4033a8:	f807 2d01 	strb.w	r2, [r7, #-1]!
  4033ac:	4620      	mov	r0, r4
  4033ae:	4629      	mov	r1, r5
  4033b0:	2300      	movs	r3, #0
  4033b2:	220a      	movs	r2, #10
  4033b4:	f7fe fd0c 	bl	401dd0 <__aeabi_uldivmod>
  4033b8:	4604      	mov	r4, r0
  4033ba:	460d      	mov	r5, r1
  4033bc:	ea54 0305 	orrs.w	r3, r4, r5
  4033c0:	d1eb      	bne.n	40339a <_vfprintf_r+0xc6a>
  4033c2:	ab30      	add	r3, sp, #192	; 0xc0
  4033c4:	1bdb      	subs	r3, r3, r7
  4033c6:	930d      	str	r3, [sp, #52]	; 0x34
  4033c8:	f7ff badc 	b.w	402984 <_vfprintf_r+0x254>
  4033cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4033ce:	930d      	str	r3, [sp, #52]	; 0x34
  4033d0:	af30      	add	r7, sp, #192	; 0xc0
  4033d2:	f7ff bad7 	b.w	402984 <_vfprintf_r+0x254>
  4033d6:	aa23      	add	r2, sp, #140	; 0x8c
  4033d8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4033da:	9808      	ldr	r0, [sp, #32]
  4033dc:	f7ff f99e 	bl	40271c <__sprint_r>
  4033e0:	2800      	cmp	r0, #0
  4033e2:	f47f af2f 	bne.w	403244 <_vfprintf_r+0xb14>
  4033e6:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  4033ea:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4033ec:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4033f0:	f7ff bb28 	b.w	402a44 <_vfprintf_r+0x314>
  4033f4:	1e5f      	subs	r7, r3, #1
  4033f6:	2f00      	cmp	r7, #0
  4033f8:	f77f af05 	ble.w	403206 <_vfprintf_r+0xad6>
  4033fc:	2f10      	cmp	r7, #16
  4033fe:	4d92      	ldr	r5, [pc, #584]	; (403648 <_vfprintf_r+0xf18>)
  403400:	f340 810a 	ble.w	403618 <_vfprintf_r+0xee8>
  403404:	f04f 0a10 	mov.w	sl, #16
  403408:	f8dd b020 	ldr.w	fp, [sp, #32]
  40340c:	e005      	b.n	40341a <_vfprintf_r+0xcea>
  40340e:	f108 0808 	add.w	r8, r8, #8
  403412:	3f10      	subs	r7, #16
  403414:	2f10      	cmp	r7, #16
  403416:	f340 80ff 	ble.w	403618 <_vfprintf_r+0xee8>
  40341a:	3601      	adds	r6, #1
  40341c:	3410      	adds	r4, #16
  40341e:	2e07      	cmp	r6, #7
  403420:	9425      	str	r4, [sp, #148]	; 0x94
  403422:	9624      	str	r6, [sp, #144]	; 0x90
  403424:	e888 0420 	stmia.w	r8, {r5, sl}
  403428:	ddf1      	ble.n	40340e <_vfprintf_r+0xcde>
  40342a:	aa23      	add	r2, sp, #140	; 0x8c
  40342c:	990a      	ldr	r1, [sp, #40]	; 0x28
  40342e:	4658      	mov	r0, fp
  403430:	f7ff f974 	bl	40271c <__sprint_r>
  403434:	2800      	cmp	r0, #0
  403436:	f47f af05 	bne.w	403244 <_vfprintf_r+0xb14>
  40343a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40343c:	9e24      	ldr	r6, [sp, #144]	; 0x90
  40343e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403442:	e7e6      	b.n	403412 <_vfprintf_r+0xce2>
  403444:	990e      	ldr	r1, [sp, #56]	; 0x38
  403446:	460a      	mov	r2, r1
  403448:	3204      	adds	r2, #4
  40344a:	680c      	ldr	r4, [r1, #0]
  40344c:	920e      	str	r2, [sp, #56]	; 0x38
  40344e:	2500      	movs	r5, #0
  403450:	f7ff ba7a 	b.w	402948 <_vfprintf_r+0x218>
  403454:	681c      	ldr	r4, [r3, #0]
  403456:	3304      	adds	r3, #4
  403458:	930e      	str	r3, [sp, #56]	; 0x38
  40345a:	2500      	movs	r5, #0
  40345c:	e426      	b.n	402cac <_vfprintf_r+0x57c>
  40345e:	3301      	adds	r3, #1
  403460:	4434      	add	r4, r6
  403462:	2b07      	cmp	r3, #7
  403464:	9425      	str	r4, [sp, #148]	; 0x94
  403466:	9324      	str	r3, [sp, #144]	; 0x90
  403468:	e888 0060 	stmia.w	r8, {r5, r6}
  40346c:	f77f ab63 	ble.w	402b36 <_vfprintf_r+0x406>
  403470:	e6d6      	b.n	403220 <_vfprintf_r+0xaf0>
  403472:	3204      	adds	r2, #4
  403474:	681c      	ldr	r4, [r3, #0]
  403476:	920e      	str	r2, [sp, #56]	; 0x38
  403478:	2301      	movs	r3, #1
  40347a:	2500      	movs	r5, #0
  40347c:	f7ff ba64 	b.w	402948 <_vfprintf_r+0x218>
  403480:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403482:	6814      	ldr	r4, [r2, #0]
  403484:	4613      	mov	r3, r2
  403486:	3304      	adds	r3, #4
  403488:	17e5      	asrs	r5, r4, #31
  40348a:	930e      	str	r3, [sp, #56]	; 0x38
  40348c:	4622      	mov	r2, r4
  40348e:	462b      	mov	r3, r5
  403490:	e460      	b.n	402d54 <_vfprintf_r+0x624>
  403492:	f8dd b018 	ldr.w	fp, [sp, #24]
  403496:	f8cd b018 	str.w	fp, [sp, #24]
  40349a:	af40      	add	r7, sp, #256	; 0x100
  40349c:	3430      	adds	r4, #48	; 0x30
  40349e:	2301      	movs	r3, #1
  4034a0:	f807 4d41 	strb.w	r4, [r7, #-65]!
  4034a4:	930d      	str	r3, [sp, #52]	; 0x34
  4034a6:	f7ff ba6d 	b.w	402984 <_vfprintf_r+0x254>
  4034aa:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  4034ae:	f002 f961 	bl	405774 <__retarget_lock_release_recursive>
  4034b2:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  4034b6:	e5af      	b.n	403018 <_vfprintf_r+0x8e8>
  4034b8:	4614      	mov	r4, r2
  4034ba:	3301      	adds	r3, #1
  4034bc:	4434      	add	r4, r6
  4034be:	2b07      	cmp	r3, #7
  4034c0:	9425      	str	r4, [sp, #148]	; 0x94
  4034c2:	9324      	str	r3, [sp, #144]	; 0x90
  4034c4:	e888 0060 	stmia.w	r8, {r5, r6}
  4034c8:	f340 816d 	ble.w	4037a6 <_vfprintf_r+0x1076>
  4034cc:	aa23      	add	r2, sp, #140	; 0x8c
  4034ce:	990a      	ldr	r1, [sp, #40]	; 0x28
  4034d0:	9808      	ldr	r0, [sp, #32]
  4034d2:	f7ff f923 	bl	40271c <__sprint_r>
  4034d6:	2800      	cmp	r0, #0
  4034d8:	f47f aeb4 	bne.w	403244 <_vfprintf_r+0xb14>
  4034dc:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4034de:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4034e2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4034e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4034e6:	4293      	cmp	r3, r2
  4034e8:	f280 8158 	bge.w	40379c <_vfprintf_r+0x106c>
  4034ec:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4034ee:	9814      	ldr	r0, [sp, #80]	; 0x50
  4034f0:	9915      	ldr	r1, [sp, #84]	; 0x54
  4034f2:	f8c8 1000 	str.w	r1, [r8]
  4034f6:	3201      	adds	r2, #1
  4034f8:	4404      	add	r4, r0
  4034fa:	2a07      	cmp	r2, #7
  4034fc:	9425      	str	r4, [sp, #148]	; 0x94
  4034fe:	f8c8 0004 	str.w	r0, [r8, #4]
  403502:	9224      	str	r2, [sp, #144]	; 0x90
  403504:	f300 8152 	bgt.w	4037ac <_vfprintf_r+0x107c>
  403508:	f108 0808 	add.w	r8, r8, #8
  40350c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40350e:	9910      	ldr	r1, [sp, #64]	; 0x40
  403510:	1ad3      	subs	r3, r2, r3
  403512:	1a56      	subs	r6, r2, r1
  403514:	429e      	cmp	r6, r3
  403516:	bfa8      	it	ge
  403518:	461e      	movge	r6, r3
  40351a:	2e00      	cmp	r6, #0
  40351c:	dd0e      	ble.n	40353c <_vfprintf_r+0xe0c>
  40351e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403520:	f8c8 6004 	str.w	r6, [r8, #4]
  403524:	3201      	adds	r2, #1
  403526:	440f      	add	r7, r1
  403528:	4434      	add	r4, r6
  40352a:	2a07      	cmp	r2, #7
  40352c:	f8c8 7000 	str.w	r7, [r8]
  403530:	9425      	str	r4, [sp, #148]	; 0x94
  403532:	9224      	str	r2, [sp, #144]	; 0x90
  403534:	f300 823c 	bgt.w	4039b0 <_vfprintf_r+0x1280>
  403538:	f108 0808 	add.w	r8, r8, #8
  40353c:	2e00      	cmp	r6, #0
  40353e:	bfac      	ite	ge
  403540:	1b9e      	subge	r6, r3, r6
  403542:	461e      	movlt	r6, r3
  403544:	2e00      	cmp	r6, #0
  403546:	f77f aaf8 	ble.w	402b3a <_vfprintf_r+0x40a>
  40354a:	2e10      	cmp	r6, #16
  40354c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40354e:	4d3e      	ldr	r5, [pc, #248]	; (403648 <_vfprintf_r+0xf18>)
  403550:	dd85      	ble.n	40345e <_vfprintf_r+0xd2e>
  403552:	2710      	movs	r7, #16
  403554:	f8dd a020 	ldr.w	sl, [sp, #32]
  403558:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  40355c:	e005      	b.n	40356a <_vfprintf_r+0xe3a>
  40355e:	f108 0808 	add.w	r8, r8, #8
  403562:	3e10      	subs	r6, #16
  403564:	2e10      	cmp	r6, #16
  403566:	f77f af7a 	ble.w	40345e <_vfprintf_r+0xd2e>
  40356a:	3301      	adds	r3, #1
  40356c:	3410      	adds	r4, #16
  40356e:	2b07      	cmp	r3, #7
  403570:	9425      	str	r4, [sp, #148]	; 0x94
  403572:	9324      	str	r3, [sp, #144]	; 0x90
  403574:	e888 00a0 	stmia.w	r8, {r5, r7}
  403578:	ddf1      	ble.n	40355e <_vfprintf_r+0xe2e>
  40357a:	aa23      	add	r2, sp, #140	; 0x8c
  40357c:	4659      	mov	r1, fp
  40357e:	4650      	mov	r0, sl
  403580:	f7ff f8cc 	bl	40271c <__sprint_r>
  403584:	2800      	cmp	r0, #0
  403586:	f040 8176 	bne.w	403876 <_vfprintf_r+0x1146>
  40358a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40358c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40358e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403592:	e7e6      	b.n	403562 <_vfprintf_r+0xe32>
  403594:	9b06      	ldr	r3, [sp, #24]
  403596:	07d8      	lsls	r0, r3, #31
  403598:	f53f adff 	bmi.w	40319a <_vfprintf_r+0xa6a>
  40359c:	3601      	adds	r6, #1
  40359e:	3401      	adds	r4, #1
  4035a0:	2301      	movs	r3, #1
  4035a2:	2e07      	cmp	r6, #7
  4035a4:	9425      	str	r4, [sp, #148]	; 0x94
  4035a6:	9624      	str	r6, [sp, #144]	; 0x90
  4035a8:	f8c8 7000 	str.w	r7, [r8]
  4035ac:	f8c8 3004 	str.w	r3, [r8, #4]
  4035b0:	f77f ae27 	ble.w	403202 <_vfprintf_r+0xad2>
  4035b4:	aa23      	add	r2, sp, #140	; 0x8c
  4035b6:	990a      	ldr	r1, [sp, #40]	; 0x28
  4035b8:	9808      	ldr	r0, [sp, #32]
  4035ba:	f7ff f8af 	bl	40271c <__sprint_r>
  4035be:	2800      	cmp	r0, #0
  4035c0:	f47f ae40 	bne.w	403244 <_vfprintf_r+0xb14>
  4035c4:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4035c6:	9e24      	ldr	r6, [sp, #144]	; 0x90
  4035c8:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4035cc:	e61b      	b.n	403206 <_vfprintf_r+0xad6>
  4035ce:	aa23      	add	r2, sp, #140	; 0x8c
  4035d0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4035d2:	9808      	ldr	r0, [sp, #32]
  4035d4:	f7ff f8a2 	bl	40271c <__sprint_r>
  4035d8:	2800      	cmp	r0, #0
  4035da:	f47f ae33 	bne.w	403244 <_vfprintf_r+0xb14>
  4035de:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4035e0:	9e24      	ldr	r6, [sp, #144]	; 0x90
  4035e2:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4035e6:	e5e6      	b.n	4031b6 <_vfprintf_r+0xa86>
  4035e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  4035ea:	3507      	adds	r5, #7
  4035ec:	f025 0507 	bic.w	r5, r5, #7
  4035f0:	e9d5 2300 	ldrd	r2, r3, [r5]
  4035f4:	f105 0108 	add.w	r1, r5, #8
  4035f8:	910e      	str	r1, [sp, #56]	; 0x38
  4035fa:	4614      	mov	r4, r2
  4035fc:	461d      	mov	r5, r3
  4035fe:	f7ff bba9 	b.w	402d54 <_vfprintf_r+0x624>
  403602:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  403604:	3507      	adds	r5, #7
  403606:	f025 0307 	bic.w	r3, r5, #7
  40360a:	f103 0208 	add.w	r2, r3, #8
  40360e:	920e      	str	r2, [sp, #56]	; 0x38
  403610:	e9d3 4500 	ldrd	r4, r5, [r3]
  403614:	f7ff bb4a 	b.w	402cac <_vfprintf_r+0x57c>
  403618:	3601      	adds	r6, #1
  40361a:	443c      	add	r4, r7
  40361c:	2e07      	cmp	r6, #7
  40361e:	9425      	str	r4, [sp, #148]	; 0x94
  403620:	9624      	str	r6, [sp, #144]	; 0x90
  403622:	e888 00a0 	stmia.w	r8, {r5, r7}
  403626:	f77f adec 	ble.w	403202 <_vfprintf_r+0xad2>
  40362a:	e7c3      	b.n	4035b4 <_vfprintf_r+0xe84>
  40362c:	aa23      	add	r2, sp, #140	; 0x8c
  40362e:	990a      	ldr	r1, [sp, #40]	; 0x28
  403630:	9808      	ldr	r0, [sp, #32]
  403632:	f7ff f873 	bl	40271c <__sprint_r>
  403636:	2800      	cmp	r0, #0
  403638:	f47f ae04 	bne.w	403244 <_vfprintf_r+0xb14>
  40363c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40363e:	9e24      	ldr	r6, [sp, #144]	; 0x90
  403640:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403644:	e5c6      	b.n	4031d4 <_vfprintf_r+0xaa4>
  403646:	bf00      	nop
  403648:	00407390 	.word	0x00407390
  40364c:	af30      	add	r7, sp, #192	; 0xc0
  40364e:	f7ff b999 	b.w	402984 <_vfprintf_r+0x254>
  403652:	aa23      	add	r2, sp, #140	; 0x8c
  403654:	990a      	ldr	r1, [sp, #40]	; 0x28
  403656:	9808      	ldr	r0, [sp, #32]
  403658:	f7ff f860 	bl	40271c <__sprint_r>
  40365c:	2800      	cmp	r0, #0
  40365e:	f47f adf1 	bne.w	403244 <_vfprintf_r+0xb14>
  403662:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403664:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403668:	f7ff ba11 	b.w	402a8e <_vfprintf_r+0x35e>
  40366c:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  403670:	4264      	negs	r4, r4
  403672:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  403676:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  40367a:	2301      	movs	r3, #1
  40367c:	f7ff b968 	b.w	402950 <_vfprintf_r+0x220>
  403680:	9c13      	ldr	r4, [sp, #76]	; 0x4c
  403682:	4622      	mov	r2, r4
  403684:	4620      	mov	r0, r4
  403686:	9c12      	ldr	r4, [sp, #72]	; 0x48
  403688:	4623      	mov	r3, r4
  40368a:	4621      	mov	r1, r4
  40368c:	f003 fc90 	bl	406fb0 <__aeabi_dcmpun>
  403690:	2800      	cmp	r0, #0
  403692:	f040 828c 	bne.w	403bae <_vfprintf_r+0x147e>
  403696:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403698:	3301      	adds	r3, #1
  40369a:	f026 0320 	bic.w	r3, r6, #32
  40369e:	930d      	str	r3, [sp, #52]	; 0x34
  4036a0:	f000 8091 	beq.w	4037c6 <_vfprintf_r+0x1096>
  4036a4:	2b47      	cmp	r3, #71	; 0x47
  4036a6:	d104      	bne.n	4036b2 <_vfprintf_r+0xf82>
  4036a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4036aa:	2b00      	cmp	r3, #0
  4036ac:	bf08      	it	eq
  4036ae:	2301      	moveq	r3, #1
  4036b0:	9309      	str	r3, [sp, #36]	; 0x24
  4036b2:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4036b6:	9306      	str	r3, [sp, #24]
  4036b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4036ba:	f1b3 0a00 	subs.w	sl, r3, #0
  4036be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4036c0:	9307      	str	r3, [sp, #28]
  4036c2:	bfbb      	ittet	lt
  4036c4:	4653      	movlt	r3, sl
  4036c6:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
  4036ca:	2300      	movge	r3, #0
  4036cc:	232d      	movlt	r3, #45	; 0x2d
  4036ce:	2e66      	cmp	r6, #102	; 0x66
  4036d0:	930f      	str	r3, [sp, #60]	; 0x3c
  4036d2:	f000 817f 	beq.w	4039d4 <_vfprintf_r+0x12a4>
  4036d6:	2e46      	cmp	r6, #70	; 0x46
  4036d8:	f000 81d4 	beq.w	403a84 <_vfprintf_r+0x1354>
  4036dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4036de:	9a07      	ldr	r2, [sp, #28]
  4036e0:	2b45      	cmp	r3, #69	; 0x45
  4036e2:	bf0c      	ite	eq
  4036e4:	9b09      	ldreq	r3, [sp, #36]	; 0x24
  4036e6:	9d09      	ldrne	r5, [sp, #36]	; 0x24
  4036e8:	a821      	add	r0, sp, #132	; 0x84
  4036ea:	a91e      	add	r1, sp, #120	; 0x78
  4036ec:	bf08      	it	eq
  4036ee:	1c5d      	addeq	r5, r3, #1
  4036f0:	9004      	str	r0, [sp, #16]
  4036f2:	9103      	str	r1, [sp, #12]
  4036f4:	a81d      	add	r0, sp, #116	; 0x74
  4036f6:	2102      	movs	r1, #2
  4036f8:	9002      	str	r0, [sp, #8]
  4036fa:	4653      	mov	r3, sl
  4036fc:	9501      	str	r5, [sp, #4]
  4036fe:	9100      	str	r1, [sp, #0]
  403700:	9808      	ldr	r0, [sp, #32]
  403702:	f000 fc0d 	bl	403f20 <_dtoa_r>
  403706:	2e67      	cmp	r6, #103	; 0x67
  403708:	4607      	mov	r7, r0
  40370a:	f040 81af 	bne.w	403a6c <_vfprintf_r+0x133c>
  40370e:	f01b 0f01 	tst.w	fp, #1
  403712:	f000 8213 	beq.w	403b3c <_vfprintf_r+0x140c>
  403716:	197c      	adds	r4, r7, r5
  403718:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40371a:	9807      	ldr	r0, [sp, #28]
  40371c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40371e:	4651      	mov	r1, sl
  403720:	f003 fc14 	bl	406f4c <__aeabi_dcmpeq>
  403724:	2800      	cmp	r0, #0
  403726:	f040 8132 	bne.w	40398e <_vfprintf_r+0x125e>
  40372a:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40372c:	42a3      	cmp	r3, r4
  40372e:	d206      	bcs.n	40373e <_vfprintf_r+0x100e>
  403730:	2130      	movs	r1, #48	; 0x30
  403732:	1c5a      	adds	r2, r3, #1
  403734:	9221      	str	r2, [sp, #132]	; 0x84
  403736:	7019      	strb	r1, [r3, #0]
  403738:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40373a:	429c      	cmp	r4, r3
  40373c:	d8f9      	bhi.n	403732 <_vfprintf_r+0x1002>
  40373e:	1bdb      	subs	r3, r3, r7
  403740:	9311      	str	r3, [sp, #68]	; 0x44
  403742:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403744:	2b47      	cmp	r3, #71	; 0x47
  403746:	f000 80b9 	beq.w	4038bc <_vfprintf_r+0x118c>
  40374a:	2e65      	cmp	r6, #101	; 0x65
  40374c:	f340 8276 	ble.w	403c3c <_vfprintf_r+0x150c>
  403750:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  403752:	9310      	str	r3, [sp, #64]	; 0x40
  403754:	2e66      	cmp	r6, #102	; 0x66
  403756:	f000 8162 	beq.w	403a1e <_vfprintf_r+0x12ee>
  40375a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40375c:	9a10      	ldr	r2, [sp, #64]	; 0x40
  40375e:	4619      	mov	r1, r3
  403760:	4291      	cmp	r1, r2
  403762:	f300 814f 	bgt.w	403a04 <_vfprintf_r+0x12d4>
  403766:	f01b 0f01 	tst.w	fp, #1
  40376a:	f040 8209 	bne.w	403b80 <_vfprintf_r+0x1450>
  40376e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403772:	9307      	str	r3, [sp, #28]
  403774:	920d      	str	r2, [sp, #52]	; 0x34
  403776:	2667      	movs	r6, #103	; 0x67
  403778:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40377a:	2b00      	cmp	r3, #0
  40377c:	f040 8096 	bne.w	4038ac <_vfprintf_r+0x117c>
  403780:	9309      	str	r3, [sp, #36]	; 0x24
  403782:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  403786:	f7ff b905 	b.w	402994 <_vfprintf_r+0x264>
  40378a:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  40378e:	f001 fff1 	bl	405774 <__retarget_lock_release_recursive>
  403792:	f04f 33ff 	mov.w	r3, #4294967295
  403796:	930b      	str	r3, [sp, #44]	; 0x2c
  403798:	f7ff ba30 	b.w	402bfc <_vfprintf_r+0x4cc>
  40379c:	9a06      	ldr	r2, [sp, #24]
  40379e:	07d5      	lsls	r5, r2, #31
  4037a0:	f57f aeb4 	bpl.w	40350c <_vfprintf_r+0xddc>
  4037a4:	e6a2      	b.n	4034ec <_vfprintf_r+0xdbc>
  4037a6:	f108 0808 	add.w	r8, r8, #8
  4037aa:	e69a      	b.n	4034e2 <_vfprintf_r+0xdb2>
  4037ac:	aa23      	add	r2, sp, #140	; 0x8c
  4037ae:	990a      	ldr	r1, [sp, #40]	; 0x28
  4037b0:	9808      	ldr	r0, [sp, #32]
  4037b2:	f7fe ffb3 	bl	40271c <__sprint_r>
  4037b6:	2800      	cmp	r0, #0
  4037b8:	f47f ad44 	bne.w	403244 <_vfprintf_r+0xb14>
  4037bc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4037be:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4037c0:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4037c4:	e6a2      	b.n	40350c <_vfprintf_r+0xddc>
  4037c6:	2306      	movs	r3, #6
  4037c8:	9309      	str	r3, [sp, #36]	; 0x24
  4037ca:	e772      	b.n	4036b2 <_vfprintf_r+0xf82>
  4037cc:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  4037d0:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  4037d4:	f7ff bbc7 	b.w	402f66 <_vfprintf_r+0x836>
  4037d8:	aa23      	add	r2, sp, #140	; 0x8c
  4037da:	990a      	ldr	r1, [sp, #40]	; 0x28
  4037dc:	9808      	ldr	r0, [sp, #32]
  4037de:	f7fe ff9d 	bl	40271c <__sprint_r>
  4037e2:	2800      	cmp	r0, #0
  4037e4:	f47f ad2e 	bne.w	403244 <_vfprintf_r+0xb14>
  4037e8:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4037ec:	e437      	b.n	40305e <_vfprintf_r+0x92e>
  4037ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4037f0:	4ab4      	ldr	r2, [pc, #720]	; (403ac4 <_vfprintf_r+0x1394>)
  4037f2:	f8c8 2000 	str.w	r2, [r8]
  4037f6:	3301      	adds	r3, #1
  4037f8:	3401      	adds	r4, #1
  4037fa:	2201      	movs	r2, #1
  4037fc:	2b07      	cmp	r3, #7
  4037fe:	9425      	str	r4, [sp, #148]	; 0x94
  403800:	9324      	str	r3, [sp, #144]	; 0x90
  403802:	f8c8 2004 	str.w	r2, [r8, #4]
  403806:	f300 8124 	bgt.w	403a52 <_vfprintf_r+0x1322>
  40380a:	f108 0808 	add.w	r8, r8, #8
  40380e:	b929      	cbnz	r1, 40381c <_vfprintf_r+0x10ec>
  403810:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403812:	b91b      	cbnz	r3, 40381c <_vfprintf_r+0x10ec>
  403814:	9b06      	ldr	r3, [sp, #24]
  403816:	07de      	lsls	r6, r3, #31
  403818:	f57f a98f 	bpl.w	402b3a <_vfprintf_r+0x40a>
  40381c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40381e:	9814      	ldr	r0, [sp, #80]	; 0x50
  403820:	9a15      	ldr	r2, [sp, #84]	; 0x54
  403822:	f8c8 2000 	str.w	r2, [r8]
  403826:	3301      	adds	r3, #1
  403828:	4602      	mov	r2, r0
  40382a:	4422      	add	r2, r4
  40382c:	2b07      	cmp	r3, #7
  40382e:	9225      	str	r2, [sp, #148]	; 0x94
  403830:	f8c8 0004 	str.w	r0, [r8, #4]
  403834:	9324      	str	r3, [sp, #144]	; 0x90
  403836:	f300 8169 	bgt.w	403b0c <_vfprintf_r+0x13dc>
  40383a:	f108 0808 	add.w	r8, r8, #8
  40383e:	2900      	cmp	r1, #0
  403840:	f2c0 8136 	blt.w	403ab0 <_vfprintf_r+0x1380>
  403844:	9911      	ldr	r1, [sp, #68]	; 0x44
  403846:	f8c8 7000 	str.w	r7, [r8]
  40384a:	3301      	adds	r3, #1
  40384c:	188c      	adds	r4, r1, r2
  40384e:	2b07      	cmp	r3, #7
  403850:	9425      	str	r4, [sp, #148]	; 0x94
  403852:	9324      	str	r3, [sp, #144]	; 0x90
  403854:	f8c8 1004 	str.w	r1, [r8, #4]
  403858:	f77f a96d 	ble.w	402b36 <_vfprintf_r+0x406>
  40385c:	e4e0      	b.n	403220 <_vfprintf_r+0xaf0>
  40385e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403860:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403862:	6813      	ldr	r3, [r2, #0]
  403864:	17cd      	asrs	r5, r1, #31
  403866:	4608      	mov	r0, r1
  403868:	3204      	adds	r2, #4
  40386a:	4629      	mov	r1, r5
  40386c:	920e      	str	r2, [sp, #56]	; 0x38
  40386e:	e9c3 0100 	strd	r0, r1, [r3]
  403872:	f7fe bfa9 	b.w	4027c8 <_vfprintf_r+0x98>
  403876:	46da      	mov	sl, fp
  403878:	f7ff bbc4 	b.w	403004 <_vfprintf_r+0x8d4>
  40387c:	aa23      	add	r2, sp, #140	; 0x8c
  40387e:	990a      	ldr	r1, [sp, #40]	; 0x28
  403880:	9808      	ldr	r0, [sp, #32]
  403882:	f7fe ff4b 	bl	40271c <__sprint_r>
  403886:	2800      	cmp	r0, #0
  403888:	f47f acdc 	bne.w	403244 <_vfprintf_r+0xb14>
  40388c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40388e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403892:	f7ff bbfd 	b.w	403090 <_vfprintf_r+0x960>
  403896:	4638      	mov	r0, r7
  403898:	9409      	str	r4, [sp, #36]	; 0x24
  40389a:	f7fe fe91 	bl	4025c0 <strlen>
  40389e:	950e      	str	r5, [sp, #56]	; 0x38
  4038a0:	900d      	str	r0, [sp, #52]	; 0x34
  4038a2:	f8cd b018 	str.w	fp, [sp, #24]
  4038a6:	4603      	mov	r3, r0
  4038a8:	f7ff ba36 	b.w	402d18 <_vfprintf_r+0x5e8>
  4038ac:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  4038b0:	2300      	movs	r3, #0
  4038b2:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  4038b6:	9309      	str	r3, [sp, #36]	; 0x24
  4038b8:	f7ff b86f 	b.w	40299a <_vfprintf_r+0x26a>
  4038bc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4038be:	9310      	str	r3, [sp, #64]	; 0x40
  4038c0:	461a      	mov	r2, r3
  4038c2:	3303      	adds	r3, #3
  4038c4:	db04      	blt.n	4038d0 <_vfprintf_r+0x11a0>
  4038c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4038c8:	4619      	mov	r1, r3
  4038ca:	4291      	cmp	r1, r2
  4038cc:	f6bf af45 	bge.w	40375a <_vfprintf_r+0x102a>
  4038d0:	3e02      	subs	r6, #2
  4038d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4038d4:	f88d 607c 	strb.w	r6, [sp, #124]	; 0x7c
  4038d8:	3b01      	subs	r3, #1
  4038da:	2b00      	cmp	r3, #0
  4038dc:	931d      	str	r3, [sp, #116]	; 0x74
  4038de:	bfbd      	ittte	lt
  4038e0:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
  4038e2:	f1c3 0301 	rsblt	r3, r3, #1
  4038e6:	222d      	movlt	r2, #45	; 0x2d
  4038e8:	222b      	movge	r2, #43	; 0x2b
  4038ea:	2b09      	cmp	r3, #9
  4038ec:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
  4038f0:	f340 813e 	ble.w	403b70 <_vfprintf_r+0x1440>
  4038f4:	f10d 048b 	add.w	r4, sp, #139	; 0x8b
  4038f8:	4620      	mov	r0, r4
  4038fa:	4d73      	ldr	r5, [pc, #460]	; (403ac8 <_vfprintf_r+0x1398>)
  4038fc:	e000      	b.n	403900 <_vfprintf_r+0x11d0>
  4038fe:	4610      	mov	r0, r2
  403900:	fb85 1203 	smull	r1, r2, r5, r3
  403904:	17d9      	asrs	r1, r3, #31
  403906:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  40390a:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  40390e:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403912:	3230      	adds	r2, #48	; 0x30
  403914:	2909      	cmp	r1, #9
  403916:	f800 2c01 	strb.w	r2, [r0, #-1]
  40391a:	460b      	mov	r3, r1
  40391c:	f100 32ff 	add.w	r2, r0, #4294967295
  403920:	dced      	bgt.n	4038fe <_vfprintf_r+0x11ce>
  403922:	3330      	adds	r3, #48	; 0x30
  403924:	3802      	subs	r0, #2
  403926:	b2d9      	uxtb	r1, r3
  403928:	4284      	cmp	r4, r0
  40392a:	f802 1c01 	strb.w	r1, [r2, #-1]
  40392e:	f240 8190 	bls.w	403c52 <_vfprintf_r+0x1522>
  403932:	f10d 007e 	add.w	r0, sp, #126	; 0x7e
  403936:	4613      	mov	r3, r2
  403938:	e001      	b.n	40393e <_vfprintf_r+0x120e>
  40393a:	f813 1b01 	ldrb.w	r1, [r3], #1
  40393e:	f800 1b01 	strb.w	r1, [r0], #1
  403942:	42a3      	cmp	r3, r4
  403944:	d1f9      	bne.n	40393a <_vfprintf_r+0x120a>
  403946:	3301      	adds	r3, #1
  403948:	1a9b      	subs	r3, r3, r2
  40394a:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
  40394e:	4413      	add	r3, r2
  403950:	aa1f      	add	r2, sp, #124	; 0x7c
  403952:	1a9b      	subs	r3, r3, r2
  403954:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403956:	9319      	str	r3, [sp, #100]	; 0x64
  403958:	2a01      	cmp	r2, #1
  40395a:	4413      	add	r3, r2
  40395c:	930d      	str	r3, [sp, #52]	; 0x34
  40395e:	f340 8145 	ble.w	403bec <_vfprintf_r+0x14bc>
  403962:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403964:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403966:	4413      	add	r3, r2
  403968:	930d      	str	r3, [sp, #52]	; 0x34
  40396a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40396e:	9307      	str	r3, [sp, #28]
  403970:	2300      	movs	r3, #0
  403972:	9310      	str	r3, [sp, #64]	; 0x40
  403974:	e700      	b.n	403778 <_vfprintf_r+0x1048>
  403976:	aa23      	add	r2, sp, #140	; 0x8c
  403978:	990a      	ldr	r1, [sp, #40]	; 0x28
  40397a:	9808      	ldr	r0, [sp, #32]
  40397c:	f7fe fece 	bl	40271c <__sprint_r>
  403980:	2800      	cmp	r0, #0
  403982:	f47f ac5f 	bne.w	403244 <_vfprintf_r+0xb14>
  403986:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403988:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40398c:	e4d1      	b.n	403332 <_vfprintf_r+0xc02>
  40398e:	4623      	mov	r3, r4
  403990:	e6d5      	b.n	40373e <_vfprintf_r+0x100e>
  403992:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403994:	9710      	str	r7, [sp, #64]	; 0x40
  403996:	2b06      	cmp	r3, #6
  403998:	bf28      	it	cs
  40399a:	2306      	movcs	r3, #6
  40399c:	9709      	str	r7, [sp, #36]	; 0x24
  40399e:	46ba      	mov	sl, r7
  4039a0:	9307      	str	r3, [sp, #28]
  4039a2:	950e      	str	r5, [sp, #56]	; 0x38
  4039a4:	f8cd b018 	str.w	fp, [sp, #24]
  4039a8:	930d      	str	r3, [sp, #52]	; 0x34
  4039aa:	4f48      	ldr	r7, [pc, #288]	; (403acc <_vfprintf_r+0x139c>)
  4039ac:	f7fe bff2 	b.w	402994 <_vfprintf_r+0x264>
  4039b0:	aa23      	add	r2, sp, #140	; 0x8c
  4039b2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4039b4:	9808      	ldr	r0, [sp, #32]
  4039b6:	f7fe feb1 	bl	40271c <__sprint_r>
  4039ba:	2800      	cmp	r0, #0
  4039bc:	f47f ac42 	bne.w	403244 <_vfprintf_r+0xb14>
  4039c0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4039c2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4039c4:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4039c6:	1ad3      	subs	r3, r2, r3
  4039c8:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4039cc:	e5b6      	b.n	40353c <_vfprintf_r+0xe0c>
  4039ce:	46a2      	mov	sl, r4
  4039d0:	f7ff bb18 	b.w	403004 <_vfprintf_r+0x8d4>
  4039d4:	a821      	add	r0, sp, #132	; 0x84
  4039d6:	a91e      	add	r1, sp, #120	; 0x78
  4039d8:	9d09      	ldr	r5, [sp, #36]	; 0x24
  4039da:	9004      	str	r0, [sp, #16]
  4039dc:	9103      	str	r1, [sp, #12]
  4039de:	a81d      	add	r0, sp, #116	; 0x74
  4039e0:	2103      	movs	r1, #3
  4039e2:	9002      	str	r0, [sp, #8]
  4039e4:	9a07      	ldr	r2, [sp, #28]
  4039e6:	9501      	str	r5, [sp, #4]
  4039e8:	4653      	mov	r3, sl
  4039ea:	9100      	str	r1, [sp, #0]
  4039ec:	9808      	ldr	r0, [sp, #32]
  4039ee:	f000 fa97 	bl	403f20 <_dtoa_r>
  4039f2:	4607      	mov	r7, r0
  4039f4:	1944      	adds	r4, r0, r5
  4039f6:	783b      	ldrb	r3, [r7, #0]
  4039f8:	2b30      	cmp	r3, #48	; 0x30
  4039fa:	f000 80ca 	beq.w	403b92 <_vfprintf_r+0x1462>
  4039fe:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  403a00:	442c      	add	r4, r5
  403a02:	e689      	b.n	403718 <_vfprintf_r+0xfe8>
  403a04:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403a06:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403a08:	4413      	add	r3, r2
  403a0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
  403a0c:	930d      	str	r3, [sp, #52]	; 0x34
  403a0e:	2a00      	cmp	r2, #0
  403a10:	f340 80e4 	ble.w	403bdc <_vfprintf_r+0x14ac>
  403a14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403a18:	9307      	str	r3, [sp, #28]
  403a1a:	2667      	movs	r6, #103	; 0x67
  403a1c:	e6ac      	b.n	403778 <_vfprintf_r+0x1048>
  403a1e:	2b00      	cmp	r3, #0
  403a20:	f340 80fb 	ble.w	403c1a <_vfprintf_r+0x14ea>
  403a24:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403a26:	2a00      	cmp	r2, #0
  403a28:	f040 80ce 	bne.w	403bc8 <_vfprintf_r+0x1498>
  403a2c:	f01b 0f01 	tst.w	fp, #1
  403a30:	f040 80ca 	bne.w	403bc8 <_vfprintf_r+0x1498>
  403a34:	9307      	str	r3, [sp, #28]
  403a36:	930d      	str	r3, [sp, #52]	; 0x34
  403a38:	e69e      	b.n	403778 <_vfprintf_r+0x1048>
  403a3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403a3c:	9307      	str	r3, [sp, #28]
  403a3e:	930d      	str	r3, [sp, #52]	; 0x34
  403a40:	9009      	str	r0, [sp, #36]	; 0x24
  403a42:	950e      	str	r5, [sp, #56]	; 0x38
  403a44:	f8cd b018 	str.w	fp, [sp, #24]
  403a48:	9010      	str	r0, [sp, #64]	; 0x40
  403a4a:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  403a4e:	f7fe bfa1 	b.w	402994 <_vfprintf_r+0x264>
  403a52:	aa23      	add	r2, sp, #140	; 0x8c
  403a54:	990a      	ldr	r1, [sp, #40]	; 0x28
  403a56:	9808      	ldr	r0, [sp, #32]
  403a58:	f7fe fe60 	bl	40271c <__sprint_r>
  403a5c:	2800      	cmp	r0, #0
  403a5e:	f47f abf1 	bne.w	403244 <_vfprintf_r+0xb14>
  403a62:	991d      	ldr	r1, [sp, #116]	; 0x74
  403a64:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403a66:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403a6a:	e6d0      	b.n	40380e <_vfprintf_r+0x10de>
  403a6c:	2e47      	cmp	r6, #71	; 0x47
  403a6e:	f47f ae52 	bne.w	403716 <_vfprintf_r+0xfe6>
  403a72:	f01b 0f01 	tst.w	fp, #1
  403a76:	f000 80da 	beq.w	403c2e <_vfprintf_r+0x14fe>
  403a7a:	2e46      	cmp	r6, #70	; 0x46
  403a7c:	eb07 0405 	add.w	r4, r7, r5
  403a80:	d0b9      	beq.n	4039f6 <_vfprintf_r+0x12c6>
  403a82:	e649      	b.n	403718 <_vfprintf_r+0xfe8>
  403a84:	a821      	add	r0, sp, #132	; 0x84
  403a86:	a91e      	add	r1, sp, #120	; 0x78
  403a88:	9c09      	ldr	r4, [sp, #36]	; 0x24
  403a8a:	9004      	str	r0, [sp, #16]
  403a8c:	9103      	str	r1, [sp, #12]
  403a8e:	a81d      	add	r0, sp, #116	; 0x74
  403a90:	2103      	movs	r1, #3
  403a92:	9002      	str	r0, [sp, #8]
  403a94:	9a07      	ldr	r2, [sp, #28]
  403a96:	9401      	str	r4, [sp, #4]
  403a98:	4653      	mov	r3, sl
  403a9a:	9100      	str	r1, [sp, #0]
  403a9c:	9808      	ldr	r0, [sp, #32]
  403a9e:	f000 fa3f 	bl	403f20 <_dtoa_r>
  403aa2:	4625      	mov	r5, r4
  403aa4:	4607      	mov	r7, r0
  403aa6:	e7e8      	b.n	403a7a <_vfprintf_r+0x134a>
  403aa8:	2300      	movs	r3, #0
  403aaa:	9309      	str	r3, [sp, #36]	; 0x24
  403aac:	f7fe bec1 	b.w	402832 <_vfprintf_r+0x102>
  403ab0:	424e      	negs	r6, r1
  403ab2:	3110      	adds	r1, #16
  403ab4:	4d06      	ldr	r5, [pc, #24]	; (403ad0 <_vfprintf_r+0x13a0>)
  403ab6:	da43      	bge.n	403b40 <_vfprintf_r+0x1410>
  403ab8:	2410      	movs	r4, #16
  403aba:	f8dd a020 	ldr.w	sl, [sp, #32]
  403abe:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403ac2:	e00c      	b.n	403ade <_vfprintf_r+0x13ae>
  403ac4:	0040737c 	.word	0x0040737c
  403ac8:	66666667 	.word	0x66666667
  403acc:	00407374 	.word	0x00407374
  403ad0:	00407390 	.word	0x00407390
  403ad4:	f108 0808 	add.w	r8, r8, #8
  403ad8:	3e10      	subs	r6, #16
  403ada:	2e10      	cmp	r6, #16
  403adc:	dd30      	ble.n	403b40 <_vfprintf_r+0x1410>
  403ade:	3301      	adds	r3, #1
  403ae0:	3210      	adds	r2, #16
  403ae2:	2b07      	cmp	r3, #7
  403ae4:	9225      	str	r2, [sp, #148]	; 0x94
  403ae6:	9324      	str	r3, [sp, #144]	; 0x90
  403ae8:	f8c8 5000 	str.w	r5, [r8]
  403aec:	f8c8 4004 	str.w	r4, [r8, #4]
  403af0:	ddf0      	ble.n	403ad4 <_vfprintf_r+0x13a4>
  403af2:	aa23      	add	r2, sp, #140	; 0x8c
  403af4:	4659      	mov	r1, fp
  403af6:	4650      	mov	r0, sl
  403af8:	f7fe fe10 	bl	40271c <__sprint_r>
  403afc:	2800      	cmp	r0, #0
  403afe:	f47f aeba 	bne.w	403876 <_vfprintf_r+0x1146>
  403b02:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403b04:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b06:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403b0a:	e7e5      	b.n	403ad8 <_vfprintf_r+0x13a8>
  403b0c:	aa23      	add	r2, sp, #140	; 0x8c
  403b0e:	990a      	ldr	r1, [sp, #40]	; 0x28
  403b10:	9808      	ldr	r0, [sp, #32]
  403b12:	f7fe fe03 	bl	40271c <__sprint_r>
  403b16:	2800      	cmp	r0, #0
  403b18:	f47f ab94 	bne.w	403244 <_vfprintf_r+0xb14>
  403b1c:	991d      	ldr	r1, [sp, #116]	; 0x74
  403b1e:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403b20:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b22:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403b26:	e68a      	b.n	40383e <_vfprintf_r+0x110e>
  403b28:	9808      	ldr	r0, [sp, #32]
  403b2a:	aa23      	add	r2, sp, #140	; 0x8c
  403b2c:	4651      	mov	r1, sl
  403b2e:	f7fe fdf5 	bl	40271c <__sprint_r>
  403b32:	2800      	cmp	r0, #0
  403b34:	f43f aa64 	beq.w	403000 <_vfprintf_r+0x8d0>
  403b38:	f7ff ba64 	b.w	403004 <_vfprintf_r+0x8d4>
  403b3c:	9b21      	ldr	r3, [sp, #132]	; 0x84
  403b3e:	e5fe      	b.n	40373e <_vfprintf_r+0x100e>
  403b40:	3301      	adds	r3, #1
  403b42:	4432      	add	r2, r6
  403b44:	2b07      	cmp	r3, #7
  403b46:	e888 0060 	stmia.w	r8, {r5, r6}
  403b4a:	9225      	str	r2, [sp, #148]	; 0x94
  403b4c:	9324      	str	r3, [sp, #144]	; 0x90
  403b4e:	f108 0808 	add.w	r8, r8, #8
  403b52:	f77f ae77 	ble.w	403844 <_vfprintf_r+0x1114>
  403b56:	aa23      	add	r2, sp, #140	; 0x8c
  403b58:	990a      	ldr	r1, [sp, #40]	; 0x28
  403b5a:	9808      	ldr	r0, [sp, #32]
  403b5c:	f7fe fdde 	bl	40271c <__sprint_r>
  403b60:	2800      	cmp	r0, #0
  403b62:	f47f ab6f 	bne.w	403244 <_vfprintf_r+0xb14>
  403b66:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403b68:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b6a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403b6e:	e669      	b.n	403844 <_vfprintf_r+0x1114>
  403b70:	3330      	adds	r3, #48	; 0x30
  403b72:	2230      	movs	r2, #48	; 0x30
  403b74:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
  403b78:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
  403b7c:	ab20      	add	r3, sp, #128	; 0x80
  403b7e:	e6e7      	b.n	403950 <_vfprintf_r+0x1220>
  403b80:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403b82:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403b84:	4413      	add	r3, r2
  403b86:	930d      	str	r3, [sp, #52]	; 0x34
  403b88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403b8c:	9307      	str	r3, [sp, #28]
  403b8e:	2667      	movs	r6, #103	; 0x67
  403b90:	e5f2      	b.n	403778 <_vfprintf_r+0x1048>
  403b92:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403b94:	9807      	ldr	r0, [sp, #28]
  403b96:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403b98:	4651      	mov	r1, sl
  403b9a:	f003 f9d7 	bl	406f4c <__aeabi_dcmpeq>
  403b9e:	2800      	cmp	r0, #0
  403ba0:	f47f af2d 	bne.w	4039fe <_vfprintf_r+0x12ce>
  403ba4:	f1c5 0501 	rsb	r5, r5, #1
  403ba8:	951d      	str	r5, [sp, #116]	; 0x74
  403baa:	442c      	add	r4, r5
  403bac:	e5b4      	b.n	403718 <_vfprintf_r+0xfe8>
  403bae:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403bb0:	4f33      	ldr	r7, [pc, #204]	; (403c80 <_vfprintf_r+0x1550>)
  403bb2:	2b00      	cmp	r3, #0
  403bb4:	bfb6      	itet	lt
  403bb6:	f04f 0a2d 	movlt.w	sl, #45	; 0x2d
  403bba:	f89d a06f 	ldrbge.w	sl, [sp, #111]	; 0x6f
  403bbe:	f88d a06f 	strblt.w	sl, [sp, #111]	; 0x6f
  403bc2:	4b30      	ldr	r3, [pc, #192]	; (403c84 <_vfprintf_r+0x1554>)
  403bc4:	f7ff b9d1 	b.w	402f6a <_vfprintf_r+0x83a>
  403bc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403bca:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403bcc:	4413      	add	r3, r2
  403bce:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403bd0:	441a      	add	r2, r3
  403bd2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403bd6:	920d      	str	r2, [sp, #52]	; 0x34
  403bd8:	9307      	str	r3, [sp, #28]
  403bda:	e5cd      	b.n	403778 <_vfprintf_r+0x1048>
  403bdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403bde:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403be0:	f1c3 0301 	rsb	r3, r3, #1
  403be4:	441a      	add	r2, r3
  403be6:	4613      	mov	r3, r2
  403be8:	920d      	str	r2, [sp, #52]	; 0x34
  403bea:	e713      	b.n	403a14 <_vfprintf_r+0x12e4>
  403bec:	f01b 0301 	ands.w	r3, fp, #1
  403bf0:	9310      	str	r3, [sp, #64]	; 0x40
  403bf2:	f47f aeb6 	bne.w	403962 <_vfprintf_r+0x1232>
  403bf6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403bf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403bfc:	9307      	str	r3, [sp, #28]
  403bfe:	e5bb      	b.n	403778 <_vfprintf_r+0x1048>
  403c00:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  403c02:	f899 6001 	ldrb.w	r6, [r9, #1]
  403c06:	6823      	ldr	r3, [r4, #0]
  403c08:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
  403c0c:	9309      	str	r3, [sp, #36]	; 0x24
  403c0e:	4623      	mov	r3, r4
  403c10:	3304      	adds	r3, #4
  403c12:	4681      	mov	r9, r0
  403c14:	930e      	str	r3, [sp, #56]	; 0x38
  403c16:	f7fe be0a 	b.w	40282e <_vfprintf_r+0xfe>
  403c1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403c1c:	b913      	cbnz	r3, 403c24 <_vfprintf_r+0x14f4>
  403c1e:	f01b 0f01 	tst.w	fp, #1
  403c22:	d002      	beq.n	403c2a <_vfprintf_r+0x14fa>
  403c24:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403c26:	3301      	adds	r3, #1
  403c28:	e7d1      	b.n	403bce <_vfprintf_r+0x149e>
  403c2a:	2301      	movs	r3, #1
  403c2c:	e702      	b.n	403a34 <_vfprintf_r+0x1304>
  403c2e:	9b21      	ldr	r3, [sp, #132]	; 0x84
  403c30:	1bdb      	subs	r3, r3, r7
  403c32:	9311      	str	r3, [sp, #68]	; 0x44
  403c34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403c36:	2b47      	cmp	r3, #71	; 0x47
  403c38:	f43f ae40 	beq.w	4038bc <_vfprintf_r+0x118c>
  403c3c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  403c3e:	9310      	str	r3, [sp, #64]	; 0x40
  403c40:	e647      	b.n	4038d2 <_vfprintf_r+0x11a2>
  403c42:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403c46:	f7ff b81d 	b.w	402c84 <_vfprintf_r+0x554>
  403c4a:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403c4e:	f7ff b918 	b.w	402e82 <_vfprintf_r+0x752>
  403c52:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
  403c56:	e67b      	b.n	403950 <_vfprintf_r+0x1220>
  403c58:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403c5c:	f7ff b866 	b.w	402d2c <_vfprintf_r+0x5fc>
  403c60:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403c64:	f7ff b9ac 	b.w	402fc0 <_vfprintf_r+0x890>
  403c68:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403c6c:	f7ff b934 	b.w	402ed8 <_vfprintf_r+0x7a8>
  403c70:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403c74:	f7ff b8b0 	b.w	402dd8 <_vfprintf_r+0x6a8>
  403c78:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403c7c:	f7ff b945 	b.w	402f0a <_vfprintf_r+0x7da>
  403c80:	00407348 	.word	0x00407348
  403c84:	00407344 	.word	0x00407344

00403c88 <__sbprintf>:
  403c88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403c8c:	460c      	mov	r4, r1
  403c8e:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  403c92:	8989      	ldrh	r1, [r1, #12]
  403c94:	6e66      	ldr	r6, [r4, #100]	; 0x64
  403c96:	89e5      	ldrh	r5, [r4, #14]
  403c98:	9619      	str	r6, [sp, #100]	; 0x64
  403c9a:	f021 0102 	bic.w	r1, r1, #2
  403c9e:	4606      	mov	r6, r0
  403ca0:	69e0      	ldr	r0, [r4, #28]
  403ca2:	f8ad 100c 	strh.w	r1, [sp, #12]
  403ca6:	4617      	mov	r7, r2
  403ca8:	f44f 6180 	mov.w	r1, #1024	; 0x400
  403cac:	6a62      	ldr	r2, [r4, #36]	; 0x24
  403cae:	f8ad 500e 	strh.w	r5, [sp, #14]
  403cb2:	4698      	mov	r8, r3
  403cb4:	ad1a      	add	r5, sp, #104	; 0x68
  403cb6:	2300      	movs	r3, #0
  403cb8:	9007      	str	r0, [sp, #28]
  403cba:	a816      	add	r0, sp, #88	; 0x58
  403cbc:	9209      	str	r2, [sp, #36]	; 0x24
  403cbe:	9306      	str	r3, [sp, #24]
  403cc0:	9500      	str	r5, [sp, #0]
  403cc2:	9504      	str	r5, [sp, #16]
  403cc4:	9102      	str	r1, [sp, #8]
  403cc6:	9105      	str	r1, [sp, #20]
  403cc8:	f001 fd4e 	bl	405768 <__retarget_lock_init_recursive>
  403ccc:	4643      	mov	r3, r8
  403cce:	463a      	mov	r2, r7
  403cd0:	4669      	mov	r1, sp
  403cd2:	4630      	mov	r0, r6
  403cd4:	f7fe fd2c 	bl	402730 <_vfprintf_r>
  403cd8:	1e05      	subs	r5, r0, #0
  403cda:	db07      	blt.n	403cec <__sbprintf+0x64>
  403cdc:	4630      	mov	r0, r6
  403cde:	4669      	mov	r1, sp
  403ce0:	f001 f8e8 	bl	404eb4 <_fflush_r>
  403ce4:	2800      	cmp	r0, #0
  403ce6:	bf18      	it	ne
  403ce8:	f04f 35ff 	movne.w	r5, #4294967295
  403cec:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  403cf0:	065b      	lsls	r3, r3, #25
  403cf2:	d503      	bpl.n	403cfc <__sbprintf+0x74>
  403cf4:	89a3      	ldrh	r3, [r4, #12]
  403cf6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403cfa:	81a3      	strh	r3, [r4, #12]
  403cfc:	9816      	ldr	r0, [sp, #88]	; 0x58
  403cfe:	f001 fd35 	bl	40576c <__retarget_lock_close_recursive>
  403d02:	4628      	mov	r0, r5
  403d04:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  403d08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00403d0c <__swsetup_r>:
  403d0c:	b538      	push	{r3, r4, r5, lr}
  403d0e:	4b30      	ldr	r3, [pc, #192]	; (403dd0 <__swsetup_r+0xc4>)
  403d10:	681b      	ldr	r3, [r3, #0]
  403d12:	4605      	mov	r5, r0
  403d14:	460c      	mov	r4, r1
  403d16:	b113      	cbz	r3, 403d1e <__swsetup_r+0x12>
  403d18:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  403d1a:	2a00      	cmp	r2, #0
  403d1c:	d038      	beq.n	403d90 <__swsetup_r+0x84>
  403d1e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403d22:	b293      	uxth	r3, r2
  403d24:	0718      	lsls	r0, r3, #28
  403d26:	d50c      	bpl.n	403d42 <__swsetup_r+0x36>
  403d28:	6920      	ldr	r0, [r4, #16]
  403d2a:	b1a8      	cbz	r0, 403d58 <__swsetup_r+0x4c>
  403d2c:	f013 0201 	ands.w	r2, r3, #1
  403d30:	d01e      	beq.n	403d70 <__swsetup_r+0x64>
  403d32:	6963      	ldr	r3, [r4, #20]
  403d34:	2200      	movs	r2, #0
  403d36:	425b      	negs	r3, r3
  403d38:	61a3      	str	r3, [r4, #24]
  403d3a:	60a2      	str	r2, [r4, #8]
  403d3c:	b1f0      	cbz	r0, 403d7c <__swsetup_r+0x70>
  403d3e:	2000      	movs	r0, #0
  403d40:	bd38      	pop	{r3, r4, r5, pc}
  403d42:	06d9      	lsls	r1, r3, #27
  403d44:	d53c      	bpl.n	403dc0 <__swsetup_r+0xb4>
  403d46:	0758      	lsls	r0, r3, #29
  403d48:	d426      	bmi.n	403d98 <__swsetup_r+0x8c>
  403d4a:	6920      	ldr	r0, [r4, #16]
  403d4c:	f042 0308 	orr.w	r3, r2, #8
  403d50:	81a3      	strh	r3, [r4, #12]
  403d52:	b29b      	uxth	r3, r3
  403d54:	2800      	cmp	r0, #0
  403d56:	d1e9      	bne.n	403d2c <__swsetup_r+0x20>
  403d58:	f403 7220 	and.w	r2, r3, #640	; 0x280
  403d5c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  403d60:	d0e4      	beq.n	403d2c <__swsetup_r+0x20>
  403d62:	4628      	mov	r0, r5
  403d64:	4621      	mov	r1, r4
  403d66:	f001 fd35 	bl	4057d4 <__smakebuf_r>
  403d6a:	89a3      	ldrh	r3, [r4, #12]
  403d6c:	6920      	ldr	r0, [r4, #16]
  403d6e:	e7dd      	b.n	403d2c <__swsetup_r+0x20>
  403d70:	0799      	lsls	r1, r3, #30
  403d72:	bf58      	it	pl
  403d74:	6962      	ldrpl	r2, [r4, #20]
  403d76:	60a2      	str	r2, [r4, #8]
  403d78:	2800      	cmp	r0, #0
  403d7a:	d1e0      	bne.n	403d3e <__swsetup_r+0x32>
  403d7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403d80:	061a      	lsls	r2, r3, #24
  403d82:	d5dd      	bpl.n	403d40 <__swsetup_r+0x34>
  403d84:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403d88:	81a3      	strh	r3, [r4, #12]
  403d8a:	f04f 30ff 	mov.w	r0, #4294967295
  403d8e:	bd38      	pop	{r3, r4, r5, pc}
  403d90:	4618      	mov	r0, r3
  403d92:	f001 f8f9 	bl	404f88 <__sinit>
  403d96:	e7c2      	b.n	403d1e <__swsetup_r+0x12>
  403d98:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403d9a:	b151      	cbz	r1, 403db2 <__swsetup_r+0xa6>
  403d9c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403da0:	4299      	cmp	r1, r3
  403da2:	d004      	beq.n	403dae <__swsetup_r+0xa2>
  403da4:	4628      	mov	r0, r5
  403da6:	f001 fa15 	bl	4051d4 <_free_r>
  403daa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403dae:	2300      	movs	r3, #0
  403db0:	6323      	str	r3, [r4, #48]	; 0x30
  403db2:	2300      	movs	r3, #0
  403db4:	6920      	ldr	r0, [r4, #16]
  403db6:	6063      	str	r3, [r4, #4]
  403db8:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  403dbc:	6020      	str	r0, [r4, #0]
  403dbe:	e7c5      	b.n	403d4c <__swsetup_r+0x40>
  403dc0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  403dc4:	2309      	movs	r3, #9
  403dc6:	602b      	str	r3, [r5, #0]
  403dc8:	f04f 30ff 	mov.w	r0, #4294967295
  403dcc:	81a2      	strh	r2, [r4, #12]
  403dce:	bd38      	pop	{r3, r4, r5, pc}
  403dd0:	20400018 	.word	0x20400018

00403dd4 <register_fini>:
  403dd4:	4b02      	ldr	r3, [pc, #8]	; (403de0 <register_fini+0xc>)
  403dd6:	b113      	cbz	r3, 403dde <register_fini+0xa>
  403dd8:	4802      	ldr	r0, [pc, #8]	; (403de4 <register_fini+0x10>)
  403dda:	f000 b805 	b.w	403de8 <atexit>
  403dde:	4770      	bx	lr
  403de0:	00000000 	.word	0x00000000
  403de4:	00404ff9 	.word	0x00404ff9

00403de8 <atexit>:
  403de8:	2300      	movs	r3, #0
  403dea:	4601      	mov	r1, r0
  403dec:	461a      	mov	r2, r3
  403dee:	4618      	mov	r0, r3
  403df0:	f002 befe 	b.w	406bf0 <__register_exitproc>

00403df4 <quorem>:
  403df4:	6902      	ldr	r2, [r0, #16]
  403df6:	690b      	ldr	r3, [r1, #16]
  403df8:	4293      	cmp	r3, r2
  403dfa:	f300 808d 	bgt.w	403f18 <quorem+0x124>
  403dfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403e02:	f103 38ff 	add.w	r8, r3, #4294967295
  403e06:	f101 0714 	add.w	r7, r1, #20
  403e0a:	f100 0b14 	add.w	fp, r0, #20
  403e0e:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403e12:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403e16:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403e1a:	b083      	sub	sp, #12
  403e1c:	3201      	adds	r2, #1
  403e1e:	fbb3 f9f2 	udiv	r9, r3, r2
  403e22:	eb0b 0304 	add.w	r3, fp, r4
  403e26:	9400      	str	r4, [sp, #0]
  403e28:	eb07 0a04 	add.w	sl, r7, r4
  403e2c:	9301      	str	r3, [sp, #4]
  403e2e:	f1b9 0f00 	cmp.w	r9, #0
  403e32:	d039      	beq.n	403ea8 <quorem+0xb4>
  403e34:	2500      	movs	r5, #0
  403e36:	462e      	mov	r6, r5
  403e38:	46bc      	mov	ip, r7
  403e3a:	46de      	mov	lr, fp
  403e3c:	f85c 4b04 	ldr.w	r4, [ip], #4
  403e40:	f8de 3000 	ldr.w	r3, [lr]
  403e44:	b2a2      	uxth	r2, r4
  403e46:	fb09 5502 	mla	r5, r9, r2, r5
  403e4a:	0c22      	lsrs	r2, r4, #16
  403e4c:	0c2c      	lsrs	r4, r5, #16
  403e4e:	fb09 4202 	mla	r2, r9, r2, r4
  403e52:	b2ad      	uxth	r5, r5
  403e54:	1b75      	subs	r5, r6, r5
  403e56:	b296      	uxth	r6, r2
  403e58:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403e5c:	fa15 f383 	uxtah	r3, r5, r3
  403e60:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403e64:	b29b      	uxth	r3, r3
  403e66:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403e6a:	45e2      	cmp	sl, ip
  403e6c:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403e70:	f84e 3b04 	str.w	r3, [lr], #4
  403e74:	ea4f 4626 	mov.w	r6, r6, asr #16
  403e78:	d2e0      	bcs.n	403e3c <quorem+0x48>
  403e7a:	9b00      	ldr	r3, [sp, #0]
  403e7c:	f85b 3003 	ldr.w	r3, [fp, r3]
  403e80:	b993      	cbnz	r3, 403ea8 <quorem+0xb4>
  403e82:	9c01      	ldr	r4, [sp, #4]
  403e84:	1f23      	subs	r3, r4, #4
  403e86:	459b      	cmp	fp, r3
  403e88:	d20c      	bcs.n	403ea4 <quorem+0xb0>
  403e8a:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403e8e:	b94b      	cbnz	r3, 403ea4 <quorem+0xb0>
  403e90:	f1a4 0308 	sub.w	r3, r4, #8
  403e94:	e002      	b.n	403e9c <quorem+0xa8>
  403e96:	681a      	ldr	r2, [r3, #0]
  403e98:	3b04      	subs	r3, #4
  403e9a:	b91a      	cbnz	r2, 403ea4 <quorem+0xb0>
  403e9c:	459b      	cmp	fp, r3
  403e9e:	f108 38ff 	add.w	r8, r8, #4294967295
  403ea2:	d3f8      	bcc.n	403e96 <quorem+0xa2>
  403ea4:	f8c0 8010 	str.w	r8, [r0, #16]
  403ea8:	4604      	mov	r4, r0
  403eaa:	f002 fa6f 	bl	40638c <__mcmp>
  403eae:	2800      	cmp	r0, #0
  403eb0:	db2e      	blt.n	403f10 <quorem+0x11c>
  403eb2:	f109 0901 	add.w	r9, r9, #1
  403eb6:	465d      	mov	r5, fp
  403eb8:	2300      	movs	r3, #0
  403eba:	f857 1b04 	ldr.w	r1, [r7], #4
  403ebe:	6828      	ldr	r0, [r5, #0]
  403ec0:	b28a      	uxth	r2, r1
  403ec2:	1a9a      	subs	r2, r3, r2
  403ec4:	0c0b      	lsrs	r3, r1, #16
  403ec6:	fa12 f280 	uxtah	r2, r2, r0
  403eca:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403ece:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403ed2:	b292      	uxth	r2, r2
  403ed4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403ed8:	45ba      	cmp	sl, r7
  403eda:	f845 2b04 	str.w	r2, [r5], #4
  403ede:	ea4f 4323 	mov.w	r3, r3, asr #16
  403ee2:	d2ea      	bcs.n	403eba <quorem+0xc6>
  403ee4:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403ee8:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403eec:	b982      	cbnz	r2, 403f10 <quorem+0x11c>
  403eee:	1f1a      	subs	r2, r3, #4
  403ef0:	4593      	cmp	fp, r2
  403ef2:	d20b      	bcs.n	403f0c <quorem+0x118>
  403ef4:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403ef8:	b942      	cbnz	r2, 403f0c <quorem+0x118>
  403efa:	3b08      	subs	r3, #8
  403efc:	e002      	b.n	403f04 <quorem+0x110>
  403efe:	681a      	ldr	r2, [r3, #0]
  403f00:	3b04      	subs	r3, #4
  403f02:	b91a      	cbnz	r2, 403f0c <quorem+0x118>
  403f04:	459b      	cmp	fp, r3
  403f06:	f108 38ff 	add.w	r8, r8, #4294967295
  403f0a:	d3f8      	bcc.n	403efe <quorem+0x10a>
  403f0c:	f8c4 8010 	str.w	r8, [r4, #16]
  403f10:	4648      	mov	r0, r9
  403f12:	b003      	add	sp, #12
  403f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f18:	2000      	movs	r0, #0
  403f1a:	4770      	bx	lr
  403f1c:	0000      	movs	r0, r0
	...

00403f20 <_dtoa_r>:
  403f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403f24:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403f26:	b09b      	sub	sp, #108	; 0x6c
  403f28:	4604      	mov	r4, r0
  403f2a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403f2c:	4692      	mov	sl, r2
  403f2e:	469b      	mov	fp, r3
  403f30:	b141      	cbz	r1, 403f44 <_dtoa_r+0x24>
  403f32:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403f34:	604a      	str	r2, [r1, #4]
  403f36:	2301      	movs	r3, #1
  403f38:	4093      	lsls	r3, r2
  403f3a:	608b      	str	r3, [r1, #8]
  403f3c:	f002 f84e 	bl	405fdc <_Bfree>
  403f40:	2300      	movs	r3, #0
  403f42:	6423      	str	r3, [r4, #64]	; 0x40
  403f44:	f1bb 0f00 	cmp.w	fp, #0
  403f48:	465d      	mov	r5, fp
  403f4a:	db35      	blt.n	403fb8 <_dtoa_r+0x98>
  403f4c:	2300      	movs	r3, #0
  403f4e:	6033      	str	r3, [r6, #0]
  403f50:	4b9d      	ldr	r3, [pc, #628]	; (4041c8 <_dtoa_r+0x2a8>)
  403f52:	43ab      	bics	r3, r5
  403f54:	d015      	beq.n	403f82 <_dtoa_r+0x62>
  403f56:	4650      	mov	r0, sl
  403f58:	4659      	mov	r1, fp
  403f5a:	2200      	movs	r2, #0
  403f5c:	2300      	movs	r3, #0
  403f5e:	f002 fff5 	bl	406f4c <__aeabi_dcmpeq>
  403f62:	4680      	mov	r8, r0
  403f64:	2800      	cmp	r0, #0
  403f66:	d02d      	beq.n	403fc4 <_dtoa_r+0xa4>
  403f68:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403f6a:	2301      	movs	r3, #1
  403f6c:	6013      	str	r3, [r2, #0]
  403f6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403f70:	2b00      	cmp	r3, #0
  403f72:	f000 80bd 	beq.w	4040f0 <_dtoa_r+0x1d0>
  403f76:	4895      	ldr	r0, [pc, #596]	; (4041cc <_dtoa_r+0x2ac>)
  403f78:	6018      	str	r0, [r3, #0]
  403f7a:	3801      	subs	r0, #1
  403f7c:	b01b      	add	sp, #108	; 0x6c
  403f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f82:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403f84:	f242 730f 	movw	r3, #9999	; 0x270f
  403f88:	6013      	str	r3, [r2, #0]
  403f8a:	f1ba 0f00 	cmp.w	sl, #0
  403f8e:	d10d      	bne.n	403fac <_dtoa_r+0x8c>
  403f90:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403f94:	b955      	cbnz	r5, 403fac <_dtoa_r+0x8c>
  403f96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403f98:	488d      	ldr	r0, [pc, #564]	; (4041d0 <_dtoa_r+0x2b0>)
  403f9a:	2b00      	cmp	r3, #0
  403f9c:	d0ee      	beq.n	403f7c <_dtoa_r+0x5c>
  403f9e:	f100 0308 	add.w	r3, r0, #8
  403fa2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403fa4:	6013      	str	r3, [r2, #0]
  403fa6:	b01b      	add	sp, #108	; 0x6c
  403fa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403fac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403fae:	4889      	ldr	r0, [pc, #548]	; (4041d4 <_dtoa_r+0x2b4>)
  403fb0:	2b00      	cmp	r3, #0
  403fb2:	d0e3      	beq.n	403f7c <_dtoa_r+0x5c>
  403fb4:	1cc3      	adds	r3, r0, #3
  403fb6:	e7f4      	b.n	403fa2 <_dtoa_r+0x82>
  403fb8:	2301      	movs	r3, #1
  403fba:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403fbe:	6033      	str	r3, [r6, #0]
  403fc0:	46ab      	mov	fp, r5
  403fc2:	e7c5      	b.n	403f50 <_dtoa_r+0x30>
  403fc4:	aa18      	add	r2, sp, #96	; 0x60
  403fc6:	ab19      	add	r3, sp, #100	; 0x64
  403fc8:	9201      	str	r2, [sp, #4]
  403fca:	9300      	str	r3, [sp, #0]
  403fcc:	4652      	mov	r2, sl
  403fce:	465b      	mov	r3, fp
  403fd0:	4620      	mov	r0, r4
  403fd2:	f002 fa7b 	bl	4064cc <__d2b>
  403fd6:	0d2b      	lsrs	r3, r5, #20
  403fd8:	4681      	mov	r9, r0
  403fda:	d071      	beq.n	4040c0 <_dtoa_r+0x1a0>
  403fdc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403fe0:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403fe4:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403fe6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403fea:	4650      	mov	r0, sl
  403fec:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403ff0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403ff4:	2200      	movs	r2, #0
  403ff6:	4b78      	ldr	r3, [pc, #480]	; (4041d8 <_dtoa_r+0x2b8>)
  403ff8:	f7fd fb24 	bl	401644 <__aeabi_dsub>
  403ffc:	a36c      	add	r3, pc, #432	; (adr r3, 4041b0 <_dtoa_r+0x290>)
  403ffe:	e9d3 2300 	ldrd	r2, r3, [r3]
  404002:	f7fd fcd3 	bl	4019ac <__aeabi_dmul>
  404006:	a36c      	add	r3, pc, #432	; (adr r3, 4041b8 <_dtoa_r+0x298>)
  404008:	e9d3 2300 	ldrd	r2, r3, [r3]
  40400c:	f7fd fb1c 	bl	401648 <__adddf3>
  404010:	e9cd 0102 	strd	r0, r1, [sp, #8]
  404014:	4630      	mov	r0, r6
  404016:	f7fd fc63 	bl	4018e0 <__aeabi_i2d>
  40401a:	a369      	add	r3, pc, #420	; (adr r3, 4041c0 <_dtoa_r+0x2a0>)
  40401c:	e9d3 2300 	ldrd	r2, r3, [r3]
  404020:	f7fd fcc4 	bl	4019ac <__aeabi_dmul>
  404024:	4602      	mov	r2, r0
  404026:	460b      	mov	r3, r1
  404028:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40402c:	f7fd fb0c 	bl	401648 <__adddf3>
  404030:	e9cd 0104 	strd	r0, r1, [sp, #16]
  404034:	f002 ffd2 	bl	406fdc <__aeabi_d2iz>
  404038:	2200      	movs	r2, #0
  40403a:	9002      	str	r0, [sp, #8]
  40403c:	2300      	movs	r3, #0
  40403e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  404042:	f002 ff8d 	bl	406f60 <__aeabi_dcmplt>
  404046:	2800      	cmp	r0, #0
  404048:	f040 8173 	bne.w	404332 <_dtoa_r+0x412>
  40404c:	9d02      	ldr	r5, [sp, #8]
  40404e:	2d16      	cmp	r5, #22
  404050:	f200 815d 	bhi.w	40430e <_dtoa_r+0x3ee>
  404054:	4b61      	ldr	r3, [pc, #388]	; (4041dc <_dtoa_r+0x2bc>)
  404056:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40405a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40405e:	4652      	mov	r2, sl
  404060:	465b      	mov	r3, fp
  404062:	f002 ff9b 	bl	406f9c <__aeabi_dcmpgt>
  404066:	2800      	cmp	r0, #0
  404068:	f000 81c5 	beq.w	4043f6 <_dtoa_r+0x4d6>
  40406c:	1e6b      	subs	r3, r5, #1
  40406e:	9302      	str	r3, [sp, #8]
  404070:	2300      	movs	r3, #0
  404072:	930e      	str	r3, [sp, #56]	; 0x38
  404074:	1bbf      	subs	r7, r7, r6
  404076:	1e7b      	subs	r3, r7, #1
  404078:	9306      	str	r3, [sp, #24]
  40407a:	f100 8154 	bmi.w	404326 <_dtoa_r+0x406>
  40407e:	2300      	movs	r3, #0
  404080:	9308      	str	r3, [sp, #32]
  404082:	9b02      	ldr	r3, [sp, #8]
  404084:	2b00      	cmp	r3, #0
  404086:	f2c0 8145 	blt.w	404314 <_dtoa_r+0x3f4>
  40408a:	9a06      	ldr	r2, [sp, #24]
  40408c:	930d      	str	r3, [sp, #52]	; 0x34
  40408e:	4611      	mov	r1, r2
  404090:	4419      	add	r1, r3
  404092:	2300      	movs	r3, #0
  404094:	9106      	str	r1, [sp, #24]
  404096:	930c      	str	r3, [sp, #48]	; 0x30
  404098:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40409a:	2b09      	cmp	r3, #9
  40409c:	d82a      	bhi.n	4040f4 <_dtoa_r+0x1d4>
  40409e:	2b05      	cmp	r3, #5
  4040a0:	f340 865b 	ble.w	404d5a <_dtoa_r+0xe3a>
  4040a4:	3b04      	subs	r3, #4
  4040a6:	9324      	str	r3, [sp, #144]	; 0x90
  4040a8:	2500      	movs	r5, #0
  4040aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4040ac:	3b02      	subs	r3, #2
  4040ae:	2b03      	cmp	r3, #3
  4040b0:	f200 8642 	bhi.w	404d38 <_dtoa_r+0xe18>
  4040b4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4040b8:	02c903d4 	.word	0x02c903d4
  4040bc:	046103df 	.word	0x046103df
  4040c0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4040c2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4040c4:	443e      	add	r6, r7
  4040c6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4040ca:	2b20      	cmp	r3, #32
  4040cc:	f340 818e 	ble.w	4043ec <_dtoa_r+0x4cc>
  4040d0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4040d4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4040d8:	409d      	lsls	r5, r3
  4040da:	fa2a f000 	lsr.w	r0, sl, r0
  4040de:	4328      	orrs	r0, r5
  4040e0:	f7fd fbee 	bl	4018c0 <__aeabi_ui2d>
  4040e4:	2301      	movs	r3, #1
  4040e6:	3e01      	subs	r6, #1
  4040e8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4040ec:	9314      	str	r3, [sp, #80]	; 0x50
  4040ee:	e781      	b.n	403ff4 <_dtoa_r+0xd4>
  4040f0:	483b      	ldr	r0, [pc, #236]	; (4041e0 <_dtoa_r+0x2c0>)
  4040f2:	e743      	b.n	403f7c <_dtoa_r+0x5c>
  4040f4:	2100      	movs	r1, #0
  4040f6:	6461      	str	r1, [r4, #68]	; 0x44
  4040f8:	4620      	mov	r0, r4
  4040fa:	9125      	str	r1, [sp, #148]	; 0x94
  4040fc:	f001 ff48 	bl	405f90 <_Balloc>
  404100:	f04f 33ff 	mov.w	r3, #4294967295
  404104:	930a      	str	r3, [sp, #40]	; 0x28
  404106:	9a25      	ldr	r2, [sp, #148]	; 0x94
  404108:	930f      	str	r3, [sp, #60]	; 0x3c
  40410a:	2301      	movs	r3, #1
  40410c:	9004      	str	r0, [sp, #16]
  40410e:	6420      	str	r0, [r4, #64]	; 0x40
  404110:	9224      	str	r2, [sp, #144]	; 0x90
  404112:	930b      	str	r3, [sp, #44]	; 0x2c
  404114:	9b19      	ldr	r3, [sp, #100]	; 0x64
  404116:	2b00      	cmp	r3, #0
  404118:	f2c0 80d9 	blt.w	4042ce <_dtoa_r+0x3ae>
  40411c:	9a02      	ldr	r2, [sp, #8]
  40411e:	2a0e      	cmp	r2, #14
  404120:	f300 80d5 	bgt.w	4042ce <_dtoa_r+0x3ae>
  404124:	4b2d      	ldr	r3, [pc, #180]	; (4041dc <_dtoa_r+0x2bc>)
  404126:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40412a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40412e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  404132:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404134:	2b00      	cmp	r3, #0
  404136:	f2c0 83ba 	blt.w	4048ae <_dtoa_r+0x98e>
  40413a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40413e:	4650      	mov	r0, sl
  404140:	462a      	mov	r2, r5
  404142:	4633      	mov	r3, r6
  404144:	4659      	mov	r1, fp
  404146:	f7fd fd5b 	bl	401c00 <__aeabi_ddiv>
  40414a:	f002 ff47 	bl	406fdc <__aeabi_d2iz>
  40414e:	4680      	mov	r8, r0
  404150:	f7fd fbc6 	bl	4018e0 <__aeabi_i2d>
  404154:	462a      	mov	r2, r5
  404156:	4633      	mov	r3, r6
  404158:	f7fd fc28 	bl	4019ac <__aeabi_dmul>
  40415c:	460b      	mov	r3, r1
  40415e:	4602      	mov	r2, r0
  404160:	4659      	mov	r1, fp
  404162:	4650      	mov	r0, sl
  404164:	f7fd fa6e 	bl	401644 <__aeabi_dsub>
  404168:	9d04      	ldr	r5, [sp, #16]
  40416a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40416e:	702b      	strb	r3, [r5, #0]
  404170:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404172:	2b01      	cmp	r3, #1
  404174:	4606      	mov	r6, r0
  404176:	460f      	mov	r7, r1
  404178:	f105 0501 	add.w	r5, r5, #1
  40417c:	d068      	beq.n	404250 <_dtoa_r+0x330>
  40417e:	2200      	movs	r2, #0
  404180:	4b18      	ldr	r3, [pc, #96]	; (4041e4 <_dtoa_r+0x2c4>)
  404182:	f7fd fc13 	bl	4019ac <__aeabi_dmul>
  404186:	2200      	movs	r2, #0
  404188:	2300      	movs	r3, #0
  40418a:	4606      	mov	r6, r0
  40418c:	460f      	mov	r7, r1
  40418e:	f002 fedd 	bl	406f4c <__aeabi_dcmpeq>
  404192:	2800      	cmp	r0, #0
  404194:	f040 8088 	bne.w	4042a8 <_dtoa_r+0x388>
  404198:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40419c:	f04f 0a00 	mov.w	sl, #0
  4041a0:	f8df b040 	ldr.w	fp, [pc, #64]	; 4041e4 <_dtoa_r+0x2c4>
  4041a4:	940c      	str	r4, [sp, #48]	; 0x30
  4041a6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4041aa:	e028      	b.n	4041fe <_dtoa_r+0x2de>
  4041ac:	f3af 8000 	nop.w
  4041b0:	636f4361 	.word	0x636f4361
  4041b4:	3fd287a7 	.word	0x3fd287a7
  4041b8:	8b60c8b3 	.word	0x8b60c8b3
  4041bc:	3fc68a28 	.word	0x3fc68a28
  4041c0:	509f79fb 	.word	0x509f79fb
  4041c4:	3fd34413 	.word	0x3fd34413
  4041c8:	7ff00000 	.word	0x7ff00000
  4041cc:	0040737d 	.word	0x0040737d
  4041d0:	004073a0 	.word	0x004073a0
  4041d4:	004073ac 	.word	0x004073ac
  4041d8:	3ff80000 	.word	0x3ff80000
  4041dc:	004073e8 	.word	0x004073e8
  4041e0:	0040737c 	.word	0x0040737c
  4041e4:	40240000 	.word	0x40240000
  4041e8:	f7fd fbe0 	bl	4019ac <__aeabi_dmul>
  4041ec:	2200      	movs	r2, #0
  4041ee:	2300      	movs	r3, #0
  4041f0:	4606      	mov	r6, r0
  4041f2:	460f      	mov	r7, r1
  4041f4:	f002 feaa 	bl	406f4c <__aeabi_dcmpeq>
  4041f8:	2800      	cmp	r0, #0
  4041fa:	f040 83c1 	bne.w	404980 <_dtoa_r+0xa60>
  4041fe:	4642      	mov	r2, r8
  404200:	464b      	mov	r3, r9
  404202:	4630      	mov	r0, r6
  404204:	4639      	mov	r1, r7
  404206:	f7fd fcfb 	bl	401c00 <__aeabi_ddiv>
  40420a:	f002 fee7 	bl	406fdc <__aeabi_d2iz>
  40420e:	4604      	mov	r4, r0
  404210:	f7fd fb66 	bl	4018e0 <__aeabi_i2d>
  404214:	4642      	mov	r2, r8
  404216:	464b      	mov	r3, r9
  404218:	f7fd fbc8 	bl	4019ac <__aeabi_dmul>
  40421c:	4602      	mov	r2, r0
  40421e:	460b      	mov	r3, r1
  404220:	4630      	mov	r0, r6
  404222:	4639      	mov	r1, r7
  404224:	f7fd fa0e 	bl	401644 <__aeabi_dsub>
  404228:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40422c:	9e04      	ldr	r6, [sp, #16]
  40422e:	f805 eb01 	strb.w	lr, [r5], #1
  404232:	eba5 0e06 	sub.w	lr, r5, r6
  404236:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  404238:	45b6      	cmp	lr, r6
  40423a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40423e:	4652      	mov	r2, sl
  404240:	465b      	mov	r3, fp
  404242:	d1d1      	bne.n	4041e8 <_dtoa_r+0x2c8>
  404244:	46a0      	mov	r8, r4
  404246:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40424a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40424c:	4606      	mov	r6, r0
  40424e:	460f      	mov	r7, r1
  404250:	4632      	mov	r2, r6
  404252:	463b      	mov	r3, r7
  404254:	4630      	mov	r0, r6
  404256:	4639      	mov	r1, r7
  404258:	f7fd f9f6 	bl	401648 <__adddf3>
  40425c:	4606      	mov	r6, r0
  40425e:	460f      	mov	r7, r1
  404260:	4602      	mov	r2, r0
  404262:	460b      	mov	r3, r1
  404264:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404268:	f002 fe7a 	bl	406f60 <__aeabi_dcmplt>
  40426c:	b948      	cbnz	r0, 404282 <_dtoa_r+0x362>
  40426e:	4632      	mov	r2, r6
  404270:	463b      	mov	r3, r7
  404272:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404276:	f002 fe69 	bl	406f4c <__aeabi_dcmpeq>
  40427a:	b1a8      	cbz	r0, 4042a8 <_dtoa_r+0x388>
  40427c:	f018 0f01 	tst.w	r8, #1
  404280:	d012      	beq.n	4042a8 <_dtoa_r+0x388>
  404282:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404286:	9a04      	ldr	r2, [sp, #16]
  404288:	1e6b      	subs	r3, r5, #1
  40428a:	e004      	b.n	404296 <_dtoa_r+0x376>
  40428c:	429a      	cmp	r2, r3
  40428e:	f000 8401 	beq.w	404a94 <_dtoa_r+0xb74>
  404292:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  404296:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40429a:	f103 0501 	add.w	r5, r3, #1
  40429e:	d0f5      	beq.n	40428c <_dtoa_r+0x36c>
  4042a0:	f108 0801 	add.w	r8, r8, #1
  4042a4:	f883 8000 	strb.w	r8, [r3]
  4042a8:	4649      	mov	r1, r9
  4042aa:	4620      	mov	r0, r4
  4042ac:	f001 fe96 	bl	405fdc <_Bfree>
  4042b0:	2200      	movs	r2, #0
  4042b2:	9b02      	ldr	r3, [sp, #8]
  4042b4:	702a      	strb	r2, [r5, #0]
  4042b6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4042b8:	3301      	adds	r3, #1
  4042ba:	6013      	str	r3, [r2, #0]
  4042bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4042be:	2b00      	cmp	r3, #0
  4042c0:	f000 839e 	beq.w	404a00 <_dtoa_r+0xae0>
  4042c4:	9804      	ldr	r0, [sp, #16]
  4042c6:	601d      	str	r5, [r3, #0]
  4042c8:	b01b      	add	sp, #108	; 0x6c
  4042ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4042ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4042d0:	2a00      	cmp	r2, #0
  4042d2:	d03e      	beq.n	404352 <_dtoa_r+0x432>
  4042d4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4042d6:	2a01      	cmp	r2, #1
  4042d8:	f340 8311 	ble.w	4048fe <_dtoa_r+0x9de>
  4042dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4042de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4042e0:	1e5f      	subs	r7, r3, #1
  4042e2:	42ba      	cmp	r2, r7
  4042e4:	f2c0 838f 	blt.w	404a06 <_dtoa_r+0xae6>
  4042e8:	1bd7      	subs	r7, r2, r7
  4042ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4042ec:	2b00      	cmp	r3, #0
  4042ee:	f2c0 848b 	blt.w	404c08 <_dtoa_r+0xce8>
  4042f2:	9d08      	ldr	r5, [sp, #32]
  4042f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4042f6:	9a08      	ldr	r2, [sp, #32]
  4042f8:	441a      	add	r2, r3
  4042fa:	9208      	str	r2, [sp, #32]
  4042fc:	9a06      	ldr	r2, [sp, #24]
  4042fe:	2101      	movs	r1, #1
  404300:	441a      	add	r2, r3
  404302:	4620      	mov	r0, r4
  404304:	9206      	str	r2, [sp, #24]
  404306:	f001 ff03 	bl	406110 <__i2b>
  40430a:	4606      	mov	r6, r0
  40430c:	e024      	b.n	404358 <_dtoa_r+0x438>
  40430e:	2301      	movs	r3, #1
  404310:	930e      	str	r3, [sp, #56]	; 0x38
  404312:	e6af      	b.n	404074 <_dtoa_r+0x154>
  404314:	9a08      	ldr	r2, [sp, #32]
  404316:	9b02      	ldr	r3, [sp, #8]
  404318:	1ad2      	subs	r2, r2, r3
  40431a:	425b      	negs	r3, r3
  40431c:	930c      	str	r3, [sp, #48]	; 0x30
  40431e:	2300      	movs	r3, #0
  404320:	9208      	str	r2, [sp, #32]
  404322:	930d      	str	r3, [sp, #52]	; 0x34
  404324:	e6b8      	b.n	404098 <_dtoa_r+0x178>
  404326:	f1c7 0301 	rsb	r3, r7, #1
  40432a:	9308      	str	r3, [sp, #32]
  40432c:	2300      	movs	r3, #0
  40432e:	9306      	str	r3, [sp, #24]
  404330:	e6a7      	b.n	404082 <_dtoa_r+0x162>
  404332:	9d02      	ldr	r5, [sp, #8]
  404334:	4628      	mov	r0, r5
  404336:	f7fd fad3 	bl	4018e0 <__aeabi_i2d>
  40433a:	4602      	mov	r2, r0
  40433c:	460b      	mov	r3, r1
  40433e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  404342:	f002 fe03 	bl	406f4c <__aeabi_dcmpeq>
  404346:	2800      	cmp	r0, #0
  404348:	f47f ae80 	bne.w	40404c <_dtoa_r+0x12c>
  40434c:	1e6b      	subs	r3, r5, #1
  40434e:	9302      	str	r3, [sp, #8]
  404350:	e67c      	b.n	40404c <_dtoa_r+0x12c>
  404352:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404354:	9d08      	ldr	r5, [sp, #32]
  404356:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  404358:	2d00      	cmp	r5, #0
  40435a:	dd0c      	ble.n	404376 <_dtoa_r+0x456>
  40435c:	9906      	ldr	r1, [sp, #24]
  40435e:	2900      	cmp	r1, #0
  404360:	460b      	mov	r3, r1
  404362:	dd08      	ble.n	404376 <_dtoa_r+0x456>
  404364:	42a9      	cmp	r1, r5
  404366:	9a08      	ldr	r2, [sp, #32]
  404368:	bfa8      	it	ge
  40436a:	462b      	movge	r3, r5
  40436c:	1ad2      	subs	r2, r2, r3
  40436e:	1aed      	subs	r5, r5, r3
  404370:	1acb      	subs	r3, r1, r3
  404372:	9208      	str	r2, [sp, #32]
  404374:	9306      	str	r3, [sp, #24]
  404376:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404378:	b1d3      	cbz	r3, 4043b0 <_dtoa_r+0x490>
  40437a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40437c:	2b00      	cmp	r3, #0
  40437e:	f000 82b7 	beq.w	4048f0 <_dtoa_r+0x9d0>
  404382:	2f00      	cmp	r7, #0
  404384:	dd10      	ble.n	4043a8 <_dtoa_r+0x488>
  404386:	4631      	mov	r1, r6
  404388:	463a      	mov	r2, r7
  40438a:	4620      	mov	r0, r4
  40438c:	f001 ff5c 	bl	406248 <__pow5mult>
  404390:	464a      	mov	r2, r9
  404392:	4601      	mov	r1, r0
  404394:	4606      	mov	r6, r0
  404396:	4620      	mov	r0, r4
  404398:	f001 fec4 	bl	406124 <__multiply>
  40439c:	4649      	mov	r1, r9
  40439e:	4680      	mov	r8, r0
  4043a0:	4620      	mov	r0, r4
  4043a2:	f001 fe1b 	bl	405fdc <_Bfree>
  4043a6:	46c1      	mov	r9, r8
  4043a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4043aa:	1bda      	subs	r2, r3, r7
  4043ac:	f040 82a1 	bne.w	4048f2 <_dtoa_r+0x9d2>
  4043b0:	2101      	movs	r1, #1
  4043b2:	4620      	mov	r0, r4
  4043b4:	f001 feac 	bl	406110 <__i2b>
  4043b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4043ba:	2b00      	cmp	r3, #0
  4043bc:	4680      	mov	r8, r0
  4043be:	dd1c      	ble.n	4043fa <_dtoa_r+0x4da>
  4043c0:	4601      	mov	r1, r0
  4043c2:	461a      	mov	r2, r3
  4043c4:	4620      	mov	r0, r4
  4043c6:	f001 ff3f 	bl	406248 <__pow5mult>
  4043ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4043cc:	2b01      	cmp	r3, #1
  4043ce:	4680      	mov	r8, r0
  4043d0:	f340 8254 	ble.w	40487c <_dtoa_r+0x95c>
  4043d4:	2300      	movs	r3, #0
  4043d6:	930c      	str	r3, [sp, #48]	; 0x30
  4043d8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4043dc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4043e0:	6918      	ldr	r0, [r3, #16]
  4043e2:	f001 fe45 	bl	406070 <__hi0bits>
  4043e6:	f1c0 0020 	rsb	r0, r0, #32
  4043ea:	e010      	b.n	40440e <_dtoa_r+0x4ee>
  4043ec:	f1c3 0520 	rsb	r5, r3, #32
  4043f0:	fa0a f005 	lsl.w	r0, sl, r5
  4043f4:	e674      	b.n	4040e0 <_dtoa_r+0x1c0>
  4043f6:	900e      	str	r0, [sp, #56]	; 0x38
  4043f8:	e63c      	b.n	404074 <_dtoa_r+0x154>
  4043fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4043fc:	2b01      	cmp	r3, #1
  4043fe:	f340 8287 	ble.w	404910 <_dtoa_r+0x9f0>
  404402:	2300      	movs	r3, #0
  404404:	930c      	str	r3, [sp, #48]	; 0x30
  404406:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404408:	2001      	movs	r0, #1
  40440a:	2b00      	cmp	r3, #0
  40440c:	d1e4      	bne.n	4043d8 <_dtoa_r+0x4b8>
  40440e:	9a06      	ldr	r2, [sp, #24]
  404410:	4410      	add	r0, r2
  404412:	f010 001f 	ands.w	r0, r0, #31
  404416:	f000 80a1 	beq.w	40455c <_dtoa_r+0x63c>
  40441a:	f1c0 0320 	rsb	r3, r0, #32
  40441e:	2b04      	cmp	r3, #4
  404420:	f340 849e 	ble.w	404d60 <_dtoa_r+0xe40>
  404424:	9b08      	ldr	r3, [sp, #32]
  404426:	f1c0 001c 	rsb	r0, r0, #28
  40442a:	4403      	add	r3, r0
  40442c:	9308      	str	r3, [sp, #32]
  40442e:	4613      	mov	r3, r2
  404430:	4403      	add	r3, r0
  404432:	4405      	add	r5, r0
  404434:	9306      	str	r3, [sp, #24]
  404436:	9b08      	ldr	r3, [sp, #32]
  404438:	2b00      	cmp	r3, #0
  40443a:	dd05      	ble.n	404448 <_dtoa_r+0x528>
  40443c:	4649      	mov	r1, r9
  40443e:	461a      	mov	r2, r3
  404440:	4620      	mov	r0, r4
  404442:	f001 ff51 	bl	4062e8 <__lshift>
  404446:	4681      	mov	r9, r0
  404448:	9b06      	ldr	r3, [sp, #24]
  40444a:	2b00      	cmp	r3, #0
  40444c:	dd05      	ble.n	40445a <_dtoa_r+0x53a>
  40444e:	4641      	mov	r1, r8
  404450:	461a      	mov	r2, r3
  404452:	4620      	mov	r0, r4
  404454:	f001 ff48 	bl	4062e8 <__lshift>
  404458:	4680      	mov	r8, r0
  40445a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40445c:	2b00      	cmp	r3, #0
  40445e:	f040 8086 	bne.w	40456e <_dtoa_r+0x64e>
  404462:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404464:	2b00      	cmp	r3, #0
  404466:	f340 8266 	ble.w	404936 <_dtoa_r+0xa16>
  40446a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40446c:	2b00      	cmp	r3, #0
  40446e:	f000 8098 	beq.w	4045a2 <_dtoa_r+0x682>
  404472:	2d00      	cmp	r5, #0
  404474:	dd05      	ble.n	404482 <_dtoa_r+0x562>
  404476:	4631      	mov	r1, r6
  404478:	462a      	mov	r2, r5
  40447a:	4620      	mov	r0, r4
  40447c:	f001 ff34 	bl	4062e8 <__lshift>
  404480:	4606      	mov	r6, r0
  404482:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404484:	2b00      	cmp	r3, #0
  404486:	f040 8337 	bne.w	404af8 <_dtoa_r+0xbd8>
  40448a:	9606      	str	r6, [sp, #24]
  40448c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40448e:	9a04      	ldr	r2, [sp, #16]
  404490:	f8dd b018 	ldr.w	fp, [sp, #24]
  404494:	3b01      	subs	r3, #1
  404496:	18d3      	adds	r3, r2, r3
  404498:	930b      	str	r3, [sp, #44]	; 0x2c
  40449a:	f00a 0301 	and.w	r3, sl, #1
  40449e:	930c      	str	r3, [sp, #48]	; 0x30
  4044a0:	4617      	mov	r7, r2
  4044a2:	46c2      	mov	sl, r8
  4044a4:	4651      	mov	r1, sl
  4044a6:	4648      	mov	r0, r9
  4044a8:	f7ff fca4 	bl	403df4 <quorem>
  4044ac:	4631      	mov	r1, r6
  4044ae:	4605      	mov	r5, r0
  4044b0:	4648      	mov	r0, r9
  4044b2:	f001 ff6b 	bl	40638c <__mcmp>
  4044b6:	465a      	mov	r2, fp
  4044b8:	900a      	str	r0, [sp, #40]	; 0x28
  4044ba:	4651      	mov	r1, sl
  4044bc:	4620      	mov	r0, r4
  4044be:	f001 ff81 	bl	4063c4 <__mdiff>
  4044c2:	68c2      	ldr	r2, [r0, #12]
  4044c4:	4680      	mov	r8, r0
  4044c6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4044ca:	2a00      	cmp	r2, #0
  4044cc:	f040 822b 	bne.w	404926 <_dtoa_r+0xa06>
  4044d0:	4601      	mov	r1, r0
  4044d2:	4648      	mov	r0, r9
  4044d4:	9308      	str	r3, [sp, #32]
  4044d6:	f001 ff59 	bl	40638c <__mcmp>
  4044da:	4641      	mov	r1, r8
  4044dc:	9006      	str	r0, [sp, #24]
  4044de:	4620      	mov	r0, r4
  4044e0:	f001 fd7c 	bl	405fdc <_Bfree>
  4044e4:	9a06      	ldr	r2, [sp, #24]
  4044e6:	9b08      	ldr	r3, [sp, #32]
  4044e8:	b932      	cbnz	r2, 4044f8 <_dtoa_r+0x5d8>
  4044ea:	9924      	ldr	r1, [sp, #144]	; 0x90
  4044ec:	b921      	cbnz	r1, 4044f8 <_dtoa_r+0x5d8>
  4044ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4044f0:	2a00      	cmp	r2, #0
  4044f2:	f000 83ef 	beq.w	404cd4 <_dtoa_r+0xdb4>
  4044f6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4044f8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4044fa:	2900      	cmp	r1, #0
  4044fc:	f2c0 829f 	blt.w	404a3e <_dtoa_r+0xb1e>
  404500:	d105      	bne.n	40450e <_dtoa_r+0x5ee>
  404502:	9924      	ldr	r1, [sp, #144]	; 0x90
  404504:	b919      	cbnz	r1, 40450e <_dtoa_r+0x5ee>
  404506:	990c      	ldr	r1, [sp, #48]	; 0x30
  404508:	2900      	cmp	r1, #0
  40450a:	f000 8298 	beq.w	404a3e <_dtoa_r+0xb1e>
  40450e:	2a00      	cmp	r2, #0
  404510:	f300 8306 	bgt.w	404b20 <_dtoa_r+0xc00>
  404514:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404516:	703b      	strb	r3, [r7, #0]
  404518:	f107 0801 	add.w	r8, r7, #1
  40451c:	4297      	cmp	r7, r2
  40451e:	4645      	mov	r5, r8
  404520:	f000 830c 	beq.w	404b3c <_dtoa_r+0xc1c>
  404524:	4649      	mov	r1, r9
  404526:	2300      	movs	r3, #0
  404528:	220a      	movs	r2, #10
  40452a:	4620      	mov	r0, r4
  40452c:	f001 fd60 	bl	405ff0 <__multadd>
  404530:	455e      	cmp	r6, fp
  404532:	4681      	mov	r9, r0
  404534:	4631      	mov	r1, r6
  404536:	f04f 0300 	mov.w	r3, #0
  40453a:	f04f 020a 	mov.w	r2, #10
  40453e:	4620      	mov	r0, r4
  404540:	f000 81eb 	beq.w	40491a <_dtoa_r+0x9fa>
  404544:	f001 fd54 	bl	405ff0 <__multadd>
  404548:	4659      	mov	r1, fp
  40454a:	4606      	mov	r6, r0
  40454c:	2300      	movs	r3, #0
  40454e:	220a      	movs	r2, #10
  404550:	4620      	mov	r0, r4
  404552:	f001 fd4d 	bl	405ff0 <__multadd>
  404556:	4647      	mov	r7, r8
  404558:	4683      	mov	fp, r0
  40455a:	e7a3      	b.n	4044a4 <_dtoa_r+0x584>
  40455c:	201c      	movs	r0, #28
  40455e:	9b08      	ldr	r3, [sp, #32]
  404560:	4403      	add	r3, r0
  404562:	9308      	str	r3, [sp, #32]
  404564:	9b06      	ldr	r3, [sp, #24]
  404566:	4403      	add	r3, r0
  404568:	4405      	add	r5, r0
  40456a:	9306      	str	r3, [sp, #24]
  40456c:	e763      	b.n	404436 <_dtoa_r+0x516>
  40456e:	4641      	mov	r1, r8
  404570:	4648      	mov	r0, r9
  404572:	f001 ff0b 	bl	40638c <__mcmp>
  404576:	2800      	cmp	r0, #0
  404578:	f6bf af73 	bge.w	404462 <_dtoa_r+0x542>
  40457c:	9f02      	ldr	r7, [sp, #8]
  40457e:	4649      	mov	r1, r9
  404580:	2300      	movs	r3, #0
  404582:	220a      	movs	r2, #10
  404584:	4620      	mov	r0, r4
  404586:	3f01      	subs	r7, #1
  404588:	9702      	str	r7, [sp, #8]
  40458a:	f001 fd31 	bl	405ff0 <__multadd>
  40458e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404590:	4681      	mov	r9, r0
  404592:	2b00      	cmp	r3, #0
  404594:	f040 83b6 	bne.w	404d04 <_dtoa_r+0xde4>
  404598:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40459a:	2b00      	cmp	r3, #0
  40459c:	f340 83bf 	ble.w	404d1e <_dtoa_r+0xdfe>
  4045a0:	930a      	str	r3, [sp, #40]	; 0x28
  4045a2:	f8dd b010 	ldr.w	fp, [sp, #16]
  4045a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4045a8:	465d      	mov	r5, fp
  4045aa:	e002      	b.n	4045b2 <_dtoa_r+0x692>
  4045ac:	f001 fd20 	bl	405ff0 <__multadd>
  4045b0:	4681      	mov	r9, r0
  4045b2:	4641      	mov	r1, r8
  4045b4:	4648      	mov	r0, r9
  4045b6:	f7ff fc1d 	bl	403df4 <quorem>
  4045ba:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4045be:	f805 ab01 	strb.w	sl, [r5], #1
  4045c2:	eba5 030b 	sub.w	r3, r5, fp
  4045c6:	42bb      	cmp	r3, r7
  4045c8:	f04f 020a 	mov.w	r2, #10
  4045cc:	f04f 0300 	mov.w	r3, #0
  4045d0:	4649      	mov	r1, r9
  4045d2:	4620      	mov	r0, r4
  4045d4:	dbea      	blt.n	4045ac <_dtoa_r+0x68c>
  4045d6:	9b04      	ldr	r3, [sp, #16]
  4045d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4045da:	2a01      	cmp	r2, #1
  4045dc:	bfac      	ite	ge
  4045de:	189b      	addge	r3, r3, r2
  4045e0:	3301      	addlt	r3, #1
  4045e2:	461d      	mov	r5, r3
  4045e4:	f04f 0b00 	mov.w	fp, #0
  4045e8:	4649      	mov	r1, r9
  4045ea:	2201      	movs	r2, #1
  4045ec:	4620      	mov	r0, r4
  4045ee:	f001 fe7b 	bl	4062e8 <__lshift>
  4045f2:	4641      	mov	r1, r8
  4045f4:	4681      	mov	r9, r0
  4045f6:	f001 fec9 	bl	40638c <__mcmp>
  4045fa:	2800      	cmp	r0, #0
  4045fc:	f340 823d 	ble.w	404a7a <_dtoa_r+0xb5a>
  404600:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  404604:	9904      	ldr	r1, [sp, #16]
  404606:	1e6b      	subs	r3, r5, #1
  404608:	e004      	b.n	404614 <_dtoa_r+0x6f4>
  40460a:	428b      	cmp	r3, r1
  40460c:	f000 81ae 	beq.w	40496c <_dtoa_r+0xa4c>
  404610:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  404614:	2a39      	cmp	r2, #57	; 0x39
  404616:	f103 0501 	add.w	r5, r3, #1
  40461a:	d0f6      	beq.n	40460a <_dtoa_r+0x6ea>
  40461c:	3201      	adds	r2, #1
  40461e:	701a      	strb	r2, [r3, #0]
  404620:	4641      	mov	r1, r8
  404622:	4620      	mov	r0, r4
  404624:	f001 fcda 	bl	405fdc <_Bfree>
  404628:	2e00      	cmp	r6, #0
  40462a:	f43f ae3d 	beq.w	4042a8 <_dtoa_r+0x388>
  40462e:	f1bb 0f00 	cmp.w	fp, #0
  404632:	d005      	beq.n	404640 <_dtoa_r+0x720>
  404634:	45b3      	cmp	fp, r6
  404636:	d003      	beq.n	404640 <_dtoa_r+0x720>
  404638:	4659      	mov	r1, fp
  40463a:	4620      	mov	r0, r4
  40463c:	f001 fcce 	bl	405fdc <_Bfree>
  404640:	4631      	mov	r1, r6
  404642:	4620      	mov	r0, r4
  404644:	f001 fcca 	bl	405fdc <_Bfree>
  404648:	e62e      	b.n	4042a8 <_dtoa_r+0x388>
  40464a:	2300      	movs	r3, #0
  40464c:	930b      	str	r3, [sp, #44]	; 0x2c
  40464e:	9b02      	ldr	r3, [sp, #8]
  404650:	9a25      	ldr	r2, [sp, #148]	; 0x94
  404652:	4413      	add	r3, r2
  404654:	930f      	str	r3, [sp, #60]	; 0x3c
  404656:	3301      	adds	r3, #1
  404658:	2b01      	cmp	r3, #1
  40465a:	461f      	mov	r7, r3
  40465c:	461e      	mov	r6, r3
  40465e:	930a      	str	r3, [sp, #40]	; 0x28
  404660:	bfb8      	it	lt
  404662:	2701      	movlt	r7, #1
  404664:	2100      	movs	r1, #0
  404666:	2f17      	cmp	r7, #23
  404668:	6461      	str	r1, [r4, #68]	; 0x44
  40466a:	d90a      	bls.n	404682 <_dtoa_r+0x762>
  40466c:	2201      	movs	r2, #1
  40466e:	2304      	movs	r3, #4
  404670:	005b      	lsls	r3, r3, #1
  404672:	f103 0014 	add.w	r0, r3, #20
  404676:	4287      	cmp	r7, r0
  404678:	4611      	mov	r1, r2
  40467a:	f102 0201 	add.w	r2, r2, #1
  40467e:	d2f7      	bcs.n	404670 <_dtoa_r+0x750>
  404680:	6461      	str	r1, [r4, #68]	; 0x44
  404682:	4620      	mov	r0, r4
  404684:	f001 fc84 	bl	405f90 <_Balloc>
  404688:	2e0e      	cmp	r6, #14
  40468a:	9004      	str	r0, [sp, #16]
  40468c:	6420      	str	r0, [r4, #64]	; 0x40
  40468e:	f63f ad41 	bhi.w	404114 <_dtoa_r+0x1f4>
  404692:	2d00      	cmp	r5, #0
  404694:	f43f ad3e 	beq.w	404114 <_dtoa_r+0x1f4>
  404698:	9902      	ldr	r1, [sp, #8]
  40469a:	2900      	cmp	r1, #0
  40469c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4046a0:	f340 8202 	ble.w	404aa8 <_dtoa_r+0xb88>
  4046a4:	4bb8      	ldr	r3, [pc, #736]	; (404988 <_dtoa_r+0xa68>)
  4046a6:	f001 020f 	and.w	r2, r1, #15
  4046aa:	110d      	asrs	r5, r1, #4
  4046ac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4046b0:	06e9      	lsls	r1, r5, #27
  4046b2:	e9d3 6700 	ldrd	r6, r7, [r3]
  4046b6:	f140 81ae 	bpl.w	404a16 <_dtoa_r+0xaf6>
  4046ba:	4bb4      	ldr	r3, [pc, #720]	; (40498c <_dtoa_r+0xa6c>)
  4046bc:	4650      	mov	r0, sl
  4046be:	4659      	mov	r1, fp
  4046c0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4046c4:	f7fd fa9c 	bl	401c00 <__aeabi_ddiv>
  4046c8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4046cc:	f005 050f 	and.w	r5, r5, #15
  4046d0:	f04f 0a03 	mov.w	sl, #3
  4046d4:	b18d      	cbz	r5, 4046fa <_dtoa_r+0x7da>
  4046d6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 40498c <_dtoa_r+0xa6c>
  4046da:	07ea      	lsls	r2, r5, #31
  4046dc:	d509      	bpl.n	4046f2 <_dtoa_r+0x7d2>
  4046de:	4630      	mov	r0, r6
  4046e0:	4639      	mov	r1, r7
  4046e2:	e9d8 2300 	ldrd	r2, r3, [r8]
  4046e6:	f7fd f961 	bl	4019ac <__aeabi_dmul>
  4046ea:	f10a 0a01 	add.w	sl, sl, #1
  4046ee:	4606      	mov	r6, r0
  4046f0:	460f      	mov	r7, r1
  4046f2:	106d      	asrs	r5, r5, #1
  4046f4:	f108 0808 	add.w	r8, r8, #8
  4046f8:	d1ef      	bne.n	4046da <_dtoa_r+0x7ba>
  4046fa:	463b      	mov	r3, r7
  4046fc:	4632      	mov	r2, r6
  4046fe:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  404702:	f7fd fa7d 	bl	401c00 <__aeabi_ddiv>
  404706:	4607      	mov	r7, r0
  404708:	4688      	mov	r8, r1
  40470a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40470c:	b143      	cbz	r3, 404720 <_dtoa_r+0x800>
  40470e:	2200      	movs	r2, #0
  404710:	4b9f      	ldr	r3, [pc, #636]	; (404990 <_dtoa_r+0xa70>)
  404712:	4638      	mov	r0, r7
  404714:	4641      	mov	r1, r8
  404716:	f002 fc23 	bl	406f60 <__aeabi_dcmplt>
  40471a:	2800      	cmp	r0, #0
  40471c:	f040 8286 	bne.w	404c2c <_dtoa_r+0xd0c>
  404720:	4650      	mov	r0, sl
  404722:	f7fd f8dd 	bl	4018e0 <__aeabi_i2d>
  404726:	463a      	mov	r2, r7
  404728:	4643      	mov	r3, r8
  40472a:	f7fd f93f 	bl	4019ac <__aeabi_dmul>
  40472e:	4b99      	ldr	r3, [pc, #612]	; (404994 <_dtoa_r+0xa74>)
  404730:	2200      	movs	r2, #0
  404732:	f7fc ff89 	bl	401648 <__adddf3>
  404736:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404738:	4605      	mov	r5, r0
  40473a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40473e:	2b00      	cmp	r3, #0
  404740:	f000 813e 	beq.w	4049c0 <_dtoa_r+0xaa0>
  404744:	9b02      	ldr	r3, [sp, #8]
  404746:	9315      	str	r3, [sp, #84]	; 0x54
  404748:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40474a:	9312      	str	r3, [sp, #72]	; 0x48
  40474c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40474e:	2b00      	cmp	r3, #0
  404750:	f000 81fa 	beq.w	404b48 <_dtoa_r+0xc28>
  404754:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404756:	4b8c      	ldr	r3, [pc, #560]	; (404988 <_dtoa_r+0xa68>)
  404758:	498f      	ldr	r1, [pc, #572]	; (404998 <_dtoa_r+0xa78>)
  40475a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40475e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  404762:	2000      	movs	r0, #0
  404764:	f7fd fa4c 	bl	401c00 <__aeabi_ddiv>
  404768:	462a      	mov	r2, r5
  40476a:	4633      	mov	r3, r6
  40476c:	f7fc ff6a 	bl	401644 <__aeabi_dsub>
  404770:	4682      	mov	sl, r0
  404772:	468b      	mov	fp, r1
  404774:	4638      	mov	r0, r7
  404776:	4641      	mov	r1, r8
  404778:	f002 fc30 	bl	406fdc <__aeabi_d2iz>
  40477c:	4605      	mov	r5, r0
  40477e:	f7fd f8af 	bl	4018e0 <__aeabi_i2d>
  404782:	4602      	mov	r2, r0
  404784:	460b      	mov	r3, r1
  404786:	4638      	mov	r0, r7
  404788:	4641      	mov	r1, r8
  40478a:	f7fc ff5b 	bl	401644 <__aeabi_dsub>
  40478e:	3530      	adds	r5, #48	; 0x30
  404790:	fa5f f885 	uxtb.w	r8, r5
  404794:	9d04      	ldr	r5, [sp, #16]
  404796:	4606      	mov	r6, r0
  404798:	460f      	mov	r7, r1
  40479a:	f885 8000 	strb.w	r8, [r5]
  40479e:	4602      	mov	r2, r0
  4047a0:	460b      	mov	r3, r1
  4047a2:	4650      	mov	r0, sl
  4047a4:	4659      	mov	r1, fp
  4047a6:	3501      	adds	r5, #1
  4047a8:	f002 fbf8 	bl	406f9c <__aeabi_dcmpgt>
  4047ac:	2800      	cmp	r0, #0
  4047ae:	d154      	bne.n	40485a <_dtoa_r+0x93a>
  4047b0:	4632      	mov	r2, r6
  4047b2:	463b      	mov	r3, r7
  4047b4:	2000      	movs	r0, #0
  4047b6:	4976      	ldr	r1, [pc, #472]	; (404990 <_dtoa_r+0xa70>)
  4047b8:	f7fc ff44 	bl	401644 <__aeabi_dsub>
  4047bc:	4602      	mov	r2, r0
  4047be:	460b      	mov	r3, r1
  4047c0:	4650      	mov	r0, sl
  4047c2:	4659      	mov	r1, fp
  4047c4:	f002 fbea 	bl	406f9c <__aeabi_dcmpgt>
  4047c8:	2800      	cmp	r0, #0
  4047ca:	f040 8270 	bne.w	404cae <_dtoa_r+0xd8e>
  4047ce:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4047d0:	2a01      	cmp	r2, #1
  4047d2:	f000 8111 	beq.w	4049f8 <_dtoa_r+0xad8>
  4047d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4047d8:	9a04      	ldr	r2, [sp, #16]
  4047da:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4047de:	4413      	add	r3, r2
  4047e0:	4699      	mov	r9, r3
  4047e2:	e00d      	b.n	404800 <_dtoa_r+0x8e0>
  4047e4:	2000      	movs	r0, #0
  4047e6:	496a      	ldr	r1, [pc, #424]	; (404990 <_dtoa_r+0xa70>)
  4047e8:	f7fc ff2c 	bl	401644 <__aeabi_dsub>
  4047ec:	4652      	mov	r2, sl
  4047ee:	465b      	mov	r3, fp
  4047f0:	f002 fbb6 	bl	406f60 <__aeabi_dcmplt>
  4047f4:	2800      	cmp	r0, #0
  4047f6:	f040 8258 	bne.w	404caa <_dtoa_r+0xd8a>
  4047fa:	454d      	cmp	r5, r9
  4047fc:	f000 80fa 	beq.w	4049f4 <_dtoa_r+0xad4>
  404800:	4650      	mov	r0, sl
  404802:	4659      	mov	r1, fp
  404804:	2200      	movs	r2, #0
  404806:	4b65      	ldr	r3, [pc, #404]	; (40499c <_dtoa_r+0xa7c>)
  404808:	f7fd f8d0 	bl	4019ac <__aeabi_dmul>
  40480c:	2200      	movs	r2, #0
  40480e:	4b63      	ldr	r3, [pc, #396]	; (40499c <_dtoa_r+0xa7c>)
  404810:	4682      	mov	sl, r0
  404812:	468b      	mov	fp, r1
  404814:	4630      	mov	r0, r6
  404816:	4639      	mov	r1, r7
  404818:	f7fd f8c8 	bl	4019ac <__aeabi_dmul>
  40481c:	460f      	mov	r7, r1
  40481e:	4606      	mov	r6, r0
  404820:	f002 fbdc 	bl	406fdc <__aeabi_d2iz>
  404824:	4680      	mov	r8, r0
  404826:	f7fd f85b 	bl	4018e0 <__aeabi_i2d>
  40482a:	4602      	mov	r2, r0
  40482c:	460b      	mov	r3, r1
  40482e:	4630      	mov	r0, r6
  404830:	4639      	mov	r1, r7
  404832:	f7fc ff07 	bl	401644 <__aeabi_dsub>
  404836:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40483a:	fa5f f888 	uxtb.w	r8, r8
  40483e:	4652      	mov	r2, sl
  404840:	465b      	mov	r3, fp
  404842:	f805 8b01 	strb.w	r8, [r5], #1
  404846:	4606      	mov	r6, r0
  404848:	460f      	mov	r7, r1
  40484a:	f002 fb89 	bl	406f60 <__aeabi_dcmplt>
  40484e:	4632      	mov	r2, r6
  404850:	463b      	mov	r3, r7
  404852:	2800      	cmp	r0, #0
  404854:	d0c6      	beq.n	4047e4 <_dtoa_r+0x8c4>
  404856:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40485a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40485c:	9302      	str	r3, [sp, #8]
  40485e:	e523      	b.n	4042a8 <_dtoa_r+0x388>
  404860:	2300      	movs	r3, #0
  404862:	930b      	str	r3, [sp, #44]	; 0x2c
  404864:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404866:	2b00      	cmp	r3, #0
  404868:	f340 80dc 	ble.w	404a24 <_dtoa_r+0xb04>
  40486c:	461f      	mov	r7, r3
  40486e:	461e      	mov	r6, r3
  404870:	930f      	str	r3, [sp, #60]	; 0x3c
  404872:	930a      	str	r3, [sp, #40]	; 0x28
  404874:	e6f6      	b.n	404664 <_dtoa_r+0x744>
  404876:	2301      	movs	r3, #1
  404878:	930b      	str	r3, [sp, #44]	; 0x2c
  40487a:	e7f3      	b.n	404864 <_dtoa_r+0x944>
  40487c:	f1ba 0f00 	cmp.w	sl, #0
  404880:	f47f ada8 	bne.w	4043d4 <_dtoa_r+0x4b4>
  404884:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404888:	2b00      	cmp	r3, #0
  40488a:	f47f adba 	bne.w	404402 <_dtoa_r+0x4e2>
  40488e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  404892:	0d3f      	lsrs	r7, r7, #20
  404894:	053f      	lsls	r7, r7, #20
  404896:	2f00      	cmp	r7, #0
  404898:	f000 820d 	beq.w	404cb6 <_dtoa_r+0xd96>
  40489c:	9b08      	ldr	r3, [sp, #32]
  40489e:	3301      	adds	r3, #1
  4048a0:	9308      	str	r3, [sp, #32]
  4048a2:	9b06      	ldr	r3, [sp, #24]
  4048a4:	3301      	adds	r3, #1
  4048a6:	9306      	str	r3, [sp, #24]
  4048a8:	2301      	movs	r3, #1
  4048aa:	930c      	str	r3, [sp, #48]	; 0x30
  4048ac:	e5ab      	b.n	404406 <_dtoa_r+0x4e6>
  4048ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4048b0:	2b00      	cmp	r3, #0
  4048b2:	f73f ac42 	bgt.w	40413a <_dtoa_r+0x21a>
  4048b6:	f040 8221 	bne.w	404cfc <_dtoa_r+0xddc>
  4048ba:	2200      	movs	r2, #0
  4048bc:	4b38      	ldr	r3, [pc, #224]	; (4049a0 <_dtoa_r+0xa80>)
  4048be:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4048c2:	f7fd f873 	bl	4019ac <__aeabi_dmul>
  4048c6:	4652      	mov	r2, sl
  4048c8:	465b      	mov	r3, fp
  4048ca:	f002 fb5d 	bl	406f88 <__aeabi_dcmpge>
  4048ce:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4048d2:	4646      	mov	r6, r8
  4048d4:	2800      	cmp	r0, #0
  4048d6:	d041      	beq.n	40495c <_dtoa_r+0xa3c>
  4048d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4048da:	9d04      	ldr	r5, [sp, #16]
  4048dc:	43db      	mvns	r3, r3
  4048de:	9302      	str	r3, [sp, #8]
  4048e0:	4641      	mov	r1, r8
  4048e2:	4620      	mov	r0, r4
  4048e4:	f001 fb7a 	bl	405fdc <_Bfree>
  4048e8:	2e00      	cmp	r6, #0
  4048ea:	f43f acdd 	beq.w	4042a8 <_dtoa_r+0x388>
  4048ee:	e6a7      	b.n	404640 <_dtoa_r+0x720>
  4048f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4048f2:	4649      	mov	r1, r9
  4048f4:	4620      	mov	r0, r4
  4048f6:	f001 fca7 	bl	406248 <__pow5mult>
  4048fa:	4681      	mov	r9, r0
  4048fc:	e558      	b.n	4043b0 <_dtoa_r+0x490>
  4048fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404900:	2a00      	cmp	r2, #0
  404902:	f000 8187 	beq.w	404c14 <_dtoa_r+0xcf4>
  404906:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40490a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40490c:	9d08      	ldr	r5, [sp, #32]
  40490e:	e4f2      	b.n	4042f6 <_dtoa_r+0x3d6>
  404910:	f1ba 0f00 	cmp.w	sl, #0
  404914:	f47f ad75 	bne.w	404402 <_dtoa_r+0x4e2>
  404918:	e7b4      	b.n	404884 <_dtoa_r+0x964>
  40491a:	f001 fb69 	bl	405ff0 <__multadd>
  40491e:	4647      	mov	r7, r8
  404920:	4606      	mov	r6, r0
  404922:	4683      	mov	fp, r0
  404924:	e5be      	b.n	4044a4 <_dtoa_r+0x584>
  404926:	4601      	mov	r1, r0
  404928:	4620      	mov	r0, r4
  40492a:	9306      	str	r3, [sp, #24]
  40492c:	f001 fb56 	bl	405fdc <_Bfree>
  404930:	2201      	movs	r2, #1
  404932:	9b06      	ldr	r3, [sp, #24]
  404934:	e5e0      	b.n	4044f8 <_dtoa_r+0x5d8>
  404936:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404938:	2b02      	cmp	r3, #2
  40493a:	f77f ad96 	ble.w	40446a <_dtoa_r+0x54a>
  40493e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404940:	2b00      	cmp	r3, #0
  404942:	d1c9      	bne.n	4048d8 <_dtoa_r+0x9b8>
  404944:	4641      	mov	r1, r8
  404946:	2205      	movs	r2, #5
  404948:	4620      	mov	r0, r4
  40494a:	f001 fb51 	bl	405ff0 <__multadd>
  40494e:	4601      	mov	r1, r0
  404950:	4680      	mov	r8, r0
  404952:	4648      	mov	r0, r9
  404954:	f001 fd1a 	bl	40638c <__mcmp>
  404958:	2800      	cmp	r0, #0
  40495a:	ddbd      	ble.n	4048d8 <_dtoa_r+0x9b8>
  40495c:	9a02      	ldr	r2, [sp, #8]
  40495e:	9904      	ldr	r1, [sp, #16]
  404960:	2331      	movs	r3, #49	; 0x31
  404962:	3201      	adds	r2, #1
  404964:	9202      	str	r2, [sp, #8]
  404966:	700b      	strb	r3, [r1, #0]
  404968:	1c4d      	adds	r5, r1, #1
  40496a:	e7b9      	b.n	4048e0 <_dtoa_r+0x9c0>
  40496c:	9a02      	ldr	r2, [sp, #8]
  40496e:	3201      	adds	r2, #1
  404970:	9202      	str	r2, [sp, #8]
  404972:	9a04      	ldr	r2, [sp, #16]
  404974:	2331      	movs	r3, #49	; 0x31
  404976:	7013      	strb	r3, [r2, #0]
  404978:	e652      	b.n	404620 <_dtoa_r+0x700>
  40497a:	2301      	movs	r3, #1
  40497c:	930b      	str	r3, [sp, #44]	; 0x2c
  40497e:	e666      	b.n	40464e <_dtoa_r+0x72e>
  404980:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  404984:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404986:	e48f      	b.n	4042a8 <_dtoa_r+0x388>
  404988:	004073e8 	.word	0x004073e8
  40498c:	004073c0 	.word	0x004073c0
  404990:	3ff00000 	.word	0x3ff00000
  404994:	401c0000 	.word	0x401c0000
  404998:	3fe00000 	.word	0x3fe00000
  40499c:	40240000 	.word	0x40240000
  4049a0:	40140000 	.word	0x40140000
  4049a4:	4650      	mov	r0, sl
  4049a6:	f7fc ff9b 	bl	4018e0 <__aeabi_i2d>
  4049aa:	463a      	mov	r2, r7
  4049ac:	4643      	mov	r3, r8
  4049ae:	f7fc fffd 	bl	4019ac <__aeabi_dmul>
  4049b2:	2200      	movs	r2, #0
  4049b4:	4bc1      	ldr	r3, [pc, #772]	; (404cbc <_dtoa_r+0xd9c>)
  4049b6:	f7fc fe47 	bl	401648 <__adddf3>
  4049ba:	4605      	mov	r5, r0
  4049bc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4049c0:	4641      	mov	r1, r8
  4049c2:	2200      	movs	r2, #0
  4049c4:	4bbe      	ldr	r3, [pc, #760]	; (404cc0 <_dtoa_r+0xda0>)
  4049c6:	4638      	mov	r0, r7
  4049c8:	f7fc fe3c 	bl	401644 <__aeabi_dsub>
  4049cc:	462a      	mov	r2, r5
  4049ce:	4633      	mov	r3, r6
  4049d0:	4682      	mov	sl, r0
  4049d2:	468b      	mov	fp, r1
  4049d4:	f002 fae2 	bl	406f9c <__aeabi_dcmpgt>
  4049d8:	4680      	mov	r8, r0
  4049da:	2800      	cmp	r0, #0
  4049dc:	f040 8110 	bne.w	404c00 <_dtoa_r+0xce0>
  4049e0:	462a      	mov	r2, r5
  4049e2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4049e6:	4650      	mov	r0, sl
  4049e8:	4659      	mov	r1, fp
  4049ea:	f002 fab9 	bl	406f60 <__aeabi_dcmplt>
  4049ee:	b118      	cbz	r0, 4049f8 <_dtoa_r+0xad8>
  4049f0:	4646      	mov	r6, r8
  4049f2:	e771      	b.n	4048d8 <_dtoa_r+0x9b8>
  4049f4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4049f8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4049fc:	f7ff bb8a 	b.w	404114 <_dtoa_r+0x1f4>
  404a00:	9804      	ldr	r0, [sp, #16]
  404a02:	f7ff babb 	b.w	403f7c <_dtoa_r+0x5c>
  404a06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404a08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404a0a:	970c      	str	r7, [sp, #48]	; 0x30
  404a0c:	1afb      	subs	r3, r7, r3
  404a0e:	441a      	add	r2, r3
  404a10:	920d      	str	r2, [sp, #52]	; 0x34
  404a12:	2700      	movs	r7, #0
  404a14:	e469      	b.n	4042ea <_dtoa_r+0x3ca>
  404a16:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404a1a:	f04f 0a02 	mov.w	sl, #2
  404a1e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  404a22:	e657      	b.n	4046d4 <_dtoa_r+0x7b4>
  404a24:	2100      	movs	r1, #0
  404a26:	2301      	movs	r3, #1
  404a28:	6461      	str	r1, [r4, #68]	; 0x44
  404a2a:	4620      	mov	r0, r4
  404a2c:	9325      	str	r3, [sp, #148]	; 0x94
  404a2e:	f001 faaf 	bl	405f90 <_Balloc>
  404a32:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404a34:	9004      	str	r0, [sp, #16]
  404a36:	6420      	str	r0, [r4, #64]	; 0x40
  404a38:	930a      	str	r3, [sp, #40]	; 0x28
  404a3a:	930f      	str	r3, [sp, #60]	; 0x3c
  404a3c:	e629      	b.n	404692 <_dtoa_r+0x772>
  404a3e:	2a00      	cmp	r2, #0
  404a40:	46d0      	mov	r8, sl
  404a42:	f8cd b018 	str.w	fp, [sp, #24]
  404a46:	469a      	mov	sl, r3
  404a48:	dd11      	ble.n	404a6e <_dtoa_r+0xb4e>
  404a4a:	4649      	mov	r1, r9
  404a4c:	2201      	movs	r2, #1
  404a4e:	4620      	mov	r0, r4
  404a50:	f001 fc4a 	bl	4062e8 <__lshift>
  404a54:	4641      	mov	r1, r8
  404a56:	4681      	mov	r9, r0
  404a58:	f001 fc98 	bl	40638c <__mcmp>
  404a5c:	2800      	cmp	r0, #0
  404a5e:	f340 8146 	ble.w	404cee <_dtoa_r+0xdce>
  404a62:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  404a66:	f000 8106 	beq.w	404c76 <_dtoa_r+0xd56>
  404a6a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404a6e:	46b3      	mov	fp, r6
  404a70:	f887 a000 	strb.w	sl, [r7]
  404a74:	1c7d      	adds	r5, r7, #1
  404a76:	9e06      	ldr	r6, [sp, #24]
  404a78:	e5d2      	b.n	404620 <_dtoa_r+0x700>
  404a7a:	d104      	bne.n	404a86 <_dtoa_r+0xb66>
  404a7c:	f01a 0f01 	tst.w	sl, #1
  404a80:	d001      	beq.n	404a86 <_dtoa_r+0xb66>
  404a82:	e5bd      	b.n	404600 <_dtoa_r+0x6e0>
  404a84:	4615      	mov	r5, r2
  404a86:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404a8a:	2b30      	cmp	r3, #48	; 0x30
  404a8c:	f105 32ff 	add.w	r2, r5, #4294967295
  404a90:	d0f8      	beq.n	404a84 <_dtoa_r+0xb64>
  404a92:	e5c5      	b.n	404620 <_dtoa_r+0x700>
  404a94:	9904      	ldr	r1, [sp, #16]
  404a96:	2230      	movs	r2, #48	; 0x30
  404a98:	700a      	strb	r2, [r1, #0]
  404a9a:	9a02      	ldr	r2, [sp, #8]
  404a9c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404aa0:	3201      	adds	r2, #1
  404aa2:	9202      	str	r2, [sp, #8]
  404aa4:	f7ff bbfc 	b.w	4042a0 <_dtoa_r+0x380>
  404aa8:	f000 80bb 	beq.w	404c22 <_dtoa_r+0xd02>
  404aac:	9b02      	ldr	r3, [sp, #8]
  404aae:	425d      	negs	r5, r3
  404ab0:	4b84      	ldr	r3, [pc, #528]	; (404cc4 <_dtoa_r+0xda4>)
  404ab2:	f005 020f 	and.w	r2, r5, #15
  404ab6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404aba:	e9d3 2300 	ldrd	r2, r3, [r3]
  404abe:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404ac2:	f7fc ff73 	bl	4019ac <__aeabi_dmul>
  404ac6:	112d      	asrs	r5, r5, #4
  404ac8:	4607      	mov	r7, r0
  404aca:	4688      	mov	r8, r1
  404acc:	f000 812c 	beq.w	404d28 <_dtoa_r+0xe08>
  404ad0:	4e7d      	ldr	r6, [pc, #500]	; (404cc8 <_dtoa_r+0xda8>)
  404ad2:	f04f 0a02 	mov.w	sl, #2
  404ad6:	07eb      	lsls	r3, r5, #31
  404ad8:	d509      	bpl.n	404aee <_dtoa_r+0xbce>
  404ada:	4638      	mov	r0, r7
  404adc:	4641      	mov	r1, r8
  404ade:	e9d6 2300 	ldrd	r2, r3, [r6]
  404ae2:	f7fc ff63 	bl	4019ac <__aeabi_dmul>
  404ae6:	f10a 0a01 	add.w	sl, sl, #1
  404aea:	4607      	mov	r7, r0
  404aec:	4688      	mov	r8, r1
  404aee:	106d      	asrs	r5, r5, #1
  404af0:	f106 0608 	add.w	r6, r6, #8
  404af4:	d1ef      	bne.n	404ad6 <_dtoa_r+0xbb6>
  404af6:	e608      	b.n	40470a <_dtoa_r+0x7ea>
  404af8:	6871      	ldr	r1, [r6, #4]
  404afa:	4620      	mov	r0, r4
  404afc:	f001 fa48 	bl	405f90 <_Balloc>
  404b00:	6933      	ldr	r3, [r6, #16]
  404b02:	3302      	adds	r3, #2
  404b04:	009a      	lsls	r2, r3, #2
  404b06:	4605      	mov	r5, r0
  404b08:	f106 010c 	add.w	r1, r6, #12
  404b0c:	300c      	adds	r0, #12
  404b0e:	f7fd fb0f 	bl	402130 <memcpy>
  404b12:	4629      	mov	r1, r5
  404b14:	2201      	movs	r2, #1
  404b16:	4620      	mov	r0, r4
  404b18:	f001 fbe6 	bl	4062e8 <__lshift>
  404b1c:	9006      	str	r0, [sp, #24]
  404b1e:	e4b5      	b.n	40448c <_dtoa_r+0x56c>
  404b20:	2b39      	cmp	r3, #57	; 0x39
  404b22:	f8cd b018 	str.w	fp, [sp, #24]
  404b26:	46d0      	mov	r8, sl
  404b28:	f000 80a5 	beq.w	404c76 <_dtoa_r+0xd56>
  404b2c:	f103 0a01 	add.w	sl, r3, #1
  404b30:	46b3      	mov	fp, r6
  404b32:	f887 a000 	strb.w	sl, [r7]
  404b36:	1c7d      	adds	r5, r7, #1
  404b38:	9e06      	ldr	r6, [sp, #24]
  404b3a:	e571      	b.n	404620 <_dtoa_r+0x700>
  404b3c:	465a      	mov	r2, fp
  404b3e:	46d0      	mov	r8, sl
  404b40:	46b3      	mov	fp, r6
  404b42:	469a      	mov	sl, r3
  404b44:	4616      	mov	r6, r2
  404b46:	e54f      	b.n	4045e8 <_dtoa_r+0x6c8>
  404b48:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404b4a:	495e      	ldr	r1, [pc, #376]	; (404cc4 <_dtoa_r+0xda4>)
  404b4c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404b50:	462a      	mov	r2, r5
  404b52:	4633      	mov	r3, r6
  404b54:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404b58:	f7fc ff28 	bl	4019ac <__aeabi_dmul>
  404b5c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404b60:	4638      	mov	r0, r7
  404b62:	4641      	mov	r1, r8
  404b64:	f002 fa3a 	bl	406fdc <__aeabi_d2iz>
  404b68:	4605      	mov	r5, r0
  404b6a:	f7fc feb9 	bl	4018e0 <__aeabi_i2d>
  404b6e:	460b      	mov	r3, r1
  404b70:	4602      	mov	r2, r0
  404b72:	4641      	mov	r1, r8
  404b74:	4638      	mov	r0, r7
  404b76:	f7fc fd65 	bl	401644 <__aeabi_dsub>
  404b7a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404b7c:	460f      	mov	r7, r1
  404b7e:	9904      	ldr	r1, [sp, #16]
  404b80:	3530      	adds	r5, #48	; 0x30
  404b82:	2b01      	cmp	r3, #1
  404b84:	700d      	strb	r5, [r1, #0]
  404b86:	4606      	mov	r6, r0
  404b88:	f101 0501 	add.w	r5, r1, #1
  404b8c:	d026      	beq.n	404bdc <_dtoa_r+0xcbc>
  404b8e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404b90:	9a04      	ldr	r2, [sp, #16]
  404b92:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404cd0 <_dtoa_r+0xdb0>
  404b96:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404b9a:	4413      	add	r3, r2
  404b9c:	f04f 0a00 	mov.w	sl, #0
  404ba0:	4699      	mov	r9, r3
  404ba2:	4652      	mov	r2, sl
  404ba4:	465b      	mov	r3, fp
  404ba6:	4630      	mov	r0, r6
  404ba8:	4639      	mov	r1, r7
  404baa:	f7fc feff 	bl	4019ac <__aeabi_dmul>
  404bae:	460f      	mov	r7, r1
  404bb0:	4606      	mov	r6, r0
  404bb2:	f002 fa13 	bl	406fdc <__aeabi_d2iz>
  404bb6:	4680      	mov	r8, r0
  404bb8:	f7fc fe92 	bl	4018e0 <__aeabi_i2d>
  404bbc:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404bc0:	4602      	mov	r2, r0
  404bc2:	460b      	mov	r3, r1
  404bc4:	4630      	mov	r0, r6
  404bc6:	4639      	mov	r1, r7
  404bc8:	f7fc fd3c 	bl	401644 <__aeabi_dsub>
  404bcc:	f805 8b01 	strb.w	r8, [r5], #1
  404bd0:	454d      	cmp	r5, r9
  404bd2:	4606      	mov	r6, r0
  404bd4:	460f      	mov	r7, r1
  404bd6:	d1e4      	bne.n	404ba2 <_dtoa_r+0xc82>
  404bd8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404bdc:	4b3b      	ldr	r3, [pc, #236]	; (404ccc <_dtoa_r+0xdac>)
  404bde:	2200      	movs	r2, #0
  404be0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404be4:	f7fc fd30 	bl	401648 <__adddf3>
  404be8:	4632      	mov	r2, r6
  404bea:	463b      	mov	r3, r7
  404bec:	f002 f9b8 	bl	406f60 <__aeabi_dcmplt>
  404bf0:	2800      	cmp	r0, #0
  404bf2:	d046      	beq.n	404c82 <_dtoa_r+0xd62>
  404bf4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404bf6:	9302      	str	r3, [sp, #8]
  404bf8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404bfc:	f7ff bb43 	b.w	404286 <_dtoa_r+0x366>
  404c00:	f04f 0800 	mov.w	r8, #0
  404c04:	4646      	mov	r6, r8
  404c06:	e6a9      	b.n	40495c <_dtoa_r+0xa3c>
  404c08:	9b08      	ldr	r3, [sp, #32]
  404c0a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404c0c:	1a9d      	subs	r5, r3, r2
  404c0e:	2300      	movs	r3, #0
  404c10:	f7ff bb71 	b.w	4042f6 <_dtoa_r+0x3d6>
  404c14:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404c16:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404c18:	9d08      	ldr	r5, [sp, #32]
  404c1a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404c1e:	f7ff bb6a 	b.w	4042f6 <_dtoa_r+0x3d6>
  404c22:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404c26:	f04f 0a02 	mov.w	sl, #2
  404c2a:	e56e      	b.n	40470a <_dtoa_r+0x7ea>
  404c2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404c2e:	2b00      	cmp	r3, #0
  404c30:	f43f aeb8 	beq.w	4049a4 <_dtoa_r+0xa84>
  404c34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404c36:	2b00      	cmp	r3, #0
  404c38:	f77f aede 	ble.w	4049f8 <_dtoa_r+0xad8>
  404c3c:	2200      	movs	r2, #0
  404c3e:	4b24      	ldr	r3, [pc, #144]	; (404cd0 <_dtoa_r+0xdb0>)
  404c40:	4638      	mov	r0, r7
  404c42:	4641      	mov	r1, r8
  404c44:	f7fc feb2 	bl	4019ac <__aeabi_dmul>
  404c48:	4607      	mov	r7, r0
  404c4a:	4688      	mov	r8, r1
  404c4c:	f10a 0001 	add.w	r0, sl, #1
  404c50:	f7fc fe46 	bl	4018e0 <__aeabi_i2d>
  404c54:	463a      	mov	r2, r7
  404c56:	4643      	mov	r3, r8
  404c58:	f7fc fea8 	bl	4019ac <__aeabi_dmul>
  404c5c:	2200      	movs	r2, #0
  404c5e:	4b17      	ldr	r3, [pc, #92]	; (404cbc <_dtoa_r+0xd9c>)
  404c60:	f7fc fcf2 	bl	401648 <__adddf3>
  404c64:	9a02      	ldr	r2, [sp, #8]
  404c66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404c68:	9312      	str	r3, [sp, #72]	; 0x48
  404c6a:	3a01      	subs	r2, #1
  404c6c:	4605      	mov	r5, r0
  404c6e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404c72:	9215      	str	r2, [sp, #84]	; 0x54
  404c74:	e56a      	b.n	40474c <_dtoa_r+0x82c>
  404c76:	2239      	movs	r2, #57	; 0x39
  404c78:	46b3      	mov	fp, r6
  404c7a:	703a      	strb	r2, [r7, #0]
  404c7c:	9e06      	ldr	r6, [sp, #24]
  404c7e:	1c7d      	adds	r5, r7, #1
  404c80:	e4c0      	b.n	404604 <_dtoa_r+0x6e4>
  404c82:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  404c86:	2000      	movs	r0, #0
  404c88:	4910      	ldr	r1, [pc, #64]	; (404ccc <_dtoa_r+0xdac>)
  404c8a:	f7fc fcdb 	bl	401644 <__aeabi_dsub>
  404c8e:	4632      	mov	r2, r6
  404c90:	463b      	mov	r3, r7
  404c92:	f002 f983 	bl	406f9c <__aeabi_dcmpgt>
  404c96:	b908      	cbnz	r0, 404c9c <_dtoa_r+0xd7c>
  404c98:	e6ae      	b.n	4049f8 <_dtoa_r+0xad8>
  404c9a:	4615      	mov	r5, r2
  404c9c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404ca0:	2b30      	cmp	r3, #48	; 0x30
  404ca2:	f105 32ff 	add.w	r2, r5, #4294967295
  404ca6:	d0f8      	beq.n	404c9a <_dtoa_r+0xd7a>
  404ca8:	e5d7      	b.n	40485a <_dtoa_r+0x93a>
  404caa:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404cae:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404cb0:	9302      	str	r3, [sp, #8]
  404cb2:	f7ff bae8 	b.w	404286 <_dtoa_r+0x366>
  404cb6:	970c      	str	r7, [sp, #48]	; 0x30
  404cb8:	f7ff bba5 	b.w	404406 <_dtoa_r+0x4e6>
  404cbc:	401c0000 	.word	0x401c0000
  404cc0:	40140000 	.word	0x40140000
  404cc4:	004073e8 	.word	0x004073e8
  404cc8:	004073c0 	.word	0x004073c0
  404ccc:	3fe00000 	.word	0x3fe00000
  404cd0:	40240000 	.word	0x40240000
  404cd4:	2b39      	cmp	r3, #57	; 0x39
  404cd6:	f8cd b018 	str.w	fp, [sp, #24]
  404cda:	46d0      	mov	r8, sl
  404cdc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404ce0:	469a      	mov	sl, r3
  404ce2:	d0c8      	beq.n	404c76 <_dtoa_r+0xd56>
  404ce4:	f1bb 0f00 	cmp.w	fp, #0
  404ce8:	f73f aebf 	bgt.w	404a6a <_dtoa_r+0xb4a>
  404cec:	e6bf      	b.n	404a6e <_dtoa_r+0xb4e>
  404cee:	f47f aebe 	bne.w	404a6e <_dtoa_r+0xb4e>
  404cf2:	f01a 0f01 	tst.w	sl, #1
  404cf6:	f43f aeba 	beq.w	404a6e <_dtoa_r+0xb4e>
  404cfa:	e6b2      	b.n	404a62 <_dtoa_r+0xb42>
  404cfc:	f04f 0800 	mov.w	r8, #0
  404d00:	4646      	mov	r6, r8
  404d02:	e5e9      	b.n	4048d8 <_dtoa_r+0x9b8>
  404d04:	4631      	mov	r1, r6
  404d06:	2300      	movs	r3, #0
  404d08:	220a      	movs	r2, #10
  404d0a:	4620      	mov	r0, r4
  404d0c:	f001 f970 	bl	405ff0 <__multadd>
  404d10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404d12:	2b00      	cmp	r3, #0
  404d14:	4606      	mov	r6, r0
  404d16:	dd0a      	ble.n	404d2e <_dtoa_r+0xe0e>
  404d18:	930a      	str	r3, [sp, #40]	; 0x28
  404d1a:	f7ff bbaa 	b.w	404472 <_dtoa_r+0x552>
  404d1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404d20:	2b02      	cmp	r3, #2
  404d22:	dc23      	bgt.n	404d6c <_dtoa_r+0xe4c>
  404d24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404d26:	e43b      	b.n	4045a0 <_dtoa_r+0x680>
  404d28:	f04f 0a02 	mov.w	sl, #2
  404d2c:	e4ed      	b.n	40470a <_dtoa_r+0x7ea>
  404d2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404d30:	2b02      	cmp	r3, #2
  404d32:	dc1b      	bgt.n	404d6c <_dtoa_r+0xe4c>
  404d34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404d36:	e7ef      	b.n	404d18 <_dtoa_r+0xdf8>
  404d38:	2500      	movs	r5, #0
  404d3a:	6465      	str	r5, [r4, #68]	; 0x44
  404d3c:	4629      	mov	r1, r5
  404d3e:	4620      	mov	r0, r4
  404d40:	f001 f926 	bl	405f90 <_Balloc>
  404d44:	f04f 33ff 	mov.w	r3, #4294967295
  404d48:	930a      	str	r3, [sp, #40]	; 0x28
  404d4a:	930f      	str	r3, [sp, #60]	; 0x3c
  404d4c:	2301      	movs	r3, #1
  404d4e:	9004      	str	r0, [sp, #16]
  404d50:	9525      	str	r5, [sp, #148]	; 0x94
  404d52:	6420      	str	r0, [r4, #64]	; 0x40
  404d54:	930b      	str	r3, [sp, #44]	; 0x2c
  404d56:	f7ff b9dd 	b.w	404114 <_dtoa_r+0x1f4>
  404d5a:	2501      	movs	r5, #1
  404d5c:	f7ff b9a5 	b.w	4040aa <_dtoa_r+0x18a>
  404d60:	f43f ab69 	beq.w	404436 <_dtoa_r+0x516>
  404d64:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404d68:	f7ff bbf9 	b.w	40455e <_dtoa_r+0x63e>
  404d6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404d6e:	930a      	str	r3, [sp, #40]	; 0x28
  404d70:	e5e5      	b.n	40493e <_dtoa_r+0xa1e>
  404d72:	bf00      	nop

00404d74 <__sflush_r>:
  404d74:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  404d78:	b29a      	uxth	r2, r3
  404d7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404d7e:	460d      	mov	r5, r1
  404d80:	0711      	lsls	r1, r2, #28
  404d82:	4680      	mov	r8, r0
  404d84:	d43a      	bmi.n	404dfc <__sflush_r+0x88>
  404d86:	686a      	ldr	r2, [r5, #4]
  404d88:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  404d8c:	2a00      	cmp	r2, #0
  404d8e:	81ab      	strh	r3, [r5, #12]
  404d90:	dd6f      	ble.n	404e72 <__sflush_r+0xfe>
  404d92:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404d94:	2c00      	cmp	r4, #0
  404d96:	d049      	beq.n	404e2c <__sflush_r+0xb8>
  404d98:	2200      	movs	r2, #0
  404d9a:	b29b      	uxth	r3, r3
  404d9c:	f8d8 6000 	ldr.w	r6, [r8]
  404da0:	f8c8 2000 	str.w	r2, [r8]
  404da4:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  404da8:	d067      	beq.n	404e7a <__sflush_r+0x106>
  404daa:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  404dac:	075f      	lsls	r7, r3, #29
  404dae:	d505      	bpl.n	404dbc <__sflush_r+0x48>
  404db0:	6869      	ldr	r1, [r5, #4]
  404db2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  404db4:	1a52      	subs	r2, r2, r1
  404db6:	b10b      	cbz	r3, 404dbc <__sflush_r+0x48>
  404db8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  404dba:	1ad2      	subs	r2, r2, r3
  404dbc:	2300      	movs	r3, #0
  404dbe:	69e9      	ldr	r1, [r5, #28]
  404dc0:	4640      	mov	r0, r8
  404dc2:	47a0      	blx	r4
  404dc4:	1c44      	adds	r4, r0, #1
  404dc6:	d03c      	beq.n	404e42 <__sflush_r+0xce>
  404dc8:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  404dcc:	692a      	ldr	r2, [r5, #16]
  404dce:	602a      	str	r2, [r5, #0]
  404dd0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  404dd4:	2200      	movs	r2, #0
  404dd6:	81ab      	strh	r3, [r5, #12]
  404dd8:	04db      	lsls	r3, r3, #19
  404dda:	606a      	str	r2, [r5, #4]
  404ddc:	d447      	bmi.n	404e6e <__sflush_r+0xfa>
  404dde:	6b29      	ldr	r1, [r5, #48]	; 0x30
  404de0:	f8c8 6000 	str.w	r6, [r8]
  404de4:	b311      	cbz	r1, 404e2c <__sflush_r+0xb8>
  404de6:	f105 0340 	add.w	r3, r5, #64	; 0x40
  404dea:	4299      	cmp	r1, r3
  404dec:	d002      	beq.n	404df4 <__sflush_r+0x80>
  404dee:	4640      	mov	r0, r8
  404df0:	f000 f9f0 	bl	4051d4 <_free_r>
  404df4:	2000      	movs	r0, #0
  404df6:	6328      	str	r0, [r5, #48]	; 0x30
  404df8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404dfc:	692e      	ldr	r6, [r5, #16]
  404dfe:	b1ae      	cbz	r6, 404e2c <__sflush_r+0xb8>
  404e00:	682c      	ldr	r4, [r5, #0]
  404e02:	602e      	str	r6, [r5, #0]
  404e04:	0791      	lsls	r1, r2, #30
  404e06:	bf0c      	ite	eq
  404e08:	696b      	ldreq	r3, [r5, #20]
  404e0a:	2300      	movne	r3, #0
  404e0c:	1ba4      	subs	r4, r4, r6
  404e0e:	60ab      	str	r3, [r5, #8]
  404e10:	e00a      	b.n	404e28 <__sflush_r+0xb4>
  404e12:	4623      	mov	r3, r4
  404e14:	4632      	mov	r2, r6
  404e16:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  404e18:	69e9      	ldr	r1, [r5, #28]
  404e1a:	4640      	mov	r0, r8
  404e1c:	47b8      	blx	r7
  404e1e:	2800      	cmp	r0, #0
  404e20:	eba4 0400 	sub.w	r4, r4, r0
  404e24:	4406      	add	r6, r0
  404e26:	dd04      	ble.n	404e32 <__sflush_r+0xbe>
  404e28:	2c00      	cmp	r4, #0
  404e2a:	dcf2      	bgt.n	404e12 <__sflush_r+0x9e>
  404e2c:	2000      	movs	r0, #0
  404e2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e32:	89ab      	ldrh	r3, [r5, #12]
  404e34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404e38:	81ab      	strh	r3, [r5, #12]
  404e3a:	f04f 30ff 	mov.w	r0, #4294967295
  404e3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e42:	f8d8 4000 	ldr.w	r4, [r8]
  404e46:	2c1d      	cmp	r4, #29
  404e48:	d8f3      	bhi.n	404e32 <__sflush_r+0xbe>
  404e4a:	4b19      	ldr	r3, [pc, #100]	; (404eb0 <__sflush_r+0x13c>)
  404e4c:	40e3      	lsrs	r3, r4
  404e4e:	43db      	mvns	r3, r3
  404e50:	f013 0301 	ands.w	r3, r3, #1
  404e54:	d1ed      	bne.n	404e32 <__sflush_r+0xbe>
  404e56:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  404e5a:	606b      	str	r3, [r5, #4]
  404e5c:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  404e60:	6929      	ldr	r1, [r5, #16]
  404e62:	81ab      	strh	r3, [r5, #12]
  404e64:	04da      	lsls	r2, r3, #19
  404e66:	6029      	str	r1, [r5, #0]
  404e68:	d5b9      	bpl.n	404dde <__sflush_r+0x6a>
  404e6a:	2c00      	cmp	r4, #0
  404e6c:	d1b7      	bne.n	404dde <__sflush_r+0x6a>
  404e6e:	6528      	str	r0, [r5, #80]	; 0x50
  404e70:	e7b5      	b.n	404dde <__sflush_r+0x6a>
  404e72:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  404e74:	2a00      	cmp	r2, #0
  404e76:	dc8c      	bgt.n	404d92 <__sflush_r+0x1e>
  404e78:	e7d8      	b.n	404e2c <__sflush_r+0xb8>
  404e7a:	2301      	movs	r3, #1
  404e7c:	69e9      	ldr	r1, [r5, #28]
  404e7e:	4640      	mov	r0, r8
  404e80:	47a0      	blx	r4
  404e82:	1c43      	adds	r3, r0, #1
  404e84:	4602      	mov	r2, r0
  404e86:	d002      	beq.n	404e8e <__sflush_r+0x11a>
  404e88:	89ab      	ldrh	r3, [r5, #12]
  404e8a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404e8c:	e78e      	b.n	404dac <__sflush_r+0x38>
  404e8e:	f8d8 3000 	ldr.w	r3, [r8]
  404e92:	2b00      	cmp	r3, #0
  404e94:	d0f8      	beq.n	404e88 <__sflush_r+0x114>
  404e96:	2b1d      	cmp	r3, #29
  404e98:	d001      	beq.n	404e9e <__sflush_r+0x12a>
  404e9a:	2b16      	cmp	r3, #22
  404e9c:	d102      	bne.n	404ea4 <__sflush_r+0x130>
  404e9e:	f8c8 6000 	str.w	r6, [r8]
  404ea2:	e7c3      	b.n	404e2c <__sflush_r+0xb8>
  404ea4:	89ab      	ldrh	r3, [r5, #12]
  404ea6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404eaa:	81ab      	strh	r3, [r5, #12]
  404eac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404eb0:	20400001 	.word	0x20400001

00404eb4 <_fflush_r>:
  404eb4:	b538      	push	{r3, r4, r5, lr}
  404eb6:	460d      	mov	r5, r1
  404eb8:	4604      	mov	r4, r0
  404eba:	b108      	cbz	r0, 404ec0 <_fflush_r+0xc>
  404ebc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404ebe:	b1bb      	cbz	r3, 404ef0 <_fflush_r+0x3c>
  404ec0:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  404ec4:	b188      	cbz	r0, 404eea <_fflush_r+0x36>
  404ec6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  404ec8:	07db      	lsls	r3, r3, #31
  404eca:	d401      	bmi.n	404ed0 <_fflush_r+0x1c>
  404ecc:	0581      	lsls	r1, r0, #22
  404ece:	d517      	bpl.n	404f00 <_fflush_r+0x4c>
  404ed0:	4620      	mov	r0, r4
  404ed2:	4629      	mov	r1, r5
  404ed4:	f7ff ff4e 	bl	404d74 <__sflush_r>
  404ed8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  404eda:	07da      	lsls	r2, r3, #31
  404edc:	4604      	mov	r4, r0
  404ede:	d402      	bmi.n	404ee6 <_fflush_r+0x32>
  404ee0:	89ab      	ldrh	r3, [r5, #12]
  404ee2:	059b      	lsls	r3, r3, #22
  404ee4:	d507      	bpl.n	404ef6 <_fflush_r+0x42>
  404ee6:	4620      	mov	r0, r4
  404ee8:	bd38      	pop	{r3, r4, r5, pc}
  404eea:	4604      	mov	r4, r0
  404eec:	4620      	mov	r0, r4
  404eee:	bd38      	pop	{r3, r4, r5, pc}
  404ef0:	f000 f84a 	bl	404f88 <__sinit>
  404ef4:	e7e4      	b.n	404ec0 <_fflush_r+0xc>
  404ef6:	6da8      	ldr	r0, [r5, #88]	; 0x58
  404ef8:	f000 fc3c 	bl	405774 <__retarget_lock_release_recursive>
  404efc:	4620      	mov	r0, r4
  404efe:	bd38      	pop	{r3, r4, r5, pc}
  404f00:	6da8      	ldr	r0, [r5, #88]	; 0x58
  404f02:	f000 fc35 	bl	405770 <__retarget_lock_acquire_recursive>
  404f06:	e7e3      	b.n	404ed0 <_fflush_r+0x1c>

00404f08 <fflush>:
  404f08:	b120      	cbz	r0, 404f14 <fflush+0xc>
  404f0a:	4b05      	ldr	r3, [pc, #20]	; (404f20 <fflush+0x18>)
  404f0c:	4601      	mov	r1, r0
  404f0e:	6818      	ldr	r0, [r3, #0]
  404f10:	f7ff bfd0 	b.w	404eb4 <_fflush_r>
  404f14:	4b03      	ldr	r3, [pc, #12]	; (404f24 <fflush+0x1c>)
  404f16:	4904      	ldr	r1, [pc, #16]	; (404f28 <fflush+0x20>)
  404f18:	6818      	ldr	r0, [r3, #0]
  404f1a:	f000 bbdf 	b.w	4056dc <_fwalk_reent>
  404f1e:	bf00      	nop
  404f20:	20400018 	.word	0x20400018
  404f24:	00407338 	.word	0x00407338
  404f28:	00404eb5 	.word	0x00404eb5

00404f2c <_cleanup_r>:
  404f2c:	4901      	ldr	r1, [pc, #4]	; (404f34 <_cleanup_r+0x8>)
  404f2e:	f000 bbd5 	b.w	4056dc <_fwalk_reent>
  404f32:	bf00      	nop
  404f34:	00406d39 	.word	0x00406d39

00404f38 <std.isra.0>:
  404f38:	b510      	push	{r4, lr}
  404f3a:	2300      	movs	r3, #0
  404f3c:	4604      	mov	r4, r0
  404f3e:	8181      	strh	r1, [r0, #12]
  404f40:	81c2      	strh	r2, [r0, #14]
  404f42:	6003      	str	r3, [r0, #0]
  404f44:	6043      	str	r3, [r0, #4]
  404f46:	6083      	str	r3, [r0, #8]
  404f48:	6643      	str	r3, [r0, #100]	; 0x64
  404f4a:	6103      	str	r3, [r0, #16]
  404f4c:	6143      	str	r3, [r0, #20]
  404f4e:	6183      	str	r3, [r0, #24]
  404f50:	4619      	mov	r1, r3
  404f52:	2208      	movs	r2, #8
  404f54:	305c      	adds	r0, #92	; 0x5c
  404f56:	f7fd f985 	bl	402264 <memset>
  404f5a:	4807      	ldr	r0, [pc, #28]	; (404f78 <std.isra.0+0x40>)
  404f5c:	4907      	ldr	r1, [pc, #28]	; (404f7c <std.isra.0+0x44>)
  404f5e:	4a08      	ldr	r2, [pc, #32]	; (404f80 <std.isra.0+0x48>)
  404f60:	4b08      	ldr	r3, [pc, #32]	; (404f84 <std.isra.0+0x4c>)
  404f62:	6220      	str	r0, [r4, #32]
  404f64:	61e4      	str	r4, [r4, #28]
  404f66:	6261      	str	r1, [r4, #36]	; 0x24
  404f68:	62a2      	str	r2, [r4, #40]	; 0x28
  404f6a:	62e3      	str	r3, [r4, #44]	; 0x2c
  404f6c:	f104 0058 	add.w	r0, r4, #88	; 0x58
  404f70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404f74:	f000 bbf8 	b.w	405768 <__retarget_lock_init_recursive>
  404f78:	00406a1d 	.word	0x00406a1d
  404f7c:	00406a41 	.word	0x00406a41
  404f80:	00406a7d 	.word	0x00406a7d
  404f84:	00406a9d 	.word	0x00406a9d

00404f88 <__sinit>:
  404f88:	b510      	push	{r4, lr}
  404f8a:	4604      	mov	r4, r0
  404f8c:	4812      	ldr	r0, [pc, #72]	; (404fd8 <__sinit+0x50>)
  404f8e:	f000 fbef 	bl	405770 <__retarget_lock_acquire_recursive>
  404f92:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  404f94:	b9d2      	cbnz	r2, 404fcc <__sinit+0x44>
  404f96:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  404f9a:	4810      	ldr	r0, [pc, #64]	; (404fdc <__sinit+0x54>)
  404f9c:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  404fa0:	2103      	movs	r1, #3
  404fa2:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  404fa6:	63e0      	str	r0, [r4, #60]	; 0x3c
  404fa8:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  404fac:	6860      	ldr	r0, [r4, #4]
  404fae:	2104      	movs	r1, #4
  404fb0:	f7ff ffc2 	bl	404f38 <std.isra.0>
  404fb4:	2201      	movs	r2, #1
  404fb6:	2109      	movs	r1, #9
  404fb8:	68a0      	ldr	r0, [r4, #8]
  404fba:	f7ff ffbd 	bl	404f38 <std.isra.0>
  404fbe:	2202      	movs	r2, #2
  404fc0:	2112      	movs	r1, #18
  404fc2:	68e0      	ldr	r0, [r4, #12]
  404fc4:	f7ff ffb8 	bl	404f38 <std.isra.0>
  404fc8:	2301      	movs	r3, #1
  404fca:	63a3      	str	r3, [r4, #56]	; 0x38
  404fcc:	4802      	ldr	r0, [pc, #8]	; (404fd8 <__sinit+0x50>)
  404fce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404fd2:	f000 bbcf 	b.w	405774 <__retarget_lock_release_recursive>
  404fd6:	bf00      	nop
  404fd8:	20401664 	.word	0x20401664
  404fdc:	00404f2d 	.word	0x00404f2d

00404fe0 <__sfp_lock_acquire>:
  404fe0:	4801      	ldr	r0, [pc, #4]	; (404fe8 <__sfp_lock_acquire+0x8>)
  404fe2:	f000 bbc5 	b.w	405770 <__retarget_lock_acquire_recursive>
  404fe6:	bf00      	nop
  404fe8:	20401678 	.word	0x20401678

00404fec <__sfp_lock_release>:
  404fec:	4801      	ldr	r0, [pc, #4]	; (404ff4 <__sfp_lock_release+0x8>)
  404fee:	f000 bbc1 	b.w	405774 <__retarget_lock_release_recursive>
  404ff2:	bf00      	nop
  404ff4:	20401678 	.word	0x20401678

00404ff8 <__libc_fini_array>:
  404ff8:	b538      	push	{r3, r4, r5, lr}
  404ffa:	4c0a      	ldr	r4, [pc, #40]	; (405024 <__libc_fini_array+0x2c>)
  404ffc:	4d0a      	ldr	r5, [pc, #40]	; (405028 <__libc_fini_array+0x30>)
  404ffe:	1b64      	subs	r4, r4, r5
  405000:	10a4      	asrs	r4, r4, #2
  405002:	d00a      	beq.n	40501a <__libc_fini_array+0x22>
  405004:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  405008:	3b01      	subs	r3, #1
  40500a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40500e:	3c01      	subs	r4, #1
  405010:	f855 3904 	ldr.w	r3, [r5], #-4
  405014:	4798      	blx	r3
  405016:	2c00      	cmp	r4, #0
  405018:	d1f9      	bne.n	40500e <__libc_fini_array+0x16>
  40501a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40501e:	f002 bad9 	b.w	4075d4 <_fini>
  405022:	bf00      	nop
  405024:	004075e4 	.word	0x004075e4
  405028:	004075e0 	.word	0x004075e0

0040502c <__fputwc>:
  40502c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405030:	b082      	sub	sp, #8
  405032:	4680      	mov	r8, r0
  405034:	4689      	mov	r9, r1
  405036:	4614      	mov	r4, r2
  405038:	f000 fb7a 	bl	405730 <__locale_mb_cur_max>
  40503c:	2801      	cmp	r0, #1
  40503e:	d036      	beq.n	4050ae <__fputwc+0x82>
  405040:	464a      	mov	r2, r9
  405042:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  405046:	a901      	add	r1, sp, #4
  405048:	4640      	mov	r0, r8
  40504a:	f001 fd83 	bl	406b54 <_wcrtomb_r>
  40504e:	1c42      	adds	r2, r0, #1
  405050:	4606      	mov	r6, r0
  405052:	d025      	beq.n	4050a0 <__fputwc+0x74>
  405054:	b3a8      	cbz	r0, 4050c2 <__fputwc+0x96>
  405056:	f89d e004 	ldrb.w	lr, [sp, #4]
  40505a:	2500      	movs	r5, #0
  40505c:	f10d 0a04 	add.w	sl, sp, #4
  405060:	e009      	b.n	405076 <__fputwc+0x4a>
  405062:	6823      	ldr	r3, [r4, #0]
  405064:	1c5a      	adds	r2, r3, #1
  405066:	6022      	str	r2, [r4, #0]
  405068:	f883 e000 	strb.w	lr, [r3]
  40506c:	3501      	adds	r5, #1
  40506e:	42b5      	cmp	r5, r6
  405070:	d227      	bcs.n	4050c2 <__fputwc+0x96>
  405072:	f815 e00a 	ldrb.w	lr, [r5, sl]
  405076:	68a3      	ldr	r3, [r4, #8]
  405078:	3b01      	subs	r3, #1
  40507a:	2b00      	cmp	r3, #0
  40507c:	60a3      	str	r3, [r4, #8]
  40507e:	daf0      	bge.n	405062 <__fputwc+0x36>
  405080:	69a7      	ldr	r7, [r4, #24]
  405082:	42bb      	cmp	r3, r7
  405084:	4671      	mov	r1, lr
  405086:	4622      	mov	r2, r4
  405088:	4640      	mov	r0, r8
  40508a:	db02      	blt.n	405092 <__fputwc+0x66>
  40508c:	f1be 0f0a 	cmp.w	lr, #10
  405090:	d1e7      	bne.n	405062 <__fputwc+0x36>
  405092:	f001 fd07 	bl	406aa4 <__swbuf_r>
  405096:	1c43      	adds	r3, r0, #1
  405098:	d1e8      	bne.n	40506c <__fputwc+0x40>
  40509a:	b002      	add	sp, #8
  40509c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4050a0:	89a3      	ldrh	r3, [r4, #12]
  4050a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4050a6:	81a3      	strh	r3, [r4, #12]
  4050a8:	b002      	add	sp, #8
  4050aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4050ae:	f109 33ff 	add.w	r3, r9, #4294967295
  4050b2:	2bfe      	cmp	r3, #254	; 0xfe
  4050b4:	d8c4      	bhi.n	405040 <__fputwc+0x14>
  4050b6:	fa5f fe89 	uxtb.w	lr, r9
  4050ba:	4606      	mov	r6, r0
  4050bc:	f88d e004 	strb.w	lr, [sp, #4]
  4050c0:	e7cb      	b.n	40505a <__fputwc+0x2e>
  4050c2:	4648      	mov	r0, r9
  4050c4:	b002      	add	sp, #8
  4050c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4050ca:	bf00      	nop

004050cc <_fputwc_r>:
  4050cc:	b530      	push	{r4, r5, lr}
  4050ce:	6e53      	ldr	r3, [r2, #100]	; 0x64
  4050d0:	f013 0f01 	tst.w	r3, #1
  4050d4:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4050d8:	4614      	mov	r4, r2
  4050da:	b083      	sub	sp, #12
  4050dc:	4605      	mov	r5, r0
  4050de:	b29a      	uxth	r2, r3
  4050e0:	d101      	bne.n	4050e6 <_fputwc_r+0x1a>
  4050e2:	0590      	lsls	r0, r2, #22
  4050e4:	d51c      	bpl.n	405120 <_fputwc_r+0x54>
  4050e6:	0490      	lsls	r0, r2, #18
  4050e8:	d406      	bmi.n	4050f8 <_fputwc_r+0x2c>
  4050ea:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4050ec:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4050f0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4050f4:	81a3      	strh	r3, [r4, #12]
  4050f6:	6662      	str	r2, [r4, #100]	; 0x64
  4050f8:	4628      	mov	r0, r5
  4050fa:	4622      	mov	r2, r4
  4050fc:	f7ff ff96 	bl	40502c <__fputwc>
  405100:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405102:	07da      	lsls	r2, r3, #31
  405104:	4605      	mov	r5, r0
  405106:	d402      	bmi.n	40510e <_fputwc_r+0x42>
  405108:	89a3      	ldrh	r3, [r4, #12]
  40510a:	059b      	lsls	r3, r3, #22
  40510c:	d502      	bpl.n	405114 <_fputwc_r+0x48>
  40510e:	4628      	mov	r0, r5
  405110:	b003      	add	sp, #12
  405112:	bd30      	pop	{r4, r5, pc}
  405114:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405116:	f000 fb2d 	bl	405774 <__retarget_lock_release_recursive>
  40511a:	4628      	mov	r0, r5
  40511c:	b003      	add	sp, #12
  40511e:	bd30      	pop	{r4, r5, pc}
  405120:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405122:	9101      	str	r1, [sp, #4]
  405124:	f000 fb24 	bl	405770 <__retarget_lock_acquire_recursive>
  405128:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40512c:	9901      	ldr	r1, [sp, #4]
  40512e:	b29a      	uxth	r2, r3
  405130:	e7d9      	b.n	4050e6 <_fputwc_r+0x1a>
  405132:	bf00      	nop

00405134 <_malloc_trim_r>:
  405134:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405136:	4f24      	ldr	r7, [pc, #144]	; (4051c8 <_malloc_trim_r+0x94>)
  405138:	460c      	mov	r4, r1
  40513a:	4606      	mov	r6, r0
  40513c:	f000 ff1c 	bl	405f78 <__malloc_lock>
  405140:	68bb      	ldr	r3, [r7, #8]
  405142:	685d      	ldr	r5, [r3, #4]
  405144:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405148:	310f      	adds	r1, #15
  40514a:	f025 0503 	bic.w	r5, r5, #3
  40514e:	4429      	add	r1, r5
  405150:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  405154:	f021 010f 	bic.w	r1, r1, #15
  405158:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40515c:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405160:	db07      	blt.n	405172 <_malloc_trim_r+0x3e>
  405162:	2100      	movs	r1, #0
  405164:	4630      	mov	r0, r6
  405166:	f001 fc47 	bl	4069f8 <_sbrk_r>
  40516a:	68bb      	ldr	r3, [r7, #8]
  40516c:	442b      	add	r3, r5
  40516e:	4298      	cmp	r0, r3
  405170:	d004      	beq.n	40517c <_malloc_trim_r+0x48>
  405172:	4630      	mov	r0, r6
  405174:	f000 ff06 	bl	405f84 <__malloc_unlock>
  405178:	2000      	movs	r0, #0
  40517a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40517c:	4261      	negs	r1, r4
  40517e:	4630      	mov	r0, r6
  405180:	f001 fc3a 	bl	4069f8 <_sbrk_r>
  405184:	3001      	adds	r0, #1
  405186:	d00d      	beq.n	4051a4 <_malloc_trim_r+0x70>
  405188:	4b10      	ldr	r3, [pc, #64]	; (4051cc <_malloc_trim_r+0x98>)
  40518a:	68ba      	ldr	r2, [r7, #8]
  40518c:	6819      	ldr	r1, [r3, #0]
  40518e:	1b2d      	subs	r5, r5, r4
  405190:	f045 0501 	orr.w	r5, r5, #1
  405194:	4630      	mov	r0, r6
  405196:	1b09      	subs	r1, r1, r4
  405198:	6055      	str	r5, [r2, #4]
  40519a:	6019      	str	r1, [r3, #0]
  40519c:	f000 fef2 	bl	405f84 <__malloc_unlock>
  4051a0:	2001      	movs	r0, #1
  4051a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4051a4:	2100      	movs	r1, #0
  4051a6:	4630      	mov	r0, r6
  4051a8:	f001 fc26 	bl	4069f8 <_sbrk_r>
  4051ac:	68ba      	ldr	r2, [r7, #8]
  4051ae:	1a83      	subs	r3, r0, r2
  4051b0:	2b0f      	cmp	r3, #15
  4051b2:	ddde      	ble.n	405172 <_malloc_trim_r+0x3e>
  4051b4:	4c06      	ldr	r4, [pc, #24]	; (4051d0 <_malloc_trim_r+0x9c>)
  4051b6:	4905      	ldr	r1, [pc, #20]	; (4051cc <_malloc_trim_r+0x98>)
  4051b8:	6824      	ldr	r4, [r4, #0]
  4051ba:	f043 0301 	orr.w	r3, r3, #1
  4051be:	1b00      	subs	r0, r0, r4
  4051c0:	6053      	str	r3, [r2, #4]
  4051c2:	6008      	str	r0, [r1, #0]
  4051c4:	e7d5      	b.n	405172 <_malloc_trim_r+0x3e>
  4051c6:	bf00      	nop
  4051c8:	204005b8 	.word	0x204005b8
  4051cc:	20401598 	.word	0x20401598
  4051d0:	204009c0 	.word	0x204009c0

004051d4 <_free_r>:
  4051d4:	2900      	cmp	r1, #0
  4051d6:	d044      	beq.n	405262 <_free_r+0x8e>
  4051d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4051dc:	460d      	mov	r5, r1
  4051de:	4680      	mov	r8, r0
  4051e0:	f000 feca 	bl	405f78 <__malloc_lock>
  4051e4:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4051e8:	4969      	ldr	r1, [pc, #420]	; (405390 <_free_r+0x1bc>)
  4051ea:	f027 0301 	bic.w	r3, r7, #1
  4051ee:	f1a5 0408 	sub.w	r4, r5, #8
  4051f2:	18e2      	adds	r2, r4, r3
  4051f4:	688e      	ldr	r6, [r1, #8]
  4051f6:	6850      	ldr	r0, [r2, #4]
  4051f8:	42b2      	cmp	r2, r6
  4051fa:	f020 0003 	bic.w	r0, r0, #3
  4051fe:	d05e      	beq.n	4052be <_free_r+0xea>
  405200:	07fe      	lsls	r6, r7, #31
  405202:	6050      	str	r0, [r2, #4]
  405204:	d40b      	bmi.n	40521e <_free_r+0x4a>
  405206:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40520a:	1be4      	subs	r4, r4, r7
  40520c:	f101 0e08 	add.w	lr, r1, #8
  405210:	68a5      	ldr	r5, [r4, #8]
  405212:	4575      	cmp	r5, lr
  405214:	443b      	add	r3, r7
  405216:	d06d      	beq.n	4052f4 <_free_r+0x120>
  405218:	68e7      	ldr	r7, [r4, #12]
  40521a:	60ef      	str	r7, [r5, #12]
  40521c:	60bd      	str	r5, [r7, #8]
  40521e:	1815      	adds	r5, r2, r0
  405220:	686d      	ldr	r5, [r5, #4]
  405222:	07ed      	lsls	r5, r5, #31
  405224:	d53e      	bpl.n	4052a4 <_free_r+0xd0>
  405226:	f043 0201 	orr.w	r2, r3, #1
  40522a:	6062      	str	r2, [r4, #4]
  40522c:	50e3      	str	r3, [r4, r3]
  40522e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405232:	d217      	bcs.n	405264 <_free_r+0x90>
  405234:	08db      	lsrs	r3, r3, #3
  405236:	1c58      	adds	r0, r3, #1
  405238:	109a      	asrs	r2, r3, #2
  40523a:	684d      	ldr	r5, [r1, #4]
  40523c:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405240:	60a7      	str	r7, [r4, #8]
  405242:	2301      	movs	r3, #1
  405244:	4093      	lsls	r3, r2
  405246:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40524a:	432b      	orrs	r3, r5
  40524c:	3a08      	subs	r2, #8
  40524e:	60e2      	str	r2, [r4, #12]
  405250:	604b      	str	r3, [r1, #4]
  405252:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  405256:	60fc      	str	r4, [r7, #12]
  405258:	4640      	mov	r0, r8
  40525a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40525e:	f000 be91 	b.w	405f84 <__malloc_unlock>
  405262:	4770      	bx	lr
  405264:	0a5a      	lsrs	r2, r3, #9
  405266:	2a04      	cmp	r2, #4
  405268:	d852      	bhi.n	405310 <_free_r+0x13c>
  40526a:	099a      	lsrs	r2, r3, #6
  40526c:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405270:	00ff      	lsls	r7, r7, #3
  405272:	f102 0538 	add.w	r5, r2, #56	; 0x38
  405276:	19c8      	adds	r0, r1, r7
  405278:	59ca      	ldr	r2, [r1, r7]
  40527a:	3808      	subs	r0, #8
  40527c:	4290      	cmp	r0, r2
  40527e:	d04f      	beq.n	405320 <_free_r+0x14c>
  405280:	6851      	ldr	r1, [r2, #4]
  405282:	f021 0103 	bic.w	r1, r1, #3
  405286:	428b      	cmp	r3, r1
  405288:	d232      	bcs.n	4052f0 <_free_r+0x11c>
  40528a:	6892      	ldr	r2, [r2, #8]
  40528c:	4290      	cmp	r0, r2
  40528e:	d1f7      	bne.n	405280 <_free_r+0xac>
  405290:	68c3      	ldr	r3, [r0, #12]
  405292:	60a0      	str	r0, [r4, #8]
  405294:	60e3      	str	r3, [r4, #12]
  405296:	609c      	str	r4, [r3, #8]
  405298:	60c4      	str	r4, [r0, #12]
  40529a:	4640      	mov	r0, r8
  40529c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4052a0:	f000 be70 	b.w	405f84 <__malloc_unlock>
  4052a4:	6895      	ldr	r5, [r2, #8]
  4052a6:	4f3b      	ldr	r7, [pc, #236]	; (405394 <_free_r+0x1c0>)
  4052a8:	42bd      	cmp	r5, r7
  4052aa:	4403      	add	r3, r0
  4052ac:	d040      	beq.n	405330 <_free_r+0x15c>
  4052ae:	68d0      	ldr	r0, [r2, #12]
  4052b0:	60e8      	str	r0, [r5, #12]
  4052b2:	f043 0201 	orr.w	r2, r3, #1
  4052b6:	6085      	str	r5, [r0, #8]
  4052b8:	6062      	str	r2, [r4, #4]
  4052ba:	50e3      	str	r3, [r4, r3]
  4052bc:	e7b7      	b.n	40522e <_free_r+0x5a>
  4052be:	07ff      	lsls	r7, r7, #31
  4052c0:	4403      	add	r3, r0
  4052c2:	d407      	bmi.n	4052d4 <_free_r+0x100>
  4052c4:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4052c8:	1aa4      	subs	r4, r4, r2
  4052ca:	4413      	add	r3, r2
  4052cc:	68a0      	ldr	r0, [r4, #8]
  4052ce:	68e2      	ldr	r2, [r4, #12]
  4052d0:	60c2      	str	r2, [r0, #12]
  4052d2:	6090      	str	r0, [r2, #8]
  4052d4:	4a30      	ldr	r2, [pc, #192]	; (405398 <_free_r+0x1c4>)
  4052d6:	6812      	ldr	r2, [r2, #0]
  4052d8:	f043 0001 	orr.w	r0, r3, #1
  4052dc:	4293      	cmp	r3, r2
  4052de:	6060      	str	r0, [r4, #4]
  4052e0:	608c      	str	r4, [r1, #8]
  4052e2:	d3b9      	bcc.n	405258 <_free_r+0x84>
  4052e4:	4b2d      	ldr	r3, [pc, #180]	; (40539c <_free_r+0x1c8>)
  4052e6:	4640      	mov	r0, r8
  4052e8:	6819      	ldr	r1, [r3, #0]
  4052ea:	f7ff ff23 	bl	405134 <_malloc_trim_r>
  4052ee:	e7b3      	b.n	405258 <_free_r+0x84>
  4052f0:	4610      	mov	r0, r2
  4052f2:	e7cd      	b.n	405290 <_free_r+0xbc>
  4052f4:	1811      	adds	r1, r2, r0
  4052f6:	6849      	ldr	r1, [r1, #4]
  4052f8:	07c9      	lsls	r1, r1, #31
  4052fa:	d444      	bmi.n	405386 <_free_r+0x1b2>
  4052fc:	6891      	ldr	r1, [r2, #8]
  4052fe:	68d2      	ldr	r2, [r2, #12]
  405300:	60ca      	str	r2, [r1, #12]
  405302:	4403      	add	r3, r0
  405304:	f043 0001 	orr.w	r0, r3, #1
  405308:	6091      	str	r1, [r2, #8]
  40530a:	6060      	str	r0, [r4, #4]
  40530c:	50e3      	str	r3, [r4, r3]
  40530e:	e7a3      	b.n	405258 <_free_r+0x84>
  405310:	2a14      	cmp	r2, #20
  405312:	d816      	bhi.n	405342 <_free_r+0x16e>
  405314:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405318:	00ff      	lsls	r7, r7, #3
  40531a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40531e:	e7aa      	b.n	405276 <_free_r+0xa2>
  405320:	10aa      	asrs	r2, r5, #2
  405322:	2301      	movs	r3, #1
  405324:	684d      	ldr	r5, [r1, #4]
  405326:	4093      	lsls	r3, r2
  405328:	432b      	orrs	r3, r5
  40532a:	604b      	str	r3, [r1, #4]
  40532c:	4603      	mov	r3, r0
  40532e:	e7b0      	b.n	405292 <_free_r+0xbe>
  405330:	f043 0201 	orr.w	r2, r3, #1
  405334:	614c      	str	r4, [r1, #20]
  405336:	610c      	str	r4, [r1, #16]
  405338:	60e5      	str	r5, [r4, #12]
  40533a:	60a5      	str	r5, [r4, #8]
  40533c:	6062      	str	r2, [r4, #4]
  40533e:	50e3      	str	r3, [r4, r3]
  405340:	e78a      	b.n	405258 <_free_r+0x84>
  405342:	2a54      	cmp	r2, #84	; 0x54
  405344:	d806      	bhi.n	405354 <_free_r+0x180>
  405346:	0b1a      	lsrs	r2, r3, #12
  405348:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  40534c:	00ff      	lsls	r7, r7, #3
  40534e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405352:	e790      	b.n	405276 <_free_r+0xa2>
  405354:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405358:	d806      	bhi.n	405368 <_free_r+0x194>
  40535a:	0bda      	lsrs	r2, r3, #15
  40535c:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405360:	00ff      	lsls	r7, r7, #3
  405362:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405366:	e786      	b.n	405276 <_free_r+0xa2>
  405368:	f240 5054 	movw	r0, #1364	; 0x554
  40536c:	4282      	cmp	r2, r0
  40536e:	d806      	bhi.n	40537e <_free_r+0x1aa>
  405370:	0c9a      	lsrs	r2, r3, #18
  405372:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405376:	00ff      	lsls	r7, r7, #3
  405378:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  40537c:	e77b      	b.n	405276 <_free_r+0xa2>
  40537e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405382:	257e      	movs	r5, #126	; 0x7e
  405384:	e777      	b.n	405276 <_free_r+0xa2>
  405386:	f043 0101 	orr.w	r1, r3, #1
  40538a:	6061      	str	r1, [r4, #4]
  40538c:	6013      	str	r3, [r2, #0]
  40538e:	e763      	b.n	405258 <_free_r+0x84>
  405390:	204005b8 	.word	0x204005b8
  405394:	204005c0 	.word	0x204005c0
  405398:	204009c4 	.word	0x204009c4
  40539c:	204015c8 	.word	0x204015c8

004053a0 <__sfvwrite_r>:
  4053a0:	6893      	ldr	r3, [r2, #8]
  4053a2:	2b00      	cmp	r3, #0
  4053a4:	d073      	beq.n	40548e <__sfvwrite_r+0xee>
  4053a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4053aa:	898b      	ldrh	r3, [r1, #12]
  4053ac:	b083      	sub	sp, #12
  4053ae:	460c      	mov	r4, r1
  4053b0:	0719      	lsls	r1, r3, #28
  4053b2:	9000      	str	r0, [sp, #0]
  4053b4:	4616      	mov	r6, r2
  4053b6:	d526      	bpl.n	405406 <__sfvwrite_r+0x66>
  4053b8:	6922      	ldr	r2, [r4, #16]
  4053ba:	b322      	cbz	r2, 405406 <__sfvwrite_r+0x66>
  4053bc:	f013 0002 	ands.w	r0, r3, #2
  4053c0:	6835      	ldr	r5, [r6, #0]
  4053c2:	d02c      	beq.n	40541e <__sfvwrite_r+0x7e>
  4053c4:	f04f 0900 	mov.w	r9, #0
  4053c8:	4fb0      	ldr	r7, [pc, #704]	; (40568c <__sfvwrite_r+0x2ec>)
  4053ca:	46c8      	mov	r8, r9
  4053cc:	46b2      	mov	sl, r6
  4053ce:	45b8      	cmp	r8, r7
  4053d0:	4643      	mov	r3, r8
  4053d2:	464a      	mov	r2, r9
  4053d4:	bf28      	it	cs
  4053d6:	463b      	movcs	r3, r7
  4053d8:	9800      	ldr	r0, [sp, #0]
  4053da:	f1b8 0f00 	cmp.w	r8, #0
  4053de:	d050      	beq.n	405482 <__sfvwrite_r+0xe2>
  4053e0:	69e1      	ldr	r1, [r4, #28]
  4053e2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4053e4:	47b0      	blx	r6
  4053e6:	2800      	cmp	r0, #0
  4053e8:	dd58      	ble.n	40549c <__sfvwrite_r+0xfc>
  4053ea:	f8da 3008 	ldr.w	r3, [sl, #8]
  4053ee:	1a1b      	subs	r3, r3, r0
  4053f0:	4481      	add	r9, r0
  4053f2:	eba8 0800 	sub.w	r8, r8, r0
  4053f6:	f8ca 3008 	str.w	r3, [sl, #8]
  4053fa:	2b00      	cmp	r3, #0
  4053fc:	d1e7      	bne.n	4053ce <__sfvwrite_r+0x2e>
  4053fe:	2000      	movs	r0, #0
  405400:	b003      	add	sp, #12
  405402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405406:	4621      	mov	r1, r4
  405408:	9800      	ldr	r0, [sp, #0]
  40540a:	f7fe fc7f 	bl	403d0c <__swsetup_r>
  40540e:	2800      	cmp	r0, #0
  405410:	f040 8133 	bne.w	40567a <__sfvwrite_r+0x2da>
  405414:	89a3      	ldrh	r3, [r4, #12]
  405416:	6835      	ldr	r5, [r6, #0]
  405418:	f013 0002 	ands.w	r0, r3, #2
  40541c:	d1d2      	bne.n	4053c4 <__sfvwrite_r+0x24>
  40541e:	f013 0901 	ands.w	r9, r3, #1
  405422:	d145      	bne.n	4054b0 <__sfvwrite_r+0x110>
  405424:	464f      	mov	r7, r9
  405426:	9601      	str	r6, [sp, #4]
  405428:	b337      	cbz	r7, 405478 <__sfvwrite_r+0xd8>
  40542a:	059a      	lsls	r2, r3, #22
  40542c:	f8d4 8008 	ldr.w	r8, [r4, #8]
  405430:	f140 8083 	bpl.w	40553a <__sfvwrite_r+0x19a>
  405434:	4547      	cmp	r7, r8
  405436:	46c3      	mov	fp, r8
  405438:	f0c0 80ab 	bcc.w	405592 <__sfvwrite_r+0x1f2>
  40543c:	f413 6f90 	tst.w	r3, #1152	; 0x480
  405440:	f040 80ac 	bne.w	40559c <__sfvwrite_r+0x1fc>
  405444:	6820      	ldr	r0, [r4, #0]
  405446:	46ba      	mov	sl, r7
  405448:	465a      	mov	r2, fp
  40544a:	4649      	mov	r1, r9
  40544c:	f000 fd30 	bl	405eb0 <memmove>
  405450:	68a2      	ldr	r2, [r4, #8]
  405452:	6823      	ldr	r3, [r4, #0]
  405454:	eba2 0208 	sub.w	r2, r2, r8
  405458:	445b      	add	r3, fp
  40545a:	60a2      	str	r2, [r4, #8]
  40545c:	6023      	str	r3, [r4, #0]
  40545e:	9a01      	ldr	r2, [sp, #4]
  405460:	6893      	ldr	r3, [r2, #8]
  405462:	eba3 030a 	sub.w	r3, r3, sl
  405466:	44d1      	add	r9, sl
  405468:	eba7 070a 	sub.w	r7, r7, sl
  40546c:	6093      	str	r3, [r2, #8]
  40546e:	2b00      	cmp	r3, #0
  405470:	d0c5      	beq.n	4053fe <__sfvwrite_r+0x5e>
  405472:	89a3      	ldrh	r3, [r4, #12]
  405474:	2f00      	cmp	r7, #0
  405476:	d1d8      	bne.n	40542a <__sfvwrite_r+0x8a>
  405478:	f8d5 9000 	ldr.w	r9, [r5]
  40547c:	686f      	ldr	r7, [r5, #4]
  40547e:	3508      	adds	r5, #8
  405480:	e7d2      	b.n	405428 <__sfvwrite_r+0x88>
  405482:	f8d5 9000 	ldr.w	r9, [r5]
  405486:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40548a:	3508      	adds	r5, #8
  40548c:	e79f      	b.n	4053ce <__sfvwrite_r+0x2e>
  40548e:	2000      	movs	r0, #0
  405490:	4770      	bx	lr
  405492:	4621      	mov	r1, r4
  405494:	9800      	ldr	r0, [sp, #0]
  405496:	f7ff fd0d 	bl	404eb4 <_fflush_r>
  40549a:	b370      	cbz	r0, 4054fa <__sfvwrite_r+0x15a>
  40549c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4054a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4054a4:	f04f 30ff 	mov.w	r0, #4294967295
  4054a8:	81a3      	strh	r3, [r4, #12]
  4054aa:	b003      	add	sp, #12
  4054ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054b0:	4681      	mov	r9, r0
  4054b2:	4633      	mov	r3, r6
  4054b4:	464e      	mov	r6, r9
  4054b6:	46a8      	mov	r8, r5
  4054b8:	469a      	mov	sl, r3
  4054ba:	464d      	mov	r5, r9
  4054bc:	b34e      	cbz	r6, 405512 <__sfvwrite_r+0x172>
  4054be:	b380      	cbz	r0, 405522 <__sfvwrite_r+0x182>
  4054c0:	6820      	ldr	r0, [r4, #0]
  4054c2:	6923      	ldr	r3, [r4, #16]
  4054c4:	6962      	ldr	r2, [r4, #20]
  4054c6:	45b1      	cmp	r9, r6
  4054c8:	46cb      	mov	fp, r9
  4054ca:	bf28      	it	cs
  4054cc:	46b3      	movcs	fp, r6
  4054ce:	4298      	cmp	r0, r3
  4054d0:	465f      	mov	r7, fp
  4054d2:	d904      	bls.n	4054de <__sfvwrite_r+0x13e>
  4054d4:	68a3      	ldr	r3, [r4, #8]
  4054d6:	4413      	add	r3, r2
  4054d8:	459b      	cmp	fp, r3
  4054da:	f300 80a6 	bgt.w	40562a <__sfvwrite_r+0x28a>
  4054de:	4593      	cmp	fp, r2
  4054e0:	db4b      	blt.n	40557a <__sfvwrite_r+0x1da>
  4054e2:	4613      	mov	r3, r2
  4054e4:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4054e6:	69e1      	ldr	r1, [r4, #28]
  4054e8:	9800      	ldr	r0, [sp, #0]
  4054ea:	462a      	mov	r2, r5
  4054ec:	47b8      	blx	r7
  4054ee:	1e07      	subs	r7, r0, #0
  4054f0:	ddd4      	ble.n	40549c <__sfvwrite_r+0xfc>
  4054f2:	ebb9 0907 	subs.w	r9, r9, r7
  4054f6:	d0cc      	beq.n	405492 <__sfvwrite_r+0xf2>
  4054f8:	2001      	movs	r0, #1
  4054fa:	f8da 3008 	ldr.w	r3, [sl, #8]
  4054fe:	1bdb      	subs	r3, r3, r7
  405500:	443d      	add	r5, r7
  405502:	1bf6      	subs	r6, r6, r7
  405504:	f8ca 3008 	str.w	r3, [sl, #8]
  405508:	2b00      	cmp	r3, #0
  40550a:	f43f af78 	beq.w	4053fe <__sfvwrite_r+0x5e>
  40550e:	2e00      	cmp	r6, #0
  405510:	d1d5      	bne.n	4054be <__sfvwrite_r+0x11e>
  405512:	f108 0308 	add.w	r3, r8, #8
  405516:	e913 0060 	ldmdb	r3, {r5, r6}
  40551a:	4698      	mov	r8, r3
  40551c:	3308      	adds	r3, #8
  40551e:	2e00      	cmp	r6, #0
  405520:	d0f9      	beq.n	405516 <__sfvwrite_r+0x176>
  405522:	4632      	mov	r2, r6
  405524:	210a      	movs	r1, #10
  405526:	4628      	mov	r0, r5
  405528:	f000 fc72 	bl	405e10 <memchr>
  40552c:	2800      	cmp	r0, #0
  40552e:	f000 80a1 	beq.w	405674 <__sfvwrite_r+0x2d4>
  405532:	3001      	adds	r0, #1
  405534:	eba0 0905 	sub.w	r9, r0, r5
  405538:	e7c2      	b.n	4054c0 <__sfvwrite_r+0x120>
  40553a:	6820      	ldr	r0, [r4, #0]
  40553c:	6923      	ldr	r3, [r4, #16]
  40553e:	4298      	cmp	r0, r3
  405540:	d802      	bhi.n	405548 <__sfvwrite_r+0x1a8>
  405542:	6963      	ldr	r3, [r4, #20]
  405544:	429f      	cmp	r7, r3
  405546:	d25d      	bcs.n	405604 <__sfvwrite_r+0x264>
  405548:	45b8      	cmp	r8, r7
  40554a:	bf28      	it	cs
  40554c:	46b8      	movcs	r8, r7
  40554e:	4642      	mov	r2, r8
  405550:	4649      	mov	r1, r9
  405552:	f000 fcad 	bl	405eb0 <memmove>
  405556:	68a3      	ldr	r3, [r4, #8]
  405558:	6822      	ldr	r2, [r4, #0]
  40555a:	eba3 0308 	sub.w	r3, r3, r8
  40555e:	4442      	add	r2, r8
  405560:	60a3      	str	r3, [r4, #8]
  405562:	6022      	str	r2, [r4, #0]
  405564:	b10b      	cbz	r3, 40556a <__sfvwrite_r+0x1ca>
  405566:	46c2      	mov	sl, r8
  405568:	e779      	b.n	40545e <__sfvwrite_r+0xbe>
  40556a:	4621      	mov	r1, r4
  40556c:	9800      	ldr	r0, [sp, #0]
  40556e:	f7ff fca1 	bl	404eb4 <_fflush_r>
  405572:	2800      	cmp	r0, #0
  405574:	d192      	bne.n	40549c <__sfvwrite_r+0xfc>
  405576:	46c2      	mov	sl, r8
  405578:	e771      	b.n	40545e <__sfvwrite_r+0xbe>
  40557a:	465a      	mov	r2, fp
  40557c:	4629      	mov	r1, r5
  40557e:	f000 fc97 	bl	405eb0 <memmove>
  405582:	68a2      	ldr	r2, [r4, #8]
  405584:	6823      	ldr	r3, [r4, #0]
  405586:	eba2 020b 	sub.w	r2, r2, fp
  40558a:	445b      	add	r3, fp
  40558c:	60a2      	str	r2, [r4, #8]
  40558e:	6023      	str	r3, [r4, #0]
  405590:	e7af      	b.n	4054f2 <__sfvwrite_r+0x152>
  405592:	6820      	ldr	r0, [r4, #0]
  405594:	46b8      	mov	r8, r7
  405596:	46ba      	mov	sl, r7
  405598:	46bb      	mov	fp, r7
  40559a:	e755      	b.n	405448 <__sfvwrite_r+0xa8>
  40559c:	6962      	ldr	r2, [r4, #20]
  40559e:	6820      	ldr	r0, [r4, #0]
  4055a0:	6921      	ldr	r1, [r4, #16]
  4055a2:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  4055a6:	eba0 0a01 	sub.w	sl, r0, r1
  4055aa:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  4055ae:	f10a 0001 	add.w	r0, sl, #1
  4055b2:	ea4f 0868 	mov.w	r8, r8, asr #1
  4055b6:	4438      	add	r0, r7
  4055b8:	4540      	cmp	r0, r8
  4055ba:	4642      	mov	r2, r8
  4055bc:	bf84      	itt	hi
  4055be:	4680      	movhi	r8, r0
  4055c0:	4642      	movhi	r2, r8
  4055c2:	055b      	lsls	r3, r3, #21
  4055c4:	d544      	bpl.n	405650 <__sfvwrite_r+0x2b0>
  4055c6:	4611      	mov	r1, r2
  4055c8:	9800      	ldr	r0, [sp, #0]
  4055ca:	f000 f955 	bl	405878 <_malloc_r>
  4055ce:	4683      	mov	fp, r0
  4055d0:	2800      	cmp	r0, #0
  4055d2:	d055      	beq.n	405680 <__sfvwrite_r+0x2e0>
  4055d4:	4652      	mov	r2, sl
  4055d6:	6921      	ldr	r1, [r4, #16]
  4055d8:	f7fc fdaa 	bl	402130 <memcpy>
  4055dc:	89a3      	ldrh	r3, [r4, #12]
  4055de:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  4055e2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4055e6:	81a3      	strh	r3, [r4, #12]
  4055e8:	eb0b 000a 	add.w	r0, fp, sl
  4055ec:	eba8 030a 	sub.w	r3, r8, sl
  4055f0:	f8c4 b010 	str.w	fp, [r4, #16]
  4055f4:	f8c4 8014 	str.w	r8, [r4, #20]
  4055f8:	6020      	str	r0, [r4, #0]
  4055fa:	60a3      	str	r3, [r4, #8]
  4055fc:	46b8      	mov	r8, r7
  4055fe:	46ba      	mov	sl, r7
  405600:	46bb      	mov	fp, r7
  405602:	e721      	b.n	405448 <__sfvwrite_r+0xa8>
  405604:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  405608:	42b9      	cmp	r1, r7
  40560a:	bf28      	it	cs
  40560c:	4639      	movcs	r1, r7
  40560e:	464a      	mov	r2, r9
  405610:	fb91 f1f3 	sdiv	r1, r1, r3
  405614:	9800      	ldr	r0, [sp, #0]
  405616:	6a66      	ldr	r6, [r4, #36]	; 0x24
  405618:	fb03 f301 	mul.w	r3, r3, r1
  40561c:	69e1      	ldr	r1, [r4, #28]
  40561e:	47b0      	blx	r6
  405620:	f1b0 0a00 	subs.w	sl, r0, #0
  405624:	f73f af1b 	bgt.w	40545e <__sfvwrite_r+0xbe>
  405628:	e738      	b.n	40549c <__sfvwrite_r+0xfc>
  40562a:	461a      	mov	r2, r3
  40562c:	4629      	mov	r1, r5
  40562e:	9301      	str	r3, [sp, #4]
  405630:	f000 fc3e 	bl	405eb0 <memmove>
  405634:	6822      	ldr	r2, [r4, #0]
  405636:	9b01      	ldr	r3, [sp, #4]
  405638:	9800      	ldr	r0, [sp, #0]
  40563a:	441a      	add	r2, r3
  40563c:	6022      	str	r2, [r4, #0]
  40563e:	4621      	mov	r1, r4
  405640:	f7ff fc38 	bl	404eb4 <_fflush_r>
  405644:	9b01      	ldr	r3, [sp, #4]
  405646:	2800      	cmp	r0, #0
  405648:	f47f af28 	bne.w	40549c <__sfvwrite_r+0xfc>
  40564c:	461f      	mov	r7, r3
  40564e:	e750      	b.n	4054f2 <__sfvwrite_r+0x152>
  405650:	9800      	ldr	r0, [sp, #0]
  405652:	f000 ff97 	bl	406584 <_realloc_r>
  405656:	4683      	mov	fp, r0
  405658:	2800      	cmp	r0, #0
  40565a:	d1c5      	bne.n	4055e8 <__sfvwrite_r+0x248>
  40565c:	9d00      	ldr	r5, [sp, #0]
  40565e:	6921      	ldr	r1, [r4, #16]
  405660:	4628      	mov	r0, r5
  405662:	f7ff fdb7 	bl	4051d4 <_free_r>
  405666:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40566a:	220c      	movs	r2, #12
  40566c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  405670:	602a      	str	r2, [r5, #0]
  405672:	e715      	b.n	4054a0 <__sfvwrite_r+0x100>
  405674:	f106 0901 	add.w	r9, r6, #1
  405678:	e722      	b.n	4054c0 <__sfvwrite_r+0x120>
  40567a:	f04f 30ff 	mov.w	r0, #4294967295
  40567e:	e6bf      	b.n	405400 <__sfvwrite_r+0x60>
  405680:	9a00      	ldr	r2, [sp, #0]
  405682:	230c      	movs	r3, #12
  405684:	6013      	str	r3, [r2, #0]
  405686:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40568a:	e709      	b.n	4054a0 <__sfvwrite_r+0x100>
  40568c:	7ffffc00 	.word	0x7ffffc00

00405690 <_fwalk>:
  405690:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405694:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  405698:	d01b      	beq.n	4056d2 <_fwalk+0x42>
  40569a:	4688      	mov	r8, r1
  40569c:	2600      	movs	r6, #0
  40569e:	687d      	ldr	r5, [r7, #4]
  4056a0:	68bc      	ldr	r4, [r7, #8]
  4056a2:	3d01      	subs	r5, #1
  4056a4:	d40f      	bmi.n	4056c6 <_fwalk+0x36>
  4056a6:	89a3      	ldrh	r3, [r4, #12]
  4056a8:	2b01      	cmp	r3, #1
  4056aa:	f105 35ff 	add.w	r5, r5, #4294967295
  4056ae:	d906      	bls.n	4056be <_fwalk+0x2e>
  4056b0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4056b4:	3301      	adds	r3, #1
  4056b6:	4620      	mov	r0, r4
  4056b8:	d001      	beq.n	4056be <_fwalk+0x2e>
  4056ba:	47c0      	blx	r8
  4056bc:	4306      	orrs	r6, r0
  4056be:	1c6b      	adds	r3, r5, #1
  4056c0:	f104 0468 	add.w	r4, r4, #104	; 0x68
  4056c4:	d1ef      	bne.n	4056a6 <_fwalk+0x16>
  4056c6:	683f      	ldr	r7, [r7, #0]
  4056c8:	2f00      	cmp	r7, #0
  4056ca:	d1e8      	bne.n	40569e <_fwalk+0xe>
  4056cc:	4630      	mov	r0, r6
  4056ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4056d2:	463e      	mov	r6, r7
  4056d4:	4630      	mov	r0, r6
  4056d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4056da:	bf00      	nop

004056dc <_fwalk_reent>:
  4056dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4056e0:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  4056e4:	d01f      	beq.n	405726 <_fwalk_reent+0x4a>
  4056e6:	4688      	mov	r8, r1
  4056e8:	4606      	mov	r6, r0
  4056ea:	f04f 0900 	mov.w	r9, #0
  4056ee:	687d      	ldr	r5, [r7, #4]
  4056f0:	68bc      	ldr	r4, [r7, #8]
  4056f2:	3d01      	subs	r5, #1
  4056f4:	d411      	bmi.n	40571a <_fwalk_reent+0x3e>
  4056f6:	89a3      	ldrh	r3, [r4, #12]
  4056f8:	2b01      	cmp	r3, #1
  4056fa:	f105 35ff 	add.w	r5, r5, #4294967295
  4056fe:	d908      	bls.n	405712 <_fwalk_reent+0x36>
  405700:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  405704:	3301      	adds	r3, #1
  405706:	4621      	mov	r1, r4
  405708:	4630      	mov	r0, r6
  40570a:	d002      	beq.n	405712 <_fwalk_reent+0x36>
  40570c:	47c0      	blx	r8
  40570e:	ea49 0900 	orr.w	r9, r9, r0
  405712:	1c6b      	adds	r3, r5, #1
  405714:	f104 0468 	add.w	r4, r4, #104	; 0x68
  405718:	d1ed      	bne.n	4056f6 <_fwalk_reent+0x1a>
  40571a:	683f      	ldr	r7, [r7, #0]
  40571c:	2f00      	cmp	r7, #0
  40571e:	d1e6      	bne.n	4056ee <_fwalk_reent+0x12>
  405720:	4648      	mov	r0, r9
  405722:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405726:	46b9      	mov	r9, r7
  405728:	4648      	mov	r0, r9
  40572a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40572e:	bf00      	nop

00405730 <__locale_mb_cur_max>:
  405730:	4b04      	ldr	r3, [pc, #16]	; (405744 <__locale_mb_cur_max+0x14>)
  405732:	4a05      	ldr	r2, [pc, #20]	; (405748 <__locale_mb_cur_max+0x18>)
  405734:	681b      	ldr	r3, [r3, #0]
  405736:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  405738:	2b00      	cmp	r3, #0
  40573a:	bf08      	it	eq
  40573c:	4613      	moveq	r3, r2
  40573e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  405742:	4770      	bx	lr
  405744:	20400018 	.word	0x20400018
  405748:	2040044c 	.word	0x2040044c

0040574c <_localeconv_r>:
  40574c:	4a04      	ldr	r2, [pc, #16]	; (405760 <_localeconv_r+0x14>)
  40574e:	4b05      	ldr	r3, [pc, #20]	; (405764 <_localeconv_r+0x18>)
  405750:	6812      	ldr	r2, [r2, #0]
  405752:	6b50      	ldr	r0, [r2, #52]	; 0x34
  405754:	2800      	cmp	r0, #0
  405756:	bf08      	it	eq
  405758:	4618      	moveq	r0, r3
  40575a:	30f0      	adds	r0, #240	; 0xf0
  40575c:	4770      	bx	lr
  40575e:	bf00      	nop
  405760:	20400018 	.word	0x20400018
  405764:	2040044c 	.word	0x2040044c

00405768 <__retarget_lock_init_recursive>:
  405768:	4770      	bx	lr
  40576a:	bf00      	nop

0040576c <__retarget_lock_close_recursive>:
  40576c:	4770      	bx	lr
  40576e:	bf00      	nop

00405770 <__retarget_lock_acquire_recursive>:
  405770:	4770      	bx	lr
  405772:	bf00      	nop

00405774 <__retarget_lock_release_recursive>:
  405774:	4770      	bx	lr
  405776:	bf00      	nop

00405778 <__swhatbuf_r>:
  405778:	b570      	push	{r4, r5, r6, lr}
  40577a:	460c      	mov	r4, r1
  40577c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405780:	2900      	cmp	r1, #0
  405782:	b090      	sub	sp, #64	; 0x40
  405784:	4615      	mov	r5, r2
  405786:	461e      	mov	r6, r3
  405788:	db14      	blt.n	4057b4 <__swhatbuf_r+0x3c>
  40578a:	aa01      	add	r2, sp, #4
  40578c:	f001 fb36 	bl	406dfc <_fstat_r>
  405790:	2800      	cmp	r0, #0
  405792:	db0f      	blt.n	4057b4 <__swhatbuf_r+0x3c>
  405794:	9a02      	ldr	r2, [sp, #8]
  405796:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  40579a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  40579e:	fab2 f282 	clz	r2, r2
  4057a2:	0952      	lsrs	r2, r2, #5
  4057a4:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4057a8:	f44f 6000 	mov.w	r0, #2048	; 0x800
  4057ac:	6032      	str	r2, [r6, #0]
  4057ae:	602b      	str	r3, [r5, #0]
  4057b0:	b010      	add	sp, #64	; 0x40
  4057b2:	bd70      	pop	{r4, r5, r6, pc}
  4057b4:	89a2      	ldrh	r2, [r4, #12]
  4057b6:	2300      	movs	r3, #0
  4057b8:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  4057bc:	6033      	str	r3, [r6, #0]
  4057be:	d004      	beq.n	4057ca <__swhatbuf_r+0x52>
  4057c0:	2240      	movs	r2, #64	; 0x40
  4057c2:	4618      	mov	r0, r3
  4057c4:	602a      	str	r2, [r5, #0]
  4057c6:	b010      	add	sp, #64	; 0x40
  4057c8:	bd70      	pop	{r4, r5, r6, pc}
  4057ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4057ce:	602b      	str	r3, [r5, #0]
  4057d0:	b010      	add	sp, #64	; 0x40
  4057d2:	bd70      	pop	{r4, r5, r6, pc}

004057d4 <__smakebuf_r>:
  4057d4:	898a      	ldrh	r2, [r1, #12]
  4057d6:	0792      	lsls	r2, r2, #30
  4057d8:	460b      	mov	r3, r1
  4057da:	d506      	bpl.n	4057ea <__smakebuf_r+0x16>
  4057dc:	f101 0243 	add.w	r2, r1, #67	; 0x43
  4057e0:	2101      	movs	r1, #1
  4057e2:	601a      	str	r2, [r3, #0]
  4057e4:	611a      	str	r2, [r3, #16]
  4057e6:	6159      	str	r1, [r3, #20]
  4057e8:	4770      	bx	lr
  4057ea:	b5f0      	push	{r4, r5, r6, r7, lr}
  4057ec:	b083      	sub	sp, #12
  4057ee:	ab01      	add	r3, sp, #4
  4057f0:	466a      	mov	r2, sp
  4057f2:	460c      	mov	r4, r1
  4057f4:	4606      	mov	r6, r0
  4057f6:	f7ff ffbf 	bl	405778 <__swhatbuf_r>
  4057fa:	9900      	ldr	r1, [sp, #0]
  4057fc:	4605      	mov	r5, r0
  4057fe:	4630      	mov	r0, r6
  405800:	f000 f83a 	bl	405878 <_malloc_r>
  405804:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405808:	b1d8      	cbz	r0, 405842 <__smakebuf_r+0x6e>
  40580a:	9a01      	ldr	r2, [sp, #4]
  40580c:	4f15      	ldr	r7, [pc, #84]	; (405864 <__smakebuf_r+0x90>)
  40580e:	9900      	ldr	r1, [sp, #0]
  405810:	63f7      	str	r7, [r6, #60]	; 0x3c
  405812:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  405816:	81a3      	strh	r3, [r4, #12]
  405818:	6020      	str	r0, [r4, #0]
  40581a:	6120      	str	r0, [r4, #16]
  40581c:	6161      	str	r1, [r4, #20]
  40581e:	b91a      	cbnz	r2, 405828 <__smakebuf_r+0x54>
  405820:	432b      	orrs	r3, r5
  405822:	81a3      	strh	r3, [r4, #12]
  405824:	b003      	add	sp, #12
  405826:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405828:	4630      	mov	r0, r6
  40582a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40582e:	f001 faf9 	bl	406e24 <_isatty_r>
  405832:	b1a0      	cbz	r0, 40585e <__smakebuf_r+0x8a>
  405834:	89a3      	ldrh	r3, [r4, #12]
  405836:	f023 0303 	bic.w	r3, r3, #3
  40583a:	f043 0301 	orr.w	r3, r3, #1
  40583e:	b21b      	sxth	r3, r3
  405840:	e7ee      	b.n	405820 <__smakebuf_r+0x4c>
  405842:	059a      	lsls	r2, r3, #22
  405844:	d4ee      	bmi.n	405824 <__smakebuf_r+0x50>
  405846:	f023 0303 	bic.w	r3, r3, #3
  40584a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40584e:	f043 0302 	orr.w	r3, r3, #2
  405852:	2101      	movs	r1, #1
  405854:	81a3      	strh	r3, [r4, #12]
  405856:	6022      	str	r2, [r4, #0]
  405858:	6122      	str	r2, [r4, #16]
  40585a:	6161      	str	r1, [r4, #20]
  40585c:	e7e2      	b.n	405824 <__smakebuf_r+0x50>
  40585e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405862:	e7dd      	b.n	405820 <__smakebuf_r+0x4c>
  405864:	00404f2d 	.word	0x00404f2d

00405868 <malloc>:
  405868:	4b02      	ldr	r3, [pc, #8]	; (405874 <malloc+0xc>)
  40586a:	4601      	mov	r1, r0
  40586c:	6818      	ldr	r0, [r3, #0]
  40586e:	f000 b803 	b.w	405878 <_malloc_r>
  405872:	bf00      	nop
  405874:	20400018 	.word	0x20400018

00405878 <_malloc_r>:
  405878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40587c:	f101 060b 	add.w	r6, r1, #11
  405880:	2e16      	cmp	r6, #22
  405882:	b083      	sub	sp, #12
  405884:	4605      	mov	r5, r0
  405886:	f240 809e 	bls.w	4059c6 <_malloc_r+0x14e>
  40588a:	f036 0607 	bics.w	r6, r6, #7
  40588e:	f100 80bd 	bmi.w	405a0c <_malloc_r+0x194>
  405892:	42b1      	cmp	r1, r6
  405894:	f200 80ba 	bhi.w	405a0c <_malloc_r+0x194>
  405898:	f000 fb6e 	bl	405f78 <__malloc_lock>
  40589c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4058a0:	f0c0 8293 	bcc.w	405dca <_malloc_r+0x552>
  4058a4:	0a73      	lsrs	r3, r6, #9
  4058a6:	f000 80b8 	beq.w	405a1a <_malloc_r+0x1a2>
  4058aa:	2b04      	cmp	r3, #4
  4058ac:	f200 8179 	bhi.w	405ba2 <_malloc_r+0x32a>
  4058b0:	09b3      	lsrs	r3, r6, #6
  4058b2:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4058b6:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4058ba:	00c3      	lsls	r3, r0, #3
  4058bc:	4fbf      	ldr	r7, [pc, #764]	; (405bbc <_malloc_r+0x344>)
  4058be:	443b      	add	r3, r7
  4058c0:	f1a3 0108 	sub.w	r1, r3, #8
  4058c4:	685c      	ldr	r4, [r3, #4]
  4058c6:	42a1      	cmp	r1, r4
  4058c8:	d106      	bne.n	4058d8 <_malloc_r+0x60>
  4058ca:	e00c      	b.n	4058e6 <_malloc_r+0x6e>
  4058cc:	2a00      	cmp	r2, #0
  4058ce:	f280 80aa 	bge.w	405a26 <_malloc_r+0x1ae>
  4058d2:	68e4      	ldr	r4, [r4, #12]
  4058d4:	42a1      	cmp	r1, r4
  4058d6:	d006      	beq.n	4058e6 <_malloc_r+0x6e>
  4058d8:	6863      	ldr	r3, [r4, #4]
  4058da:	f023 0303 	bic.w	r3, r3, #3
  4058de:	1b9a      	subs	r2, r3, r6
  4058e0:	2a0f      	cmp	r2, #15
  4058e2:	ddf3      	ble.n	4058cc <_malloc_r+0x54>
  4058e4:	4670      	mov	r0, lr
  4058e6:	693c      	ldr	r4, [r7, #16]
  4058e8:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 405bd0 <_malloc_r+0x358>
  4058ec:	4574      	cmp	r4, lr
  4058ee:	f000 81ab 	beq.w	405c48 <_malloc_r+0x3d0>
  4058f2:	6863      	ldr	r3, [r4, #4]
  4058f4:	f023 0303 	bic.w	r3, r3, #3
  4058f8:	1b9a      	subs	r2, r3, r6
  4058fa:	2a0f      	cmp	r2, #15
  4058fc:	f300 8190 	bgt.w	405c20 <_malloc_r+0x3a8>
  405900:	2a00      	cmp	r2, #0
  405902:	f8c7 e014 	str.w	lr, [r7, #20]
  405906:	f8c7 e010 	str.w	lr, [r7, #16]
  40590a:	f280 809d 	bge.w	405a48 <_malloc_r+0x1d0>
  40590e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405912:	f080 8161 	bcs.w	405bd8 <_malloc_r+0x360>
  405916:	08db      	lsrs	r3, r3, #3
  405918:	f103 0c01 	add.w	ip, r3, #1
  40591c:	1099      	asrs	r1, r3, #2
  40591e:	687a      	ldr	r2, [r7, #4]
  405920:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  405924:	f8c4 8008 	str.w	r8, [r4, #8]
  405928:	2301      	movs	r3, #1
  40592a:	408b      	lsls	r3, r1
  40592c:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  405930:	4313      	orrs	r3, r2
  405932:	3908      	subs	r1, #8
  405934:	60e1      	str	r1, [r4, #12]
  405936:	607b      	str	r3, [r7, #4]
  405938:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  40593c:	f8c8 400c 	str.w	r4, [r8, #12]
  405940:	1082      	asrs	r2, r0, #2
  405942:	2401      	movs	r4, #1
  405944:	4094      	lsls	r4, r2
  405946:	429c      	cmp	r4, r3
  405948:	f200 808b 	bhi.w	405a62 <_malloc_r+0x1ea>
  40594c:	421c      	tst	r4, r3
  40594e:	d106      	bne.n	40595e <_malloc_r+0xe6>
  405950:	f020 0003 	bic.w	r0, r0, #3
  405954:	0064      	lsls	r4, r4, #1
  405956:	421c      	tst	r4, r3
  405958:	f100 0004 	add.w	r0, r0, #4
  40595c:	d0fa      	beq.n	405954 <_malloc_r+0xdc>
  40595e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  405962:	46cc      	mov	ip, r9
  405964:	4680      	mov	r8, r0
  405966:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40596a:	459c      	cmp	ip, r3
  40596c:	d107      	bne.n	40597e <_malloc_r+0x106>
  40596e:	e16d      	b.n	405c4c <_malloc_r+0x3d4>
  405970:	2a00      	cmp	r2, #0
  405972:	f280 817b 	bge.w	405c6c <_malloc_r+0x3f4>
  405976:	68db      	ldr	r3, [r3, #12]
  405978:	459c      	cmp	ip, r3
  40597a:	f000 8167 	beq.w	405c4c <_malloc_r+0x3d4>
  40597e:	6859      	ldr	r1, [r3, #4]
  405980:	f021 0103 	bic.w	r1, r1, #3
  405984:	1b8a      	subs	r2, r1, r6
  405986:	2a0f      	cmp	r2, #15
  405988:	ddf2      	ble.n	405970 <_malloc_r+0xf8>
  40598a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40598e:	f8d3 8008 	ldr.w	r8, [r3, #8]
  405992:	9300      	str	r3, [sp, #0]
  405994:	199c      	adds	r4, r3, r6
  405996:	4628      	mov	r0, r5
  405998:	f046 0601 	orr.w	r6, r6, #1
  40599c:	f042 0501 	orr.w	r5, r2, #1
  4059a0:	605e      	str	r6, [r3, #4]
  4059a2:	f8c8 c00c 	str.w	ip, [r8, #12]
  4059a6:	f8cc 8008 	str.w	r8, [ip, #8]
  4059aa:	617c      	str	r4, [r7, #20]
  4059ac:	613c      	str	r4, [r7, #16]
  4059ae:	f8c4 e00c 	str.w	lr, [r4, #12]
  4059b2:	f8c4 e008 	str.w	lr, [r4, #8]
  4059b6:	6065      	str	r5, [r4, #4]
  4059b8:	505a      	str	r2, [r3, r1]
  4059ba:	f000 fae3 	bl	405f84 <__malloc_unlock>
  4059be:	9b00      	ldr	r3, [sp, #0]
  4059c0:	f103 0408 	add.w	r4, r3, #8
  4059c4:	e01e      	b.n	405a04 <_malloc_r+0x18c>
  4059c6:	2910      	cmp	r1, #16
  4059c8:	d820      	bhi.n	405a0c <_malloc_r+0x194>
  4059ca:	f000 fad5 	bl	405f78 <__malloc_lock>
  4059ce:	2610      	movs	r6, #16
  4059d0:	2318      	movs	r3, #24
  4059d2:	2002      	movs	r0, #2
  4059d4:	4f79      	ldr	r7, [pc, #484]	; (405bbc <_malloc_r+0x344>)
  4059d6:	443b      	add	r3, r7
  4059d8:	f1a3 0208 	sub.w	r2, r3, #8
  4059dc:	685c      	ldr	r4, [r3, #4]
  4059de:	4294      	cmp	r4, r2
  4059e0:	f000 813d 	beq.w	405c5e <_malloc_r+0x3e6>
  4059e4:	6863      	ldr	r3, [r4, #4]
  4059e6:	68e1      	ldr	r1, [r4, #12]
  4059e8:	68a6      	ldr	r6, [r4, #8]
  4059ea:	f023 0303 	bic.w	r3, r3, #3
  4059ee:	4423      	add	r3, r4
  4059f0:	4628      	mov	r0, r5
  4059f2:	685a      	ldr	r2, [r3, #4]
  4059f4:	60f1      	str	r1, [r6, #12]
  4059f6:	f042 0201 	orr.w	r2, r2, #1
  4059fa:	608e      	str	r6, [r1, #8]
  4059fc:	605a      	str	r2, [r3, #4]
  4059fe:	f000 fac1 	bl	405f84 <__malloc_unlock>
  405a02:	3408      	adds	r4, #8
  405a04:	4620      	mov	r0, r4
  405a06:	b003      	add	sp, #12
  405a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a0c:	2400      	movs	r4, #0
  405a0e:	230c      	movs	r3, #12
  405a10:	4620      	mov	r0, r4
  405a12:	602b      	str	r3, [r5, #0]
  405a14:	b003      	add	sp, #12
  405a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a1a:	2040      	movs	r0, #64	; 0x40
  405a1c:	f44f 7300 	mov.w	r3, #512	; 0x200
  405a20:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  405a24:	e74a      	b.n	4058bc <_malloc_r+0x44>
  405a26:	4423      	add	r3, r4
  405a28:	68e1      	ldr	r1, [r4, #12]
  405a2a:	685a      	ldr	r2, [r3, #4]
  405a2c:	68a6      	ldr	r6, [r4, #8]
  405a2e:	f042 0201 	orr.w	r2, r2, #1
  405a32:	60f1      	str	r1, [r6, #12]
  405a34:	4628      	mov	r0, r5
  405a36:	608e      	str	r6, [r1, #8]
  405a38:	605a      	str	r2, [r3, #4]
  405a3a:	f000 faa3 	bl	405f84 <__malloc_unlock>
  405a3e:	3408      	adds	r4, #8
  405a40:	4620      	mov	r0, r4
  405a42:	b003      	add	sp, #12
  405a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a48:	4423      	add	r3, r4
  405a4a:	4628      	mov	r0, r5
  405a4c:	685a      	ldr	r2, [r3, #4]
  405a4e:	f042 0201 	orr.w	r2, r2, #1
  405a52:	605a      	str	r2, [r3, #4]
  405a54:	f000 fa96 	bl	405f84 <__malloc_unlock>
  405a58:	3408      	adds	r4, #8
  405a5a:	4620      	mov	r0, r4
  405a5c:	b003      	add	sp, #12
  405a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a62:	68bc      	ldr	r4, [r7, #8]
  405a64:	6863      	ldr	r3, [r4, #4]
  405a66:	f023 0803 	bic.w	r8, r3, #3
  405a6a:	45b0      	cmp	r8, r6
  405a6c:	d304      	bcc.n	405a78 <_malloc_r+0x200>
  405a6e:	eba8 0306 	sub.w	r3, r8, r6
  405a72:	2b0f      	cmp	r3, #15
  405a74:	f300 8085 	bgt.w	405b82 <_malloc_r+0x30a>
  405a78:	f8df 9158 	ldr.w	r9, [pc, #344]	; 405bd4 <_malloc_r+0x35c>
  405a7c:	4b50      	ldr	r3, [pc, #320]	; (405bc0 <_malloc_r+0x348>)
  405a7e:	f8d9 2000 	ldr.w	r2, [r9]
  405a82:	681b      	ldr	r3, [r3, #0]
  405a84:	3201      	adds	r2, #1
  405a86:	4433      	add	r3, r6
  405a88:	eb04 0a08 	add.w	sl, r4, r8
  405a8c:	f000 8155 	beq.w	405d3a <_malloc_r+0x4c2>
  405a90:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  405a94:	330f      	adds	r3, #15
  405a96:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  405a9a:	f02b 0b0f 	bic.w	fp, fp, #15
  405a9e:	4659      	mov	r1, fp
  405aa0:	4628      	mov	r0, r5
  405aa2:	f000 ffa9 	bl	4069f8 <_sbrk_r>
  405aa6:	1c41      	adds	r1, r0, #1
  405aa8:	4602      	mov	r2, r0
  405aaa:	f000 80fc 	beq.w	405ca6 <_malloc_r+0x42e>
  405aae:	4582      	cmp	sl, r0
  405ab0:	f200 80f7 	bhi.w	405ca2 <_malloc_r+0x42a>
  405ab4:	4b43      	ldr	r3, [pc, #268]	; (405bc4 <_malloc_r+0x34c>)
  405ab6:	6819      	ldr	r1, [r3, #0]
  405ab8:	4459      	add	r1, fp
  405aba:	6019      	str	r1, [r3, #0]
  405abc:	f000 814d 	beq.w	405d5a <_malloc_r+0x4e2>
  405ac0:	f8d9 0000 	ldr.w	r0, [r9]
  405ac4:	3001      	adds	r0, #1
  405ac6:	bf1b      	ittet	ne
  405ac8:	eba2 0a0a 	subne.w	sl, r2, sl
  405acc:	4451      	addne	r1, sl
  405ace:	f8c9 2000 	streq.w	r2, [r9]
  405ad2:	6019      	strne	r1, [r3, #0]
  405ad4:	f012 0107 	ands.w	r1, r2, #7
  405ad8:	f000 8115 	beq.w	405d06 <_malloc_r+0x48e>
  405adc:	f1c1 0008 	rsb	r0, r1, #8
  405ae0:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  405ae4:	4402      	add	r2, r0
  405ae6:	3108      	adds	r1, #8
  405ae8:	eb02 090b 	add.w	r9, r2, fp
  405aec:	f3c9 090b 	ubfx	r9, r9, #0, #12
  405af0:	eba1 0909 	sub.w	r9, r1, r9
  405af4:	4649      	mov	r1, r9
  405af6:	4628      	mov	r0, r5
  405af8:	9301      	str	r3, [sp, #4]
  405afa:	9200      	str	r2, [sp, #0]
  405afc:	f000 ff7c 	bl	4069f8 <_sbrk_r>
  405b00:	1c43      	adds	r3, r0, #1
  405b02:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405b06:	f000 8143 	beq.w	405d90 <_malloc_r+0x518>
  405b0a:	1a80      	subs	r0, r0, r2
  405b0c:	4448      	add	r0, r9
  405b0e:	f040 0001 	orr.w	r0, r0, #1
  405b12:	6819      	ldr	r1, [r3, #0]
  405b14:	60ba      	str	r2, [r7, #8]
  405b16:	4449      	add	r1, r9
  405b18:	42bc      	cmp	r4, r7
  405b1a:	6050      	str	r0, [r2, #4]
  405b1c:	6019      	str	r1, [r3, #0]
  405b1e:	d017      	beq.n	405b50 <_malloc_r+0x2d8>
  405b20:	f1b8 0f0f 	cmp.w	r8, #15
  405b24:	f240 80fb 	bls.w	405d1e <_malloc_r+0x4a6>
  405b28:	6860      	ldr	r0, [r4, #4]
  405b2a:	f1a8 020c 	sub.w	r2, r8, #12
  405b2e:	f022 0207 	bic.w	r2, r2, #7
  405b32:	eb04 0e02 	add.w	lr, r4, r2
  405b36:	f000 0001 	and.w	r0, r0, #1
  405b3a:	f04f 0c05 	mov.w	ip, #5
  405b3e:	4310      	orrs	r0, r2
  405b40:	2a0f      	cmp	r2, #15
  405b42:	6060      	str	r0, [r4, #4]
  405b44:	f8ce c004 	str.w	ip, [lr, #4]
  405b48:	f8ce c008 	str.w	ip, [lr, #8]
  405b4c:	f200 8117 	bhi.w	405d7e <_malloc_r+0x506>
  405b50:	4b1d      	ldr	r3, [pc, #116]	; (405bc8 <_malloc_r+0x350>)
  405b52:	68bc      	ldr	r4, [r7, #8]
  405b54:	681a      	ldr	r2, [r3, #0]
  405b56:	4291      	cmp	r1, r2
  405b58:	bf88      	it	hi
  405b5a:	6019      	strhi	r1, [r3, #0]
  405b5c:	4b1b      	ldr	r3, [pc, #108]	; (405bcc <_malloc_r+0x354>)
  405b5e:	681a      	ldr	r2, [r3, #0]
  405b60:	4291      	cmp	r1, r2
  405b62:	6862      	ldr	r2, [r4, #4]
  405b64:	bf88      	it	hi
  405b66:	6019      	strhi	r1, [r3, #0]
  405b68:	f022 0203 	bic.w	r2, r2, #3
  405b6c:	4296      	cmp	r6, r2
  405b6e:	eba2 0306 	sub.w	r3, r2, r6
  405b72:	d801      	bhi.n	405b78 <_malloc_r+0x300>
  405b74:	2b0f      	cmp	r3, #15
  405b76:	dc04      	bgt.n	405b82 <_malloc_r+0x30a>
  405b78:	4628      	mov	r0, r5
  405b7a:	f000 fa03 	bl	405f84 <__malloc_unlock>
  405b7e:	2400      	movs	r4, #0
  405b80:	e740      	b.n	405a04 <_malloc_r+0x18c>
  405b82:	19a2      	adds	r2, r4, r6
  405b84:	f043 0301 	orr.w	r3, r3, #1
  405b88:	f046 0601 	orr.w	r6, r6, #1
  405b8c:	6066      	str	r6, [r4, #4]
  405b8e:	4628      	mov	r0, r5
  405b90:	60ba      	str	r2, [r7, #8]
  405b92:	6053      	str	r3, [r2, #4]
  405b94:	f000 f9f6 	bl	405f84 <__malloc_unlock>
  405b98:	3408      	adds	r4, #8
  405b9a:	4620      	mov	r0, r4
  405b9c:	b003      	add	sp, #12
  405b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405ba2:	2b14      	cmp	r3, #20
  405ba4:	d971      	bls.n	405c8a <_malloc_r+0x412>
  405ba6:	2b54      	cmp	r3, #84	; 0x54
  405ba8:	f200 80a3 	bhi.w	405cf2 <_malloc_r+0x47a>
  405bac:	0b33      	lsrs	r3, r6, #12
  405bae:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  405bb2:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  405bb6:	00c3      	lsls	r3, r0, #3
  405bb8:	e680      	b.n	4058bc <_malloc_r+0x44>
  405bba:	bf00      	nop
  405bbc:	204005b8 	.word	0x204005b8
  405bc0:	204015c8 	.word	0x204015c8
  405bc4:	20401598 	.word	0x20401598
  405bc8:	204015c0 	.word	0x204015c0
  405bcc:	204015c4 	.word	0x204015c4
  405bd0:	204005c0 	.word	0x204005c0
  405bd4:	204009c0 	.word	0x204009c0
  405bd8:	0a5a      	lsrs	r2, r3, #9
  405bda:	2a04      	cmp	r2, #4
  405bdc:	d95b      	bls.n	405c96 <_malloc_r+0x41e>
  405bde:	2a14      	cmp	r2, #20
  405be0:	f200 80ae 	bhi.w	405d40 <_malloc_r+0x4c8>
  405be4:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  405be8:	00c9      	lsls	r1, r1, #3
  405bea:	325b      	adds	r2, #91	; 0x5b
  405bec:	eb07 0c01 	add.w	ip, r7, r1
  405bf0:	5879      	ldr	r1, [r7, r1]
  405bf2:	f1ac 0c08 	sub.w	ip, ip, #8
  405bf6:	458c      	cmp	ip, r1
  405bf8:	f000 8088 	beq.w	405d0c <_malloc_r+0x494>
  405bfc:	684a      	ldr	r2, [r1, #4]
  405bfe:	f022 0203 	bic.w	r2, r2, #3
  405c02:	4293      	cmp	r3, r2
  405c04:	d273      	bcs.n	405cee <_malloc_r+0x476>
  405c06:	6889      	ldr	r1, [r1, #8]
  405c08:	458c      	cmp	ip, r1
  405c0a:	d1f7      	bne.n	405bfc <_malloc_r+0x384>
  405c0c:	f8dc 200c 	ldr.w	r2, [ip, #12]
  405c10:	687b      	ldr	r3, [r7, #4]
  405c12:	60e2      	str	r2, [r4, #12]
  405c14:	f8c4 c008 	str.w	ip, [r4, #8]
  405c18:	6094      	str	r4, [r2, #8]
  405c1a:	f8cc 400c 	str.w	r4, [ip, #12]
  405c1e:	e68f      	b.n	405940 <_malloc_r+0xc8>
  405c20:	19a1      	adds	r1, r4, r6
  405c22:	f046 0c01 	orr.w	ip, r6, #1
  405c26:	f042 0601 	orr.w	r6, r2, #1
  405c2a:	f8c4 c004 	str.w	ip, [r4, #4]
  405c2e:	4628      	mov	r0, r5
  405c30:	6179      	str	r1, [r7, #20]
  405c32:	6139      	str	r1, [r7, #16]
  405c34:	f8c1 e00c 	str.w	lr, [r1, #12]
  405c38:	f8c1 e008 	str.w	lr, [r1, #8]
  405c3c:	604e      	str	r6, [r1, #4]
  405c3e:	50e2      	str	r2, [r4, r3]
  405c40:	f000 f9a0 	bl	405f84 <__malloc_unlock>
  405c44:	3408      	adds	r4, #8
  405c46:	e6dd      	b.n	405a04 <_malloc_r+0x18c>
  405c48:	687b      	ldr	r3, [r7, #4]
  405c4a:	e679      	b.n	405940 <_malloc_r+0xc8>
  405c4c:	f108 0801 	add.w	r8, r8, #1
  405c50:	f018 0f03 	tst.w	r8, #3
  405c54:	f10c 0c08 	add.w	ip, ip, #8
  405c58:	f47f ae85 	bne.w	405966 <_malloc_r+0xee>
  405c5c:	e02d      	b.n	405cba <_malloc_r+0x442>
  405c5e:	68dc      	ldr	r4, [r3, #12]
  405c60:	42a3      	cmp	r3, r4
  405c62:	bf08      	it	eq
  405c64:	3002      	addeq	r0, #2
  405c66:	f43f ae3e 	beq.w	4058e6 <_malloc_r+0x6e>
  405c6a:	e6bb      	b.n	4059e4 <_malloc_r+0x16c>
  405c6c:	4419      	add	r1, r3
  405c6e:	461c      	mov	r4, r3
  405c70:	684a      	ldr	r2, [r1, #4]
  405c72:	68db      	ldr	r3, [r3, #12]
  405c74:	f854 6f08 	ldr.w	r6, [r4, #8]!
  405c78:	f042 0201 	orr.w	r2, r2, #1
  405c7c:	604a      	str	r2, [r1, #4]
  405c7e:	4628      	mov	r0, r5
  405c80:	60f3      	str	r3, [r6, #12]
  405c82:	609e      	str	r6, [r3, #8]
  405c84:	f000 f97e 	bl	405f84 <__malloc_unlock>
  405c88:	e6bc      	b.n	405a04 <_malloc_r+0x18c>
  405c8a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  405c8e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  405c92:	00c3      	lsls	r3, r0, #3
  405c94:	e612      	b.n	4058bc <_malloc_r+0x44>
  405c96:	099a      	lsrs	r2, r3, #6
  405c98:	f102 0139 	add.w	r1, r2, #57	; 0x39
  405c9c:	00c9      	lsls	r1, r1, #3
  405c9e:	3238      	adds	r2, #56	; 0x38
  405ca0:	e7a4      	b.n	405bec <_malloc_r+0x374>
  405ca2:	42bc      	cmp	r4, r7
  405ca4:	d054      	beq.n	405d50 <_malloc_r+0x4d8>
  405ca6:	68bc      	ldr	r4, [r7, #8]
  405ca8:	6862      	ldr	r2, [r4, #4]
  405caa:	f022 0203 	bic.w	r2, r2, #3
  405cae:	e75d      	b.n	405b6c <_malloc_r+0x2f4>
  405cb0:	f859 3908 	ldr.w	r3, [r9], #-8
  405cb4:	4599      	cmp	r9, r3
  405cb6:	f040 8086 	bne.w	405dc6 <_malloc_r+0x54e>
  405cba:	f010 0f03 	tst.w	r0, #3
  405cbe:	f100 30ff 	add.w	r0, r0, #4294967295
  405cc2:	d1f5      	bne.n	405cb0 <_malloc_r+0x438>
  405cc4:	687b      	ldr	r3, [r7, #4]
  405cc6:	ea23 0304 	bic.w	r3, r3, r4
  405cca:	607b      	str	r3, [r7, #4]
  405ccc:	0064      	lsls	r4, r4, #1
  405cce:	429c      	cmp	r4, r3
  405cd0:	f63f aec7 	bhi.w	405a62 <_malloc_r+0x1ea>
  405cd4:	2c00      	cmp	r4, #0
  405cd6:	f43f aec4 	beq.w	405a62 <_malloc_r+0x1ea>
  405cda:	421c      	tst	r4, r3
  405cdc:	4640      	mov	r0, r8
  405cde:	f47f ae3e 	bne.w	40595e <_malloc_r+0xe6>
  405ce2:	0064      	lsls	r4, r4, #1
  405ce4:	421c      	tst	r4, r3
  405ce6:	f100 0004 	add.w	r0, r0, #4
  405cea:	d0fa      	beq.n	405ce2 <_malloc_r+0x46a>
  405cec:	e637      	b.n	40595e <_malloc_r+0xe6>
  405cee:	468c      	mov	ip, r1
  405cf0:	e78c      	b.n	405c0c <_malloc_r+0x394>
  405cf2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  405cf6:	d815      	bhi.n	405d24 <_malloc_r+0x4ac>
  405cf8:	0bf3      	lsrs	r3, r6, #15
  405cfa:	f103 0078 	add.w	r0, r3, #120	; 0x78
  405cfe:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  405d02:	00c3      	lsls	r3, r0, #3
  405d04:	e5da      	b.n	4058bc <_malloc_r+0x44>
  405d06:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  405d0a:	e6ed      	b.n	405ae8 <_malloc_r+0x270>
  405d0c:	687b      	ldr	r3, [r7, #4]
  405d0e:	1092      	asrs	r2, r2, #2
  405d10:	2101      	movs	r1, #1
  405d12:	fa01 f202 	lsl.w	r2, r1, r2
  405d16:	4313      	orrs	r3, r2
  405d18:	607b      	str	r3, [r7, #4]
  405d1a:	4662      	mov	r2, ip
  405d1c:	e779      	b.n	405c12 <_malloc_r+0x39a>
  405d1e:	2301      	movs	r3, #1
  405d20:	6053      	str	r3, [r2, #4]
  405d22:	e729      	b.n	405b78 <_malloc_r+0x300>
  405d24:	f240 5254 	movw	r2, #1364	; 0x554
  405d28:	4293      	cmp	r3, r2
  405d2a:	d822      	bhi.n	405d72 <_malloc_r+0x4fa>
  405d2c:	0cb3      	lsrs	r3, r6, #18
  405d2e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  405d32:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  405d36:	00c3      	lsls	r3, r0, #3
  405d38:	e5c0      	b.n	4058bc <_malloc_r+0x44>
  405d3a:	f103 0b10 	add.w	fp, r3, #16
  405d3e:	e6ae      	b.n	405a9e <_malloc_r+0x226>
  405d40:	2a54      	cmp	r2, #84	; 0x54
  405d42:	d829      	bhi.n	405d98 <_malloc_r+0x520>
  405d44:	0b1a      	lsrs	r2, r3, #12
  405d46:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  405d4a:	00c9      	lsls	r1, r1, #3
  405d4c:	326e      	adds	r2, #110	; 0x6e
  405d4e:	e74d      	b.n	405bec <_malloc_r+0x374>
  405d50:	4b20      	ldr	r3, [pc, #128]	; (405dd4 <_malloc_r+0x55c>)
  405d52:	6819      	ldr	r1, [r3, #0]
  405d54:	4459      	add	r1, fp
  405d56:	6019      	str	r1, [r3, #0]
  405d58:	e6b2      	b.n	405ac0 <_malloc_r+0x248>
  405d5a:	f3ca 000b 	ubfx	r0, sl, #0, #12
  405d5e:	2800      	cmp	r0, #0
  405d60:	f47f aeae 	bne.w	405ac0 <_malloc_r+0x248>
  405d64:	eb08 030b 	add.w	r3, r8, fp
  405d68:	68ba      	ldr	r2, [r7, #8]
  405d6a:	f043 0301 	orr.w	r3, r3, #1
  405d6e:	6053      	str	r3, [r2, #4]
  405d70:	e6ee      	b.n	405b50 <_malloc_r+0x2d8>
  405d72:	207f      	movs	r0, #127	; 0x7f
  405d74:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  405d78:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  405d7c:	e59e      	b.n	4058bc <_malloc_r+0x44>
  405d7e:	f104 0108 	add.w	r1, r4, #8
  405d82:	4628      	mov	r0, r5
  405d84:	9300      	str	r3, [sp, #0]
  405d86:	f7ff fa25 	bl	4051d4 <_free_r>
  405d8a:	9b00      	ldr	r3, [sp, #0]
  405d8c:	6819      	ldr	r1, [r3, #0]
  405d8e:	e6df      	b.n	405b50 <_malloc_r+0x2d8>
  405d90:	2001      	movs	r0, #1
  405d92:	f04f 0900 	mov.w	r9, #0
  405d96:	e6bc      	b.n	405b12 <_malloc_r+0x29a>
  405d98:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405d9c:	d805      	bhi.n	405daa <_malloc_r+0x532>
  405d9e:	0bda      	lsrs	r2, r3, #15
  405da0:	f102 0178 	add.w	r1, r2, #120	; 0x78
  405da4:	00c9      	lsls	r1, r1, #3
  405da6:	3277      	adds	r2, #119	; 0x77
  405da8:	e720      	b.n	405bec <_malloc_r+0x374>
  405daa:	f240 5154 	movw	r1, #1364	; 0x554
  405dae:	428a      	cmp	r2, r1
  405db0:	d805      	bhi.n	405dbe <_malloc_r+0x546>
  405db2:	0c9a      	lsrs	r2, r3, #18
  405db4:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  405db8:	00c9      	lsls	r1, r1, #3
  405dba:	327c      	adds	r2, #124	; 0x7c
  405dbc:	e716      	b.n	405bec <_malloc_r+0x374>
  405dbe:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  405dc2:	227e      	movs	r2, #126	; 0x7e
  405dc4:	e712      	b.n	405bec <_malloc_r+0x374>
  405dc6:	687b      	ldr	r3, [r7, #4]
  405dc8:	e780      	b.n	405ccc <_malloc_r+0x454>
  405dca:	08f0      	lsrs	r0, r6, #3
  405dcc:	f106 0308 	add.w	r3, r6, #8
  405dd0:	e600      	b.n	4059d4 <_malloc_r+0x15c>
  405dd2:	bf00      	nop
  405dd4:	20401598 	.word	0x20401598

00405dd8 <__ascii_mbtowc>:
  405dd8:	b082      	sub	sp, #8
  405dda:	b149      	cbz	r1, 405df0 <__ascii_mbtowc+0x18>
  405ddc:	b15a      	cbz	r2, 405df6 <__ascii_mbtowc+0x1e>
  405dde:	b16b      	cbz	r3, 405dfc <__ascii_mbtowc+0x24>
  405de0:	7813      	ldrb	r3, [r2, #0]
  405de2:	600b      	str	r3, [r1, #0]
  405de4:	7812      	ldrb	r2, [r2, #0]
  405de6:	1c10      	adds	r0, r2, #0
  405de8:	bf18      	it	ne
  405dea:	2001      	movne	r0, #1
  405dec:	b002      	add	sp, #8
  405dee:	4770      	bx	lr
  405df0:	a901      	add	r1, sp, #4
  405df2:	2a00      	cmp	r2, #0
  405df4:	d1f3      	bne.n	405dde <__ascii_mbtowc+0x6>
  405df6:	4610      	mov	r0, r2
  405df8:	b002      	add	sp, #8
  405dfa:	4770      	bx	lr
  405dfc:	f06f 0001 	mvn.w	r0, #1
  405e00:	e7f4      	b.n	405dec <__ascii_mbtowc+0x14>
  405e02:	bf00      	nop
	...

00405e10 <memchr>:
  405e10:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  405e14:	2a10      	cmp	r2, #16
  405e16:	db2b      	blt.n	405e70 <memchr+0x60>
  405e18:	f010 0f07 	tst.w	r0, #7
  405e1c:	d008      	beq.n	405e30 <memchr+0x20>
  405e1e:	f810 3b01 	ldrb.w	r3, [r0], #1
  405e22:	3a01      	subs	r2, #1
  405e24:	428b      	cmp	r3, r1
  405e26:	d02d      	beq.n	405e84 <memchr+0x74>
  405e28:	f010 0f07 	tst.w	r0, #7
  405e2c:	b342      	cbz	r2, 405e80 <memchr+0x70>
  405e2e:	d1f6      	bne.n	405e1e <memchr+0xe>
  405e30:	b4f0      	push	{r4, r5, r6, r7}
  405e32:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  405e36:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  405e3a:	f022 0407 	bic.w	r4, r2, #7
  405e3e:	f07f 0700 	mvns.w	r7, #0
  405e42:	2300      	movs	r3, #0
  405e44:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  405e48:	3c08      	subs	r4, #8
  405e4a:	ea85 0501 	eor.w	r5, r5, r1
  405e4e:	ea86 0601 	eor.w	r6, r6, r1
  405e52:	fa85 f547 	uadd8	r5, r5, r7
  405e56:	faa3 f587 	sel	r5, r3, r7
  405e5a:	fa86 f647 	uadd8	r6, r6, r7
  405e5e:	faa5 f687 	sel	r6, r5, r7
  405e62:	b98e      	cbnz	r6, 405e88 <memchr+0x78>
  405e64:	d1ee      	bne.n	405e44 <memchr+0x34>
  405e66:	bcf0      	pop	{r4, r5, r6, r7}
  405e68:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  405e6c:	f002 0207 	and.w	r2, r2, #7
  405e70:	b132      	cbz	r2, 405e80 <memchr+0x70>
  405e72:	f810 3b01 	ldrb.w	r3, [r0], #1
  405e76:	3a01      	subs	r2, #1
  405e78:	ea83 0301 	eor.w	r3, r3, r1
  405e7c:	b113      	cbz	r3, 405e84 <memchr+0x74>
  405e7e:	d1f8      	bne.n	405e72 <memchr+0x62>
  405e80:	2000      	movs	r0, #0
  405e82:	4770      	bx	lr
  405e84:	3801      	subs	r0, #1
  405e86:	4770      	bx	lr
  405e88:	2d00      	cmp	r5, #0
  405e8a:	bf06      	itte	eq
  405e8c:	4635      	moveq	r5, r6
  405e8e:	3803      	subeq	r0, #3
  405e90:	3807      	subne	r0, #7
  405e92:	f015 0f01 	tst.w	r5, #1
  405e96:	d107      	bne.n	405ea8 <memchr+0x98>
  405e98:	3001      	adds	r0, #1
  405e9a:	f415 7f80 	tst.w	r5, #256	; 0x100
  405e9e:	bf02      	ittt	eq
  405ea0:	3001      	addeq	r0, #1
  405ea2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  405ea6:	3001      	addeq	r0, #1
  405ea8:	bcf0      	pop	{r4, r5, r6, r7}
  405eaa:	3801      	subs	r0, #1
  405eac:	4770      	bx	lr
  405eae:	bf00      	nop

00405eb0 <memmove>:
  405eb0:	4288      	cmp	r0, r1
  405eb2:	b5f0      	push	{r4, r5, r6, r7, lr}
  405eb4:	d90d      	bls.n	405ed2 <memmove+0x22>
  405eb6:	188b      	adds	r3, r1, r2
  405eb8:	4298      	cmp	r0, r3
  405eba:	d20a      	bcs.n	405ed2 <memmove+0x22>
  405ebc:	1884      	adds	r4, r0, r2
  405ebe:	2a00      	cmp	r2, #0
  405ec0:	d051      	beq.n	405f66 <memmove+0xb6>
  405ec2:	4622      	mov	r2, r4
  405ec4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405ec8:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405ecc:	4299      	cmp	r1, r3
  405ece:	d1f9      	bne.n	405ec4 <memmove+0x14>
  405ed0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405ed2:	2a0f      	cmp	r2, #15
  405ed4:	d948      	bls.n	405f68 <memmove+0xb8>
  405ed6:	ea41 0300 	orr.w	r3, r1, r0
  405eda:	079b      	lsls	r3, r3, #30
  405edc:	d146      	bne.n	405f6c <memmove+0xbc>
  405ede:	f100 0410 	add.w	r4, r0, #16
  405ee2:	f101 0310 	add.w	r3, r1, #16
  405ee6:	4615      	mov	r5, r2
  405ee8:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405eec:	f844 6c10 	str.w	r6, [r4, #-16]
  405ef0:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405ef4:	f844 6c0c 	str.w	r6, [r4, #-12]
  405ef8:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405efc:	f844 6c08 	str.w	r6, [r4, #-8]
  405f00:	3d10      	subs	r5, #16
  405f02:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405f06:	f844 6c04 	str.w	r6, [r4, #-4]
  405f0a:	2d0f      	cmp	r5, #15
  405f0c:	f103 0310 	add.w	r3, r3, #16
  405f10:	f104 0410 	add.w	r4, r4, #16
  405f14:	d8e8      	bhi.n	405ee8 <memmove+0x38>
  405f16:	f1a2 0310 	sub.w	r3, r2, #16
  405f1a:	f023 030f 	bic.w	r3, r3, #15
  405f1e:	f002 0e0f 	and.w	lr, r2, #15
  405f22:	3310      	adds	r3, #16
  405f24:	f1be 0f03 	cmp.w	lr, #3
  405f28:	4419      	add	r1, r3
  405f2a:	4403      	add	r3, r0
  405f2c:	d921      	bls.n	405f72 <memmove+0xc2>
  405f2e:	1f1e      	subs	r6, r3, #4
  405f30:	460d      	mov	r5, r1
  405f32:	4674      	mov	r4, lr
  405f34:	3c04      	subs	r4, #4
  405f36:	f855 7b04 	ldr.w	r7, [r5], #4
  405f3a:	f846 7f04 	str.w	r7, [r6, #4]!
  405f3e:	2c03      	cmp	r4, #3
  405f40:	d8f8      	bhi.n	405f34 <memmove+0x84>
  405f42:	f1ae 0404 	sub.w	r4, lr, #4
  405f46:	f024 0403 	bic.w	r4, r4, #3
  405f4a:	3404      	adds	r4, #4
  405f4c:	4421      	add	r1, r4
  405f4e:	4423      	add	r3, r4
  405f50:	f002 0203 	and.w	r2, r2, #3
  405f54:	b162      	cbz	r2, 405f70 <memmove+0xc0>
  405f56:	3b01      	subs	r3, #1
  405f58:	440a      	add	r2, r1
  405f5a:	f811 4b01 	ldrb.w	r4, [r1], #1
  405f5e:	f803 4f01 	strb.w	r4, [r3, #1]!
  405f62:	428a      	cmp	r2, r1
  405f64:	d1f9      	bne.n	405f5a <memmove+0xaa>
  405f66:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405f68:	4603      	mov	r3, r0
  405f6a:	e7f3      	b.n	405f54 <memmove+0xa4>
  405f6c:	4603      	mov	r3, r0
  405f6e:	e7f2      	b.n	405f56 <memmove+0xa6>
  405f70:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405f72:	4672      	mov	r2, lr
  405f74:	e7ee      	b.n	405f54 <memmove+0xa4>
  405f76:	bf00      	nop

00405f78 <__malloc_lock>:
  405f78:	4801      	ldr	r0, [pc, #4]	; (405f80 <__malloc_lock+0x8>)
  405f7a:	f7ff bbf9 	b.w	405770 <__retarget_lock_acquire_recursive>
  405f7e:	bf00      	nop
  405f80:	20401668 	.word	0x20401668

00405f84 <__malloc_unlock>:
  405f84:	4801      	ldr	r0, [pc, #4]	; (405f8c <__malloc_unlock+0x8>)
  405f86:	f7ff bbf5 	b.w	405774 <__retarget_lock_release_recursive>
  405f8a:	bf00      	nop
  405f8c:	20401668 	.word	0x20401668

00405f90 <_Balloc>:
  405f90:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405f92:	b570      	push	{r4, r5, r6, lr}
  405f94:	4605      	mov	r5, r0
  405f96:	460c      	mov	r4, r1
  405f98:	b14b      	cbz	r3, 405fae <_Balloc+0x1e>
  405f9a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  405f9e:	b180      	cbz	r0, 405fc2 <_Balloc+0x32>
  405fa0:	6802      	ldr	r2, [r0, #0]
  405fa2:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  405fa6:	2300      	movs	r3, #0
  405fa8:	6103      	str	r3, [r0, #16]
  405faa:	60c3      	str	r3, [r0, #12]
  405fac:	bd70      	pop	{r4, r5, r6, pc}
  405fae:	2221      	movs	r2, #33	; 0x21
  405fb0:	2104      	movs	r1, #4
  405fb2:	f000 fe7f 	bl	406cb4 <_calloc_r>
  405fb6:	64e8      	str	r0, [r5, #76]	; 0x4c
  405fb8:	4603      	mov	r3, r0
  405fba:	2800      	cmp	r0, #0
  405fbc:	d1ed      	bne.n	405f9a <_Balloc+0xa>
  405fbe:	2000      	movs	r0, #0
  405fc0:	bd70      	pop	{r4, r5, r6, pc}
  405fc2:	2101      	movs	r1, #1
  405fc4:	fa01 f604 	lsl.w	r6, r1, r4
  405fc8:	1d72      	adds	r2, r6, #5
  405fca:	4628      	mov	r0, r5
  405fcc:	0092      	lsls	r2, r2, #2
  405fce:	f000 fe71 	bl	406cb4 <_calloc_r>
  405fd2:	2800      	cmp	r0, #0
  405fd4:	d0f3      	beq.n	405fbe <_Balloc+0x2e>
  405fd6:	6044      	str	r4, [r0, #4]
  405fd8:	6086      	str	r6, [r0, #8]
  405fda:	e7e4      	b.n	405fa6 <_Balloc+0x16>

00405fdc <_Bfree>:
  405fdc:	b131      	cbz	r1, 405fec <_Bfree+0x10>
  405fde:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405fe0:	684a      	ldr	r2, [r1, #4]
  405fe2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  405fe6:	6008      	str	r0, [r1, #0]
  405fe8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  405fec:	4770      	bx	lr
  405fee:	bf00      	nop

00405ff0 <__multadd>:
  405ff0:	b5f0      	push	{r4, r5, r6, r7, lr}
  405ff2:	690c      	ldr	r4, [r1, #16]
  405ff4:	b083      	sub	sp, #12
  405ff6:	460d      	mov	r5, r1
  405ff8:	4606      	mov	r6, r0
  405ffa:	f101 0e14 	add.w	lr, r1, #20
  405ffe:	2700      	movs	r7, #0
  406000:	f8de 0000 	ldr.w	r0, [lr]
  406004:	b281      	uxth	r1, r0
  406006:	fb02 3301 	mla	r3, r2, r1, r3
  40600a:	0c01      	lsrs	r1, r0, #16
  40600c:	0c18      	lsrs	r0, r3, #16
  40600e:	fb02 0101 	mla	r1, r2, r1, r0
  406012:	b29b      	uxth	r3, r3
  406014:	3701      	adds	r7, #1
  406016:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  40601a:	42bc      	cmp	r4, r7
  40601c:	f84e 3b04 	str.w	r3, [lr], #4
  406020:	ea4f 4311 	mov.w	r3, r1, lsr #16
  406024:	dcec      	bgt.n	406000 <__multadd+0x10>
  406026:	b13b      	cbz	r3, 406038 <__multadd+0x48>
  406028:	68aa      	ldr	r2, [r5, #8]
  40602a:	4294      	cmp	r4, r2
  40602c:	da07      	bge.n	40603e <__multadd+0x4e>
  40602e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  406032:	3401      	adds	r4, #1
  406034:	6153      	str	r3, [r2, #20]
  406036:	612c      	str	r4, [r5, #16]
  406038:	4628      	mov	r0, r5
  40603a:	b003      	add	sp, #12
  40603c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40603e:	6869      	ldr	r1, [r5, #4]
  406040:	9301      	str	r3, [sp, #4]
  406042:	3101      	adds	r1, #1
  406044:	4630      	mov	r0, r6
  406046:	f7ff ffa3 	bl	405f90 <_Balloc>
  40604a:	692a      	ldr	r2, [r5, #16]
  40604c:	3202      	adds	r2, #2
  40604e:	f105 010c 	add.w	r1, r5, #12
  406052:	4607      	mov	r7, r0
  406054:	0092      	lsls	r2, r2, #2
  406056:	300c      	adds	r0, #12
  406058:	f7fc f86a 	bl	402130 <memcpy>
  40605c:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40605e:	6869      	ldr	r1, [r5, #4]
  406060:	9b01      	ldr	r3, [sp, #4]
  406062:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  406066:	6028      	str	r0, [r5, #0]
  406068:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  40606c:	463d      	mov	r5, r7
  40606e:	e7de      	b.n	40602e <__multadd+0x3e>

00406070 <__hi0bits>:
  406070:	0c02      	lsrs	r2, r0, #16
  406072:	0412      	lsls	r2, r2, #16
  406074:	4603      	mov	r3, r0
  406076:	b9b2      	cbnz	r2, 4060a6 <__hi0bits+0x36>
  406078:	0403      	lsls	r3, r0, #16
  40607a:	2010      	movs	r0, #16
  40607c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  406080:	bf04      	itt	eq
  406082:	021b      	lsleq	r3, r3, #8
  406084:	3008      	addeq	r0, #8
  406086:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  40608a:	bf04      	itt	eq
  40608c:	011b      	lsleq	r3, r3, #4
  40608e:	3004      	addeq	r0, #4
  406090:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  406094:	bf04      	itt	eq
  406096:	009b      	lsleq	r3, r3, #2
  406098:	3002      	addeq	r0, #2
  40609a:	2b00      	cmp	r3, #0
  40609c:	db02      	blt.n	4060a4 <__hi0bits+0x34>
  40609e:	005b      	lsls	r3, r3, #1
  4060a0:	d403      	bmi.n	4060aa <__hi0bits+0x3a>
  4060a2:	2020      	movs	r0, #32
  4060a4:	4770      	bx	lr
  4060a6:	2000      	movs	r0, #0
  4060a8:	e7e8      	b.n	40607c <__hi0bits+0xc>
  4060aa:	3001      	adds	r0, #1
  4060ac:	4770      	bx	lr
  4060ae:	bf00      	nop

004060b0 <__lo0bits>:
  4060b0:	6803      	ldr	r3, [r0, #0]
  4060b2:	f013 0207 	ands.w	r2, r3, #7
  4060b6:	4601      	mov	r1, r0
  4060b8:	d007      	beq.n	4060ca <__lo0bits+0x1a>
  4060ba:	07da      	lsls	r2, r3, #31
  4060bc:	d421      	bmi.n	406102 <__lo0bits+0x52>
  4060be:	0798      	lsls	r0, r3, #30
  4060c0:	d421      	bmi.n	406106 <__lo0bits+0x56>
  4060c2:	089b      	lsrs	r3, r3, #2
  4060c4:	600b      	str	r3, [r1, #0]
  4060c6:	2002      	movs	r0, #2
  4060c8:	4770      	bx	lr
  4060ca:	b298      	uxth	r0, r3
  4060cc:	b198      	cbz	r0, 4060f6 <__lo0bits+0x46>
  4060ce:	4610      	mov	r0, r2
  4060d0:	f013 0fff 	tst.w	r3, #255	; 0xff
  4060d4:	bf04      	itt	eq
  4060d6:	0a1b      	lsreq	r3, r3, #8
  4060d8:	3008      	addeq	r0, #8
  4060da:	071a      	lsls	r2, r3, #28
  4060dc:	bf04      	itt	eq
  4060de:	091b      	lsreq	r3, r3, #4
  4060e0:	3004      	addeq	r0, #4
  4060e2:	079a      	lsls	r2, r3, #30
  4060e4:	bf04      	itt	eq
  4060e6:	089b      	lsreq	r3, r3, #2
  4060e8:	3002      	addeq	r0, #2
  4060ea:	07da      	lsls	r2, r3, #31
  4060ec:	d407      	bmi.n	4060fe <__lo0bits+0x4e>
  4060ee:	085b      	lsrs	r3, r3, #1
  4060f0:	d104      	bne.n	4060fc <__lo0bits+0x4c>
  4060f2:	2020      	movs	r0, #32
  4060f4:	4770      	bx	lr
  4060f6:	0c1b      	lsrs	r3, r3, #16
  4060f8:	2010      	movs	r0, #16
  4060fa:	e7e9      	b.n	4060d0 <__lo0bits+0x20>
  4060fc:	3001      	adds	r0, #1
  4060fe:	600b      	str	r3, [r1, #0]
  406100:	4770      	bx	lr
  406102:	2000      	movs	r0, #0
  406104:	4770      	bx	lr
  406106:	085b      	lsrs	r3, r3, #1
  406108:	600b      	str	r3, [r1, #0]
  40610a:	2001      	movs	r0, #1
  40610c:	4770      	bx	lr
  40610e:	bf00      	nop

00406110 <__i2b>:
  406110:	b510      	push	{r4, lr}
  406112:	460c      	mov	r4, r1
  406114:	2101      	movs	r1, #1
  406116:	f7ff ff3b 	bl	405f90 <_Balloc>
  40611a:	2201      	movs	r2, #1
  40611c:	6144      	str	r4, [r0, #20]
  40611e:	6102      	str	r2, [r0, #16]
  406120:	bd10      	pop	{r4, pc}
  406122:	bf00      	nop

00406124 <__multiply>:
  406124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406128:	690c      	ldr	r4, [r1, #16]
  40612a:	6915      	ldr	r5, [r2, #16]
  40612c:	42ac      	cmp	r4, r5
  40612e:	b083      	sub	sp, #12
  406130:	468b      	mov	fp, r1
  406132:	4616      	mov	r6, r2
  406134:	da04      	bge.n	406140 <__multiply+0x1c>
  406136:	4622      	mov	r2, r4
  406138:	46b3      	mov	fp, r6
  40613a:	462c      	mov	r4, r5
  40613c:	460e      	mov	r6, r1
  40613e:	4615      	mov	r5, r2
  406140:	f8db 3008 	ldr.w	r3, [fp, #8]
  406144:	f8db 1004 	ldr.w	r1, [fp, #4]
  406148:	eb04 0805 	add.w	r8, r4, r5
  40614c:	4598      	cmp	r8, r3
  40614e:	bfc8      	it	gt
  406150:	3101      	addgt	r1, #1
  406152:	f7ff ff1d 	bl	405f90 <_Balloc>
  406156:	f100 0914 	add.w	r9, r0, #20
  40615a:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40615e:	45d1      	cmp	r9, sl
  406160:	9000      	str	r0, [sp, #0]
  406162:	d205      	bcs.n	406170 <__multiply+0x4c>
  406164:	464b      	mov	r3, r9
  406166:	2100      	movs	r1, #0
  406168:	f843 1b04 	str.w	r1, [r3], #4
  40616c:	459a      	cmp	sl, r3
  40616e:	d8fb      	bhi.n	406168 <__multiply+0x44>
  406170:	f106 0c14 	add.w	ip, r6, #20
  406174:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  406178:	f10b 0b14 	add.w	fp, fp, #20
  40617c:	459c      	cmp	ip, r3
  40617e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  406182:	d24c      	bcs.n	40621e <__multiply+0xfa>
  406184:	f8cd a004 	str.w	sl, [sp, #4]
  406188:	469a      	mov	sl, r3
  40618a:	f8dc 5000 	ldr.w	r5, [ip]
  40618e:	b2af      	uxth	r7, r5
  406190:	b1ef      	cbz	r7, 4061ce <__multiply+0xaa>
  406192:	2100      	movs	r1, #0
  406194:	464d      	mov	r5, r9
  406196:	465e      	mov	r6, fp
  406198:	460c      	mov	r4, r1
  40619a:	f856 2b04 	ldr.w	r2, [r6], #4
  40619e:	6828      	ldr	r0, [r5, #0]
  4061a0:	b293      	uxth	r3, r2
  4061a2:	b281      	uxth	r1, r0
  4061a4:	fb07 1303 	mla	r3, r7, r3, r1
  4061a8:	0c12      	lsrs	r2, r2, #16
  4061aa:	0c01      	lsrs	r1, r0, #16
  4061ac:	4423      	add	r3, r4
  4061ae:	fb07 1102 	mla	r1, r7, r2, r1
  4061b2:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4061b6:	b29b      	uxth	r3, r3
  4061b8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4061bc:	45b6      	cmp	lr, r6
  4061be:	f845 3b04 	str.w	r3, [r5], #4
  4061c2:	ea4f 4411 	mov.w	r4, r1, lsr #16
  4061c6:	d8e8      	bhi.n	40619a <__multiply+0x76>
  4061c8:	602c      	str	r4, [r5, #0]
  4061ca:	f8dc 5000 	ldr.w	r5, [ip]
  4061ce:	0c2d      	lsrs	r5, r5, #16
  4061d0:	d01d      	beq.n	40620e <__multiply+0xea>
  4061d2:	f8d9 3000 	ldr.w	r3, [r9]
  4061d6:	4648      	mov	r0, r9
  4061d8:	461c      	mov	r4, r3
  4061da:	4659      	mov	r1, fp
  4061dc:	2200      	movs	r2, #0
  4061de:	880e      	ldrh	r6, [r1, #0]
  4061e0:	0c24      	lsrs	r4, r4, #16
  4061e2:	fb05 4406 	mla	r4, r5, r6, r4
  4061e6:	4422      	add	r2, r4
  4061e8:	b29b      	uxth	r3, r3
  4061ea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4061ee:	f840 3b04 	str.w	r3, [r0], #4
  4061f2:	f851 3b04 	ldr.w	r3, [r1], #4
  4061f6:	6804      	ldr	r4, [r0, #0]
  4061f8:	0c1b      	lsrs	r3, r3, #16
  4061fa:	b2a6      	uxth	r6, r4
  4061fc:	fb05 6303 	mla	r3, r5, r3, r6
  406200:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  406204:	458e      	cmp	lr, r1
  406206:	ea4f 4213 	mov.w	r2, r3, lsr #16
  40620a:	d8e8      	bhi.n	4061de <__multiply+0xba>
  40620c:	6003      	str	r3, [r0, #0]
  40620e:	f10c 0c04 	add.w	ip, ip, #4
  406212:	45e2      	cmp	sl, ip
  406214:	f109 0904 	add.w	r9, r9, #4
  406218:	d8b7      	bhi.n	40618a <__multiply+0x66>
  40621a:	f8dd a004 	ldr.w	sl, [sp, #4]
  40621e:	f1b8 0f00 	cmp.w	r8, #0
  406222:	dd0b      	ble.n	40623c <__multiply+0x118>
  406224:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  406228:	f1aa 0a04 	sub.w	sl, sl, #4
  40622c:	b11b      	cbz	r3, 406236 <__multiply+0x112>
  40622e:	e005      	b.n	40623c <__multiply+0x118>
  406230:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  406234:	b913      	cbnz	r3, 40623c <__multiply+0x118>
  406236:	f1b8 0801 	subs.w	r8, r8, #1
  40623a:	d1f9      	bne.n	406230 <__multiply+0x10c>
  40623c:	9800      	ldr	r0, [sp, #0]
  40623e:	f8c0 8010 	str.w	r8, [r0, #16]
  406242:	b003      	add	sp, #12
  406244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406248 <__pow5mult>:
  406248:	f012 0303 	ands.w	r3, r2, #3
  40624c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406250:	4614      	mov	r4, r2
  406252:	4607      	mov	r7, r0
  406254:	d12e      	bne.n	4062b4 <__pow5mult+0x6c>
  406256:	460d      	mov	r5, r1
  406258:	10a4      	asrs	r4, r4, #2
  40625a:	d01c      	beq.n	406296 <__pow5mult+0x4e>
  40625c:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40625e:	b396      	cbz	r6, 4062c6 <__pow5mult+0x7e>
  406260:	07e3      	lsls	r3, r4, #31
  406262:	f04f 0800 	mov.w	r8, #0
  406266:	d406      	bmi.n	406276 <__pow5mult+0x2e>
  406268:	1064      	asrs	r4, r4, #1
  40626a:	d014      	beq.n	406296 <__pow5mult+0x4e>
  40626c:	6830      	ldr	r0, [r6, #0]
  40626e:	b1a8      	cbz	r0, 40629c <__pow5mult+0x54>
  406270:	4606      	mov	r6, r0
  406272:	07e3      	lsls	r3, r4, #31
  406274:	d5f8      	bpl.n	406268 <__pow5mult+0x20>
  406276:	4632      	mov	r2, r6
  406278:	4629      	mov	r1, r5
  40627a:	4638      	mov	r0, r7
  40627c:	f7ff ff52 	bl	406124 <__multiply>
  406280:	b1b5      	cbz	r5, 4062b0 <__pow5mult+0x68>
  406282:	686a      	ldr	r2, [r5, #4]
  406284:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406286:	1064      	asrs	r4, r4, #1
  406288:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40628c:	6029      	str	r1, [r5, #0]
  40628e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  406292:	4605      	mov	r5, r0
  406294:	d1ea      	bne.n	40626c <__pow5mult+0x24>
  406296:	4628      	mov	r0, r5
  406298:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40629c:	4632      	mov	r2, r6
  40629e:	4631      	mov	r1, r6
  4062a0:	4638      	mov	r0, r7
  4062a2:	f7ff ff3f 	bl	406124 <__multiply>
  4062a6:	6030      	str	r0, [r6, #0]
  4062a8:	f8c0 8000 	str.w	r8, [r0]
  4062ac:	4606      	mov	r6, r0
  4062ae:	e7e0      	b.n	406272 <__pow5mult+0x2a>
  4062b0:	4605      	mov	r5, r0
  4062b2:	e7d9      	b.n	406268 <__pow5mult+0x20>
  4062b4:	1e5a      	subs	r2, r3, #1
  4062b6:	4d0b      	ldr	r5, [pc, #44]	; (4062e4 <__pow5mult+0x9c>)
  4062b8:	2300      	movs	r3, #0
  4062ba:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4062be:	f7ff fe97 	bl	405ff0 <__multadd>
  4062c2:	4605      	mov	r5, r0
  4062c4:	e7c8      	b.n	406258 <__pow5mult+0x10>
  4062c6:	2101      	movs	r1, #1
  4062c8:	4638      	mov	r0, r7
  4062ca:	f7ff fe61 	bl	405f90 <_Balloc>
  4062ce:	f240 2171 	movw	r1, #625	; 0x271
  4062d2:	2201      	movs	r2, #1
  4062d4:	2300      	movs	r3, #0
  4062d6:	6141      	str	r1, [r0, #20]
  4062d8:	6102      	str	r2, [r0, #16]
  4062da:	4606      	mov	r6, r0
  4062dc:	64b8      	str	r0, [r7, #72]	; 0x48
  4062de:	6003      	str	r3, [r0, #0]
  4062e0:	e7be      	b.n	406260 <__pow5mult+0x18>
  4062e2:	bf00      	nop
  4062e4:	004074b0 	.word	0x004074b0

004062e8 <__lshift>:
  4062e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4062ec:	4691      	mov	r9, r2
  4062ee:	690a      	ldr	r2, [r1, #16]
  4062f0:	688b      	ldr	r3, [r1, #8]
  4062f2:	ea4f 1469 	mov.w	r4, r9, asr #5
  4062f6:	eb04 0802 	add.w	r8, r4, r2
  4062fa:	f108 0501 	add.w	r5, r8, #1
  4062fe:	429d      	cmp	r5, r3
  406300:	460e      	mov	r6, r1
  406302:	4607      	mov	r7, r0
  406304:	6849      	ldr	r1, [r1, #4]
  406306:	dd04      	ble.n	406312 <__lshift+0x2a>
  406308:	005b      	lsls	r3, r3, #1
  40630a:	429d      	cmp	r5, r3
  40630c:	f101 0101 	add.w	r1, r1, #1
  406310:	dcfa      	bgt.n	406308 <__lshift+0x20>
  406312:	4638      	mov	r0, r7
  406314:	f7ff fe3c 	bl	405f90 <_Balloc>
  406318:	2c00      	cmp	r4, #0
  40631a:	f100 0314 	add.w	r3, r0, #20
  40631e:	dd06      	ble.n	40632e <__lshift+0x46>
  406320:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  406324:	2100      	movs	r1, #0
  406326:	f843 1b04 	str.w	r1, [r3], #4
  40632a:	429a      	cmp	r2, r3
  40632c:	d1fb      	bne.n	406326 <__lshift+0x3e>
  40632e:	6934      	ldr	r4, [r6, #16]
  406330:	f106 0114 	add.w	r1, r6, #20
  406334:	f019 091f 	ands.w	r9, r9, #31
  406338:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  40633c:	d01d      	beq.n	40637a <__lshift+0x92>
  40633e:	f1c9 0c20 	rsb	ip, r9, #32
  406342:	2200      	movs	r2, #0
  406344:	680c      	ldr	r4, [r1, #0]
  406346:	fa04 f409 	lsl.w	r4, r4, r9
  40634a:	4314      	orrs	r4, r2
  40634c:	f843 4b04 	str.w	r4, [r3], #4
  406350:	f851 2b04 	ldr.w	r2, [r1], #4
  406354:	458e      	cmp	lr, r1
  406356:	fa22 f20c 	lsr.w	r2, r2, ip
  40635a:	d8f3      	bhi.n	406344 <__lshift+0x5c>
  40635c:	601a      	str	r2, [r3, #0]
  40635e:	b10a      	cbz	r2, 406364 <__lshift+0x7c>
  406360:	f108 0502 	add.w	r5, r8, #2
  406364:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406366:	6872      	ldr	r2, [r6, #4]
  406368:	3d01      	subs	r5, #1
  40636a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40636e:	6105      	str	r5, [r0, #16]
  406370:	6031      	str	r1, [r6, #0]
  406372:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  406376:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40637a:	3b04      	subs	r3, #4
  40637c:	f851 2b04 	ldr.w	r2, [r1], #4
  406380:	f843 2f04 	str.w	r2, [r3, #4]!
  406384:	458e      	cmp	lr, r1
  406386:	d8f9      	bhi.n	40637c <__lshift+0x94>
  406388:	e7ec      	b.n	406364 <__lshift+0x7c>
  40638a:	bf00      	nop

0040638c <__mcmp>:
  40638c:	b430      	push	{r4, r5}
  40638e:	690b      	ldr	r3, [r1, #16]
  406390:	4605      	mov	r5, r0
  406392:	6900      	ldr	r0, [r0, #16]
  406394:	1ac0      	subs	r0, r0, r3
  406396:	d10f      	bne.n	4063b8 <__mcmp+0x2c>
  406398:	009b      	lsls	r3, r3, #2
  40639a:	3514      	adds	r5, #20
  40639c:	3114      	adds	r1, #20
  40639e:	4419      	add	r1, r3
  4063a0:	442b      	add	r3, r5
  4063a2:	e001      	b.n	4063a8 <__mcmp+0x1c>
  4063a4:	429d      	cmp	r5, r3
  4063a6:	d207      	bcs.n	4063b8 <__mcmp+0x2c>
  4063a8:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  4063ac:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4063b0:	4294      	cmp	r4, r2
  4063b2:	d0f7      	beq.n	4063a4 <__mcmp+0x18>
  4063b4:	d302      	bcc.n	4063bc <__mcmp+0x30>
  4063b6:	2001      	movs	r0, #1
  4063b8:	bc30      	pop	{r4, r5}
  4063ba:	4770      	bx	lr
  4063bc:	f04f 30ff 	mov.w	r0, #4294967295
  4063c0:	e7fa      	b.n	4063b8 <__mcmp+0x2c>
  4063c2:	bf00      	nop

004063c4 <__mdiff>:
  4063c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4063c8:	690f      	ldr	r7, [r1, #16]
  4063ca:	460e      	mov	r6, r1
  4063cc:	6911      	ldr	r1, [r2, #16]
  4063ce:	1a7f      	subs	r7, r7, r1
  4063d0:	2f00      	cmp	r7, #0
  4063d2:	4690      	mov	r8, r2
  4063d4:	d117      	bne.n	406406 <__mdiff+0x42>
  4063d6:	0089      	lsls	r1, r1, #2
  4063d8:	f106 0514 	add.w	r5, r6, #20
  4063dc:	f102 0e14 	add.w	lr, r2, #20
  4063e0:	186b      	adds	r3, r5, r1
  4063e2:	4471      	add	r1, lr
  4063e4:	e001      	b.n	4063ea <__mdiff+0x26>
  4063e6:	429d      	cmp	r5, r3
  4063e8:	d25c      	bcs.n	4064a4 <__mdiff+0xe0>
  4063ea:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4063ee:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4063f2:	42a2      	cmp	r2, r4
  4063f4:	d0f7      	beq.n	4063e6 <__mdiff+0x22>
  4063f6:	d25e      	bcs.n	4064b6 <__mdiff+0xf2>
  4063f8:	4633      	mov	r3, r6
  4063fa:	462c      	mov	r4, r5
  4063fc:	4646      	mov	r6, r8
  4063fe:	4675      	mov	r5, lr
  406400:	4698      	mov	r8, r3
  406402:	2701      	movs	r7, #1
  406404:	e005      	b.n	406412 <__mdiff+0x4e>
  406406:	db58      	blt.n	4064ba <__mdiff+0xf6>
  406408:	f106 0514 	add.w	r5, r6, #20
  40640c:	f108 0414 	add.w	r4, r8, #20
  406410:	2700      	movs	r7, #0
  406412:	6871      	ldr	r1, [r6, #4]
  406414:	f7ff fdbc 	bl	405f90 <_Balloc>
  406418:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40641c:	6936      	ldr	r6, [r6, #16]
  40641e:	60c7      	str	r7, [r0, #12]
  406420:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  406424:	46a6      	mov	lr, r4
  406426:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  40642a:	f100 0414 	add.w	r4, r0, #20
  40642e:	2300      	movs	r3, #0
  406430:	f85e 1b04 	ldr.w	r1, [lr], #4
  406434:	f855 8b04 	ldr.w	r8, [r5], #4
  406438:	b28a      	uxth	r2, r1
  40643a:	fa13 f388 	uxtah	r3, r3, r8
  40643e:	0c09      	lsrs	r1, r1, #16
  406440:	1a9a      	subs	r2, r3, r2
  406442:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  406446:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40644a:	b292      	uxth	r2, r2
  40644c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  406450:	45f4      	cmp	ip, lr
  406452:	f844 2b04 	str.w	r2, [r4], #4
  406456:	ea4f 4323 	mov.w	r3, r3, asr #16
  40645a:	d8e9      	bhi.n	406430 <__mdiff+0x6c>
  40645c:	42af      	cmp	r7, r5
  40645e:	d917      	bls.n	406490 <__mdiff+0xcc>
  406460:	46a4      	mov	ip, r4
  406462:	46ae      	mov	lr, r5
  406464:	f85e 2b04 	ldr.w	r2, [lr], #4
  406468:	fa13 f382 	uxtah	r3, r3, r2
  40646c:	1419      	asrs	r1, r3, #16
  40646e:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  406472:	b29b      	uxth	r3, r3
  406474:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  406478:	4577      	cmp	r7, lr
  40647a:	f84c 2b04 	str.w	r2, [ip], #4
  40647e:	ea4f 4321 	mov.w	r3, r1, asr #16
  406482:	d8ef      	bhi.n	406464 <__mdiff+0xa0>
  406484:	43ed      	mvns	r5, r5
  406486:	442f      	add	r7, r5
  406488:	f027 0703 	bic.w	r7, r7, #3
  40648c:	3704      	adds	r7, #4
  40648e:	443c      	add	r4, r7
  406490:	3c04      	subs	r4, #4
  406492:	b922      	cbnz	r2, 40649e <__mdiff+0xda>
  406494:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  406498:	3e01      	subs	r6, #1
  40649a:	2b00      	cmp	r3, #0
  40649c:	d0fa      	beq.n	406494 <__mdiff+0xd0>
  40649e:	6106      	str	r6, [r0, #16]
  4064a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4064a4:	2100      	movs	r1, #0
  4064a6:	f7ff fd73 	bl	405f90 <_Balloc>
  4064aa:	2201      	movs	r2, #1
  4064ac:	2300      	movs	r3, #0
  4064ae:	6102      	str	r2, [r0, #16]
  4064b0:	6143      	str	r3, [r0, #20]
  4064b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4064b6:	4674      	mov	r4, lr
  4064b8:	e7ab      	b.n	406412 <__mdiff+0x4e>
  4064ba:	4633      	mov	r3, r6
  4064bc:	f106 0414 	add.w	r4, r6, #20
  4064c0:	f102 0514 	add.w	r5, r2, #20
  4064c4:	4616      	mov	r6, r2
  4064c6:	2701      	movs	r7, #1
  4064c8:	4698      	mov	r8, r3
  4064ca:	e7a2      	b.n	406412 <__mdiff+0x4e>

004064cc <__d2b>:
  4064cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4064d0:	b082      	sub	sp, #8
  4064d2:	2101      	movs	r1, #1
  4064d4:	461c      	mov	r4, r3
  4064d6:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4064da:	4615      	mov	r5, r2
  4064dc:	9e08      	ldr	r6, [sp, #32]
  4064de:	f7ff fd57 	bl	405f90 <_Balloc>
  4064e2:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4064e6:	4680      	mov	r8, r0
  4064e8:	b10f      	cbz	r7, 4064ee <__d2b+0x22>
  4064ea:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4064ee:	9401      	str	r4, [sp, #4]
  4064f0:	b31d      	cbz	r5, 40653a <__d2b+0x6e>
  4064f2:	a802      	add	r0, sp, #8
  4064f4:	f840 5d08 	str.w	r5, [r0, #-8]!
  4064f8:	f7ff fdda 	bl	4060b0 <__lo0bits>
  4064fc:	2800      	cmp	r0, #0
  4064fe:	d134      	bne.n	40656a <__d2b+0x9e>
  406500:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406504:	f8c8 2014 	str.w	r2, [r8, #20]
  406508:	2b00      	cmp	r3, #0
  40650a:	bf0c      	ite	eq
  40650c:	2101      	moveq	r1, #1
  40650e:	2102      	movne	r1, #2
  406510:	f8c8 3018 	str.w	r3, [r8, #24]
  406514:	f8c8 1010 	str.w	r1, [r8, #16]
  406518:	b9df      	cbnz	r7, 406552 <__d2b+0x86>
  40651a:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40651e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  406522:	6030      	str	r0, [r6, #0]
  406524:	6918      	ldr	r0, [r3, #16]
  406526:	f7ff fda3 	bl	406070 <__hi0bits>
  40652a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40652c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  406530:	6018      	str	r0, [r3, #0]
  406532:	4640      	mov	r0, r8
  406534:	b002      	add	sp, #8
  406536:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40653a:	a801      	add	r0, sp, #4
  40653c:	f7ff fdb8 	bl	4060b0 <__lo0bits>
  406540:	9b01      	ldr	r3, [sp, #4]
  406542:	f8c8 3014 	str.w	r3, [r8, #20]
  406546:	2101      	movs	r1, #1
  406548:	3020      	adds	r0, #32
  40654a:	f8c8 1010 	str.w	r1, [r8, #16]
  40654e:	2f00      	cmp	r7, #0
  406550:	d0e3      	beq.n	40651a <__d2b+0x4e>
  406552:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406554:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  406558:	4407      	add	r7, r0
  40655a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40655e:	6037      	str	r7, [r6, #0]
  406560:	6018      	str	r0, [r3, #0]
  406562:	4640      	mov	r0, r8
  406564:	b002      	add	sp, #8
  406566:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40656a:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40656e:	f1c0 0220 	rsb	r2, r0, #32
  406572:	fa03 f202 	lsl.w	r2, r3, r2
  406576:	430a      	orrs	r2, r1
  406578:	40c3      	lsrs	r3, r0
  40657a:	9301      	str	r3, [sp, #4]
  40657c:	f8c8 2014 	str.w	r2, [r8, #20]
  406580:	e7c2      	b.n	406508 <__d2b+0x3c>
  406582:	bf00      	nop

00406584 <_realloc_r>:
  406584:	2900      	cmp	r1, #0
  406586:	f000 8095 	beq.w	4066b4 <_realloc_r+0x130>
  40658a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40658e:	460d      	mov	r5, r1
  406590:	4616      	mov	r6, r2
  406592:	b083      	sub	sp, #12
  406594:	4680      	mov	r8, r0
  406596:	f106 070b 	add.w	r7, r6, #11
  40659a:	f7ff fced 	bl	405f78 <__malloc_lock>
  40659e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4065a2:	2f16      	cmp	r7, #22
  4065a4:	f02e 0403 	bic.w	r4, lr, #3
  4065a8:	f1a5 0908 	sub.w	r9, r5, #8
  4065ac:	d83c      	bhi.n	406628 <_realloc_r+0xa4>
  4065ae:	2210      	movs	r2, #16
  4065b0:	4617      	mov	r7, r2
  4065b2:	42be      	cmp	r6, r7
  4065b4:	d83d      	bhi.n	406632 <_realloc_r+0xae>
  4065b6:	4294      	cmp	r4, r2
  4065b8:	da43      	bge.n	406642 <_realloc_r+0xbe>
  4065ba:	4bc4      	ldr	r3, [pc, #784]	; (4068cc <_realloc_r+0x348>)
  4065bc:	6899      	ldr	r1, [r3, #8]
  4065be:	eb09 0004 	add.w	r0, r9, r4
  4065c2:	4288      	cmp	r0, r1
  4065c4:	f000 80b4 	beq.w	406730 <_realloc_r+0x1ac>
  4065c8:	6843      	ldr	r3, [r0, #4]
  4065ca:	f023 0101 	bic.w	r1, r3, #1
  4065ce:	4401      	add	r1, r0
  4065d0:	6849      	ldr	r1, [r1, #4]
  4065d2:	07c9      	lsls	r1, r1, #31
  4065d4:	d54c      	bpl.n	406670 <_realloc_r+0xec>
  4065d6:	f01e 0f01 	tst.w	lr, #1
  4065da:	f000 809b 	beq.w	406714 <_realloc_r+0x190>
  4065de:	4631      	mov	r1, r6
  4065e0:	4640      	mov	r0, r8
  4065e2:	f7ff f949 	bl	405878 <_malloc_r>
  4065e6:	4606      	mov	r6, r0
  4065e8:	2800      	cmp	r0, #0
  4065ea:	d03a      	beq.n	406662 <_realloc_r+0xde>
  4065ec:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4065f0:	f023 0301 	bic.w	r3, r3, #1
  4065f4:	444b      	add	r3, r9
  4065f6:	f1a0 0208 	sub.w	r2, r0, #8
  4065fa:	429a      	cmp	r2, r3
  4065fc:	f000 8121 	beq.w	406842 <_realloc_r+0x2be>
  406600:	1f22      	subs	r2, r4, #4
  406602:	2a24      	cmp	r2, #36	; 0x24
  406604:	f200 8107 	bhi.w	406816 <_realloc_r+0x292>
  406608:	2a13      	cmp	r2, #19
  40660a:	f200 80db 	bhi.w	4067c4 <_realloc_r+0x240>
  40660e:	4603      	mov	r3, r0
  406610:	462a      	mov	r2, r5
  406612:	6811      	ldr	r1, [r2, #0]
  406614:	6019      	str	r1, [r3, #0]
  406616:	6851      	ldr	r1, [r2, #4]
  406618:	6059      	str	r1, [r3, #4]
  40661a:	6892      	ldr	r2, [r2, #8]
  40661c:	609a      	str	r2, [r3, #8]
  40661e:	4629      	mov	r1, r5
  406620:	4640      	mov	r0, r8
  406622:	f7fe fdd7 	bl	4051d4 <_free_r>
  406626:	e01c      	b.n	406662 <_realloc_r+0xde>
  406628:	f027 0707 	bic.w	r7, r7, #7
  40662c:	2f00      	cmp	r7, #0
  40662e:	463a      	mov	r2, r7
  406630:	dabf      	bge.n	4065b2 <_realloc_r+0x2e>
  406632:	2600      	movs	r6, #0
  406634:	230c      	movs	r3, #12
  406636:	4630      	mov	r0, r6
  406638:	f8c8 3000 	str.w	r3, [r8]
  40663c:	b003      	add	sp, #12
  40663e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406642:	462e      	mov	r6, r5
  406644:	1be3      	subs	r3, r4, r7
  406646:	2b0f      	cmp	r3, #15
  406648:	d81e      	bhi.n	406688 <_realloc_r+0x104>
  40664a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40664e:	f003 0301 	and.w	r3, r3, #1
  406652:	4323      	orrs	r3, r4
  406654:	444c      	add	r4, r9
  406656:	f8c9 3004 	str.w	r3, [r9, #4]
  40665a:	6863      	ldr	r3, [r4, #4]
  40665c:	f043 0301 	orr.w	r3, r3, #1
  406660:	6063      	str	r3, [r4, #4]
  406662:	4640      	mov	r0, r8
  406664:	f7ff fc8e 	bl	405f84 <__malloc_unlock>
  406668:	4630      	mov	r0, r6
  40666a:	b003      	add	sp, #12
  40666c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406670:	f023 0303 	bic.w	r3, r3, #3
  406674:	18e1      	adds	r1, r4, r3
  406676:	4291      	cmp	r1, r2
  406678:	db1f      	blt.n	4066ba <_realloc_r+0x136>
  40667a:	68c3      	ldr	r3, [r0, #12]
  40667c:	6882      	ldr	r2, [r0, #8]
  40667e:	462e      	mov	r6, r5
  406680:	60d3      	str	r3, [r2, #12]
  406682:	460c      	mov	r4, r1
  406684:	609a      	str	r2, [r3, #8]
  406686:	e7dd      	b.n	406644 <_realloc_r+0xc0>
  406688:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40668c:	eb09 0107 	add.w	r1, r9, r7
  406690:	f002 0201 	and.w	r2, r2, #1
  406694:	444c      	add	r4, r9
  406696:	f043 0301 	orr.w	r3, r3, #1
  40669a:	4317      	orrs	r7, r2
  40669c:	f8c9 7004 	str.w	r7, [r9, #4]
  4066a0:	604b      	str	r3, [r1, #4]
  4066a2:	6863      	ldr	r3, [r4, #4]
  4066a4:	f043 0301 	orr.w	r3, r3, #1
  4066a8:	3108      	adds	r1, #8
  4066aa:	6063      	str	r3, [r4, #4]
  4066ac:	4640      	mov	r0, r8
  4066ae:	f7fe fd91 	bl	4051d4 <_free_r>
  4066b2:	e7d6      	b.n	406662 <_realloc_r+0xde>
  4066b4:	4611      	mov	r1, r2
  4066b6:	f7ff b8df 	b.w	405878 <_malloc_r>
  4066ba:	f01e 0f01 	tst.w	lr, #1
  4066be:	d18e      	bne.n	4065de <_realloc_r+0x5a>
  4066c0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4066c4:	eba9 0a01 	sub.w	sl, r9, r1
  4066c8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4066cc:	f021 0103 	bic.w	r1, r1, #3
  4066d0:	440b      	add	r3, r1
  4066d2:	4423      	add	r3, r4
  4066d4:	4293      	cmp	r3, r2
  4066d6:	db25      	blt.n	406724 <_realloc_r+0x1a0>
  4066d8:	68c2      	ldr	r2, [r0, #12]
  4066da:	6881      	ldr	r1, [r0, #8]
  4066dc:	4656      	mov	r6, sl
  4066de:	60ca      	str	r2, [r1, #12]
  4066e0:	6091      	str	r1, [r2, #8]
  4066e2:	f8da 100c 	ldr.w	r1, [sl, #12]
  4066e6:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4066ea:	1f22      	subs	r2, r4, #4
  4066ec:	2a24      	cmp	r2, #36	; 0x24
  4066ee:	60c1      	str	r1, [r0, #12]
  4066f0:	6088      	str	r0, [r1, #8]
  4066f2:	f200 8094 	bhi.w	40681e <_realloc_r+0x29a>
  4066f6:	2a13      	cmp	r2, #19
  4066f8:	d96f      	bls.n	4067da <_realloc_r+0x256>
  4066fa:	6829      	ldr	r1, [r5, #0]
  4066fc:	f8ca 1008 	str.w	r1, [sl, #8]
  406700:	6869      	ldr	r1, [r5, #4]
  406702:	f8ca 100c 	str.w	r1, [sl, #12]
  406706:	2a1b      	cmp	r2, #27
  406708:	f200 80a2 	bhi.w	406850 <_realloc_r+0x2cc>
  40670c:	3508      	adds	r5, #8
  40670e:	f10a 0210 	add.w	r2, sl, #16
  406712:	e063      	b.n	4067dc <_realloc_r+0x258>
  406714:	f855 3c08 	ldr.w	r3, [r5, #-8]
  406718:	eba9 0a03 	sub.w	sl, r9, r3
  40671c:	f8da 1004 	ldr.w	r1, [sl, #4]
  406720:	f021 0103 	bic.w	r1, r1, #3
  406724:	1863      	adds	r3, r4, r1
  406726:	4293      	cmp	r3, r2
  406728:	f6ff af59 	blt.w	4065de <_realloc_r+0x5a>
  40672c:	4656      	mov	r6, sl
  40672e:	e7d8      	b.n	4066e2 <_realloc_r+0x15e>
  406730:	6841      	ldr	r1, [r0, #4]
  406732:	f021 0b03 	bic.w	fp, r1, #3
  406736:	44a3      	add	fp, r4
  406738:	f107 0010 	add.w	r0, r7, #16
  40673c:	4583      	cmp	fp, r0
  40673e:	da56      	bge.n	4067ee <_realloc_r+0x26a>
  406740:	f01e 0f01 	tst.w	lr, #1
  406744:	f47f af4b 	bne.w	4065de <_realloc_r+0x5a>
  406748:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40674c:	eba9 0a01 	sub.w	sl, r9, r1
  406750:	f8da 1004 	ldr.w	r1, [sl, #4]
  406754:	f021 0103 	bic.w	r1, r1, #3
  406758:	448b      	add	fp, r1
  40675a:	4558      	cmp	r0, fp
  40675c:	dce2      	bgt.n	406724 <_realloc_r+0x1a0>
  40675e:	4656      	mov	r6, sl
  406760:	f8da 100c 	ldr.w	r1, [sl, #12]
  406764:	f856 0f08 	ldr.w	r0, [r6, #8]!
  406768:	1f22      	subs	r2, r4, #4
  40676a:	2a24      	cmp	r2, #36	; 0x24
  40676c:	60c1      	str	r1, [r0, #12]
  40676e:	6088      	str	r0, [r1, #8]
  406770:	f200 808f 	bhi.w	406892 <_realloc_r+0x30e>
  406774:	2a13      	cmp	r2, #19
  406776:	f240 808a 	bls.w	40688e <_realloc_r+0x30a>
  40677a:	6829      	ldr	r1, [r5, #0]
  40677c:	f8ca 1008 	str.w	r1, [sl, #8]
  406780:	6869      	ldr	r1, [r5, #4]
  406782:	f8ca 100c 	str.w	r1, [sl, #12]
  406786:	2a1b      	cmp	r2, #27
  406788:	f200 808a 	bhi.w	4068a0 <_realloc_r+0x31c>
  40678c:	3508      	adds	r5, #8
  40678e:	f10a 0210 	add.w	r2, sl, #16
  406792:	6829      	ldr	r1, [r5, #0]
  406794:	6011      	str	r1, [r2, #0]
  406796:	6869      	ldr	r1, [r5, #4]
  406798:	6051      	str	r1, [r2, #4]
  40679a:	68a9      	ldr	r1, [r5, #8]
  40679c:	6091      	str	r1, [r2, #8]
  40679e:	eb0a 0107 	add.w	r1, sl, r7
  4067a2:	ebab 0207 	sub.w	r2, fp, r7
  4067a6:	f042 0201 	orr.w	r2, r2, #1
  4067aa:	6099      	str	r1, [r3, #8]
  4067ac:	604a      	str	r2, [r1, #4]
  4067ae:	f8da 3004 	ldr.w	r3, [sl, #4]
  4067b2:	f003 0301 	and.w	r3, r3, #1
  4067b6:	431f      	orrs	r7, r3
  4067b8:	4640      	mov	r0, r8
  4067ba:	f8ca 7004 	str.w	r7, [sl, #4]
  4067be:	f7ff fbe1 	bl	405f84 <__malloc_unlock>
  4067c2:	e751      	b.n	406668 <_realloc_r+0xe4>
  4067c4:	682b      	ldr	r3, [r5, #0]
  4067c6:	6003      	str	r3, [r0, #0]
  4067c8:	686b      	ldr	r3, [r5, #4]
  4067ca:	6043      	str	r3, [r0, #4]
  4067cc:	2a1b      	cmp	r2, #27
  4067ce:	d82d      	bhi.n	40682c <_realloc_r+0x2a8>
  4067d0:	f100 0308 	add.w	r3, r0, #8
  4067d4:	f105 0208 	add.w	r2, r5, #8
  4067d8:	e71b      	b.n	406612 <_realloc_r+0x8e>
  4067da:	4632      	mov	r2, r6
  4067dc:	6829      	ldr	r1, [r5, #0]
  4067de:	6011      	str	r1, [r2, #0]
  4067e0:	6869      	ldr	r1, [r5, #4]
  4067e2:	6051      	str	r1, [r2, #4]
  4067e4:	68a9      	ldr	r1, [r5, #8]
  4067e6:	6091      	str	r1, [r2, #8]
  4067e8:	461c      	mov	r4, r3
  4067ea:	46d1      	mov	r9, sl
  4067ec:	e72a      	b.n	406644 <_realloc_r+0xc0>
  4067ee:	eb09 0107 	add.w	r1, r9, r7
  4067f2:	ebab 0b07 	sub.w	fp, fp, r7
  4067f6:	f04b 0201 	orr.w	r2, fp, #1
  4067fa:	6099      	str	r1, [r3, #8]
  4067fc:	604a      	str	r2, [r1, #4]
  4067fe:	f855 3c04 	ldr.w	r3, [r5, #-4]
  406802:	f003 0301 	and.w	r3, r3, #1
  406806:	431f      	orrs	r7, r3
  406808:	4640      	mov	r0, r8
  40680a:	f845 7c04 	str.w	r7, [r5, #-4]
  40680e:	f7ff fbb9 	bl	405f84 <__malloc_unlock>
  406812:	462e      	mov	r6, r5
  406814:	e728      	b.n	406668 <_realloc_r+0xe4>
  406816:	4629      	mov	r1, r5
  406818:	f7ff fb4a 	bl	405eb0 <memmove>
  40681c:	e6ff      	b.n	40661e <_realloc_r+0x9a>
  40681e:	4629      	mov	r1, r5
  406820:	4630      	mov	r0, r6
  406822:	461c      	mov	r4, r3
  406824:	46d1      	mov	r9, sl
  406826:	f7ff fb43 	bl	405eb0 <memmove>
  40682a:	e70b      	b.n	406644 <_realloc_r+0xc0>
  40682c:	68ab      	ldr	r3, [r5, #8]
  40682e:	6083      	str	r3, [r0, #8]
  406830:	68eb      	ldr	r3, [r5, #12]
  406832:	60c3      	str	r3, [r0, #12]
  406834:	2a24      	cmp	r2, #36	; 0x24
  406836:	d017      	beq.n	406868 <_realloc_r+0x2e4>
  406838:	f100 0310 	add.w	r3, r0, #16
  40683c:	f105 0210 	add.w	r2, r5, #16
  406840:	e6e7      	b.n	406612 <_realloc_r+0x8e>
  406842:	f850 3c04 	ldr.w	r3, [r0, #-4]
  406846:	f023 0303 	bic.w	r3, r3, #3
  40684a:	441c      	add	r4, r3
  40684c:	462e      	mov	r6, r5
  40684e:	e6f9      	b.n	406644 <_realloc_r+0xc0>
  406850:	68a9      	ldr	r1, [r5, #8]
  406852:	f8ca 1010 	str.w	r1, [sl, #16]
  406856:	68e9      	ldr	r1, [r5, #12]
  406858:	f8ca 1014 	str.w	r1, [sl, #20]
  40685c:	2a24      	cmp	r2, #36	; 0x24
  40685e:	d00c      	beq.n	40687a <_realloc_r+0x2f6>
  406860:	3510      	adds	r5, #16
  406862:	f10a 0218 	add.w	r2, sl, #24
  406866:	e7b9      	b.n	4067dc <_realloc_r+0x258>
  406868:	692b      	ldr	r3, [r5, #16]
  40686a:	6103      	str	r3, [r0, #16]
  40686c:	696b      	ldr	r3, [r5, #20]
  40686e:	6143      	str	r3, [r0, #20]
  406870:	f105 0218 	add.w	r2, r5, #24
  406874:	f100 0318 	add.w	r3, r0, #24
  406878:	e6cb      	b.n	406612 <_realloc_r+0x8e>
  40687a:	692a      	ldr	r2, [r5, #16]
  40687c:	f8ca 2018 	str.w	r2, [sl, #24]
  406880:	696a      	ldr	r2, [r5, #20]
  406882:	f8ca 201c 	str.w	r2, [sl, #28]
  406886:	3518      	adds	r5, #24
  406888:	f10a 0220 	add.w	r2, sl, #32
  40688c:	e7a6      	b.n	4067dc <_realloc_r+0x258>
  40688e:	4632      	mov	r2, r6
  406890:	e77f      	b.n	406792 <_realloc_r+0x20e>
  406892:	4629      	mov	r1, r5
  406894:	4630      	mov	r0, r6
  406896:	9301      	str	r3, [sp, #4]
  406898:	f7ff fb0a 	bl	405eb0 <memmove>
  40689c:	9b01      	ldr	r3, [sp, #4]
  40689e:	e77e      	b.n	40679e <_realloc_r+0x21a>
  4068a0:	68a9      	ldr	r1, [r5, #8]
  4068a2:	f8ca 1010 	str.w	r1, [sl, #16]
  4068a6:	68e9      	ldr	r1, [r5, #12]
  4068a8:	f8ca 1014 	str.w	r1, [sl, #20]
  4068ac:	2a24      	cmp	r2, #36	; 0x24
  4068ae:	d003      	beq.n	4068b8 <_realloc_r+0x334>
  4068b0:	3510      	adds	r5, #16
  4068b2:	f10a 0218 	add.w	r2, sl, #24
  4068b6:	e76c      	b.n	406792 <_realloc_r+0x20e>
  4068b8:	692a      	ldr	r2, [r5, #16]
  4068ba:	f8ca 2018 	str.w	r2, [sl, #24]
  4068be:	696a      	ldr	r2, [r5, #20]
  4068c0:	f8ca 201c 	str.w	r2, [sl, #28]
  4068c4:	3518      	adds	r5, #24
  4068c6:	f10a 0220 	add.w	r2, sl, #32
  4068ca:	e762      	b.n	406792 <_realloc_r+0x20e>
  4068cc:	204005b8 	.word	0x204005b8

004068d0 <lflush>:
  4068d0:	8983      	ldrh	r3, [r0, #12]
  4068d2:	f003 0309 	and.w	r3, r3, #9
  4068d6:	2b09      	cmp	r3, #9
  4068d8:	d001      	beq.n	4068de <lflush+0xe>
  4068da:	2000      	movs	r0, #0
  4068dc:	4770      	bx	lr
  4068de:	f7fe bb13 	b.w	404f08 <fflush>
  4068e2:	bf00      	nop

004068e4 <__srefill_r>:
  4068e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4068e6:	460c      	mov	r4, r1
  4068e8:	4605      	mov	r5, r0
  4068ea:	b110      	cbz	r0, 4068f2 <__srefill_r+0xe>
  4068ec:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4068ee:	2b00      	cmp	r3, #0
  4068f0:	d045      	beq.n	40697e <__srefill_r+0x9a>
  4068f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4068f6:	b29a      	uxth	r2, r3
  4068f8:	0497      	lsls	r7, r2, #18
  4068fa:	d407      	bmi.n	40690c <__srefill_r+0x28>
  4068fc:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4068fe:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  406902:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  406906:	6662      	str	r2, [r4, #100]	; 0x64
  406908:	81a3      	strh	r3, [r4, #12]
  40690a:	b29a      	uxth	r2, r3
  40690c:	2100      	movs	r1, #0
  40690e:	0696      	lsls	r6, r2, #26
  406910:	6061      	str	r1, [r4, #4]
  406912:	d431      	bmi.n	406978 <__srefill_r+0x94>
  406914:	0750      	lsls	r0, r2, #29
  406916:	d522      	bpl.n	40695e <__srefill_r+0x7a>
  406918:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40691a:	b161      	cbz	r1, 406936 <__srefill_r+0x52>
  40691c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  406920:	4299      	cmp	r1, r3
  406922:	d002      	beq.n	40692a <__srefill_r+0x46>
  406924:	4628      	mov	r0, r5
  406926:	f7fe fc55 	bl	4051d4 <_free_r>
  40692a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  40692c:	6063      	str	r3, [r4, #4]
  40692e:	2000      	movs	r0, #0
  406930:	6320      	str	r0, [r4, #48]	; 0x30
  406932:	2b00      	cmp	r3, #0
  406934:	d13f      	bne.n	4069b6 <__srefill_r+0xd2>
  406936:	6923      	ldr	r3, [r4, #16]
  406938:	2b00      	cmp	r3, #0
  40693a:	d04c      	beq.n	4069d6 <__srefill_r+0xf2>
  40693c:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
  406940:	b2be      	uxth	r6, r7
  406942:	07b3      	lsls	r3, r6, #30
  406944:	d11e      	bne.n	406984 <__srefill_r+0xa0>
  406946:	6922      	ldr	r2, [r4, #16]
  406948:	6022      	str	r2, [r4, #0]
  40694a:	4628      	mov	r0, r5
  40694c:	6963      	ldr	r3, [r4, #20]
  40694e:	6a25      	ldr	r5, [r4, #32]
  406950:	69e1      	ldr	r1, [r4, #28]
  406952:	47a8      	blx	r5
  406954:	2800      	cmp	r0, #0
  406956:	6060      	str	r0, [r4, #4]
  406958:	dd09      	ble.n	40696e <__srefill_r+0x8a>
  40695a:	2000      	movs	r0, #0
  40695c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40695e:	06d1      	lsls	r1, r2, #27
  406960:	d53e      	bpl.n	4069e0 <__srefill_r+0xfc>
  406962:	0712      	lsls	r2, r2, #28
  406964:	d42a      	bmi.n	4069bc <__srefill_r+0xd8>
  406966:	f043 0304 	orr.w	r3, r3, #4
  40696a:	81a3      	strh	r3, [r4, #12]
  40696c:	e7e3      	b.n	406936 <__srefill_r+0x52>
  40696e:	89a3      	ldrh	r3, [r4, #12]
  406970:	d119      	bne.n	4069a6 <__srefill_r+0xc2>
  406972:	f043 0320 	orr.w	r3, r3, #32
  406976:	81a3      	strh	r3, [r4, #12]
  406978:	f04f 30ff 	mov.w	r0, #4294967295
  40697c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40697e:	f7fe fb03 	bl	404f88 <__sinit>
  406982:	e7b6      	b.n	4068f2 <__srefill_r+0xe>
  406984:	4b1a      	ldr	r3, [pc, #104]	; (4069f0 <__srefill_r+0x10c>)
  406986:	491b      	ldr	r1, [pc, #108]	; (4069f4 <__srefill_r+0x110>)
  406988:	6818      	ldr	r0, [r3, #0]
  40698a:	2301      	movs	r3, #1
  40698c:	81a3      	strh	r3, [r4, #12]
  40698e:	f006 0609 	and.w	r6, r6, #9
  406992:	f7fe fe7d 	bl	405690 <_fwalk>
  406996:	2e09      	cmp	r6, #9
  406998:	81a7      	strh	r7, [r4, #12]
  40699a:	d1d4      	bne.n	406946 <__srefill_r+0x62>
  40699c:	4621      	mov	r1, r4
  40699e:	4628      	mov	r0, r5
  4069a0:	f7fe f9e8 	bl	404d74 <__sflush_r>
  4069a4:	e7cf      	b.n	406946 <__srefill_r+0x62>
  4069a6:	2200      	movs	r2, #0
  4069a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4069ac:	81a3      	strh	r3, [r4, #12]
  4069ae:	6062      	str	r2, [r4, #4]
  4069b0:	f04f 30ff 	mov.w	r0, #4294967295
  4069b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4069b6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  4069b8:	6023      	str	r3, [r4, #0]
  4069ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4069bc:	4621      	mov	r1, r4
  4069be:	4628      	mov	r0, r5
  4069c0:	f7fe fa78 	bl	404eb4 <_fflush_r>
  4069c4:	2800      	cmp	r0, #0
  4069c6:	d1d7      	bne.n	406978 <__srefill_r+0x94>
  4069c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4069cc:	60a0      	str	r0, [r4, #8]
  4069ce:	61a0      	str	r0, [r4, #24]
  4069d0:	f023 0308 	bic.w	r3, r3, #8
  4069d4:	e7c7      	b.n	406966 <__srefill_r+0x82>
  4069d6:	4621      	mov	r1, r4
  4069d8:	4628      	mov	r0, r5
  4069da:	f7fe fefb 	bl	4057d4 <__smakebuf_r>
  4069de:	e7ad      	b.n	40693c <__srefill_r+0x58>
  4069e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4069e4:	2209      	movs	r2, #9
  4069e6:	602a      	str	r2, [r5, #0]
  4069e8:	f04f 30ff 	mov.w	r0, #4294967295
  4069ec:	81a3      	strh	r3, [r4, #12]
  4069ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4069f0:	00407338 	.word	0x00407338
  4069f4:	004068d1 	.word	0x004068d1

004069f8 <_sbrk_r>:
  4069f8:	b538      	push	{r3, r4, r5, lr}
  4069fa:	4c07      	ldr	r4, [pc, #28]	; (406a18 <_sbrk_r+0x20>)
  4069fc:	2300      	movs	r3, #0
  4069fe:	4605      	mov	r5, r0
  406a00:	4608      	mov	r0, r1
  406a02:	6023      	str	r3, [r4, #0]
  406a04:	f7fa fdf2 	bl	4015ec <_sbrk>
  406a08:	1c43      	adds	r3, r0, #1
  406a0a:	d000      	beq.n	406a0e <_sbrk_r+0x16>
  406a0c:	bd38      	pop	{r3, r4, r5, pc}
  406a0e:	6823      	ldr	r3, [r4, #0]
  406a10:	2b00      	cmp	r3, #0
  406a12:	d0fb      	beq.n	406a0c <_sbrk_r+0x14>
  406a14:	602b      	str	r3, [r5, #0]
  406a16:	bd38      	pop	{r3, r4, r5, pc}
  406a18:	2040167c 	.word	0x2040167c

00406a1c <__sread>:
  406a1c:	b510      	push	{r4, lr}
  406a1e:	460c      	mov	r4, r1
  406a20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406a24:	f000 fa26 	bl	406e74 <_read_r>
  406a28:	2800      	cmp	r0, #0
  406a2a:	db03      	blt.n	406a34 <__sread+0x18>
  406a2c:	6d23      	ldr	r3, [r4, #80]	; 0x50
  406a2e:	4403      	add	r3, r0
  406a30:	6523      	str	r3, [r4, #80]	; 0x50
  406a32:	bd10      	pop	{r4, pc}
  406a34:	89a3      	ldrh	r3, [r4, #12]
  406a36:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  406a3a:	81a3      	strh	r3, [r4, #12]
  406a3c:	bd10      	pop	{r4, pc}
  406a3e:	bf00      	nop

00406a40 <__swrite>:
  406a40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406a44:	4616      	mov	r6, r2
  406a46:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  406a4a:	461f      	mov	r7, r3
  406a4c:	05d3      	lsls	r3, r2, #23
  406a4e:	460c      	mov	r4, r1
  406a50:	4605      	mov	r5, r0
  406a52:	d507      	bpl.n	406a64 <__swrite+0x24>
  406a54:	2200      	movs	r2, #0
  406a56:	2302      	movs	r3, #2
  406a58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406a5c:	f000 f9f4 	bl	406e48 <_lseek_r>
  406a60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  406a64:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  406a68:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  406a6c:	81a2      	strh	r2, [r4, #12]
  406a6e:	463b      	mov	r3, r7
  406a70:	4632      	mov	r2, r6
  406a72:	4628      	mov	r0, r5
  406a74:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  406a78:	f000 b8a4 	b.w	406bc4 <_write_r>

00406a7c <__sseek>:
  406a7c:	b510      	push	{r4, lr}
  406a7e:	460c      	mov	r4, r1
  406a80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406a84:	f000 f9e0 	bl	406e48 <_lseek_r>
  406a88:	89a3      	ldrh	r3, [r4, #12]
  406a8a:	1c42      	adds	r2, r0, #1
  406a8c:	bf0e      	itee	eq
  406a8e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  406a92:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  406a96:	6520      	strne	r0, [r4, #80]	; 0x50
  406a98:	81a3      	strh	r3, [r4, #12]
  406a9a:	bd10      	pop	{r4, pc}

00406a9c <__sclose>:
  406a9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406aa0:	f000 b938 	b.w	406d14 <_close_r>

00406aa4 <__swbuf_r>:
  406aa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406aa6:	460d      	mov	r5, r1
  406aa8:	4614      	mov	r4, r2
  406aaa:	4606      	mov	r6, r0
  406aac:	b110      	cbz	r0, 406ab4 <__swbuf_r+0x10>
  406aae:	6b83      	ldr	r3, [r0, #56]	; 0x38
  406ab0:	2b00      	cmp	r3, #0
  406ab2:	d04b      	beq.n	406b4c <__swbuf_r+0xa8>
  406ab4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  406ab8:	69a3      	ldr	r3, [r4, #24]
  406aba:	60a3      	str	r3, [r4, #8]
  406abc:	b291      	uxth	r1, r2
  406abe:	0708      	lsls	r0, r1, #28
  406ac0:	d539      	bpl.n	406b36 <__swbuf_r+0x92>
  406ac2:	6923      	ldr	r3, [r4, #16]
  406ac4:	2b00      	cmp	r3, #0
  406ac6:	d036      	beq.n	406b36 <__swbuf_r+0x92>
  406ac8:	b2ed      	uxtb	r5, r5
  406aca:	0489      	lsls	r1, r1, #18
  406acc:	462f      	mov	r7, r5
  406ace:	d515      	bpl.n	406afc <__swbuf_r+0x58>
  406ad0:	6822      	ldr	r2, [r4, #0]
  406ad2:	6961      	ldr	r1, [r4, #20]
  406ad4:	1ad3      	subs	r3, r2, r3
  406ad6:	428b      	cmp	r3, r1
  406ad8:	da1c      	bge.n	406b14 <__swbuf_r+0x70>
  406ada:	3301      	adds	r3, #1
  406adc:	68a1      	ldr	r1, [r4, #8]
  406ade:	1c50      	adds	r0, r2, #1
  406ae0:	3901      	subs	r1, #1
  406ae2:	60a1      	str	r1, [r4, #8]
  406ae4:	6020      	str	r0, [r4, #0]
  406ae6:	7015      	strb	r5, [r2, #0]
  406ae8:	6962      	ldr	r2, [r4, #20]
  406aea:	429a      	cmp	r2, r3
  406aec:	d01a      	beq.n	406b24 <__swbuf_r+0x80>
  406aee:	89a3      	ldrh	r3, [r4, #12]
  406af0:	07db      	lsls	r3, r3, #31
  406af2:	d501      	bpl.n	406af8 <__swbuf_r+0x54>
  406af4:	2d0a      	cmp	r5, #10
  406af6:	d015      	beq.n	406b24 <__swbuf_r+0x80>
  406af8:	4638      	mov	r0, r7
  406afa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406afc:	6e61      	ldr	r1, [r4, #100]	; 0x64
  406afe:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  406b02:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  406b06:	81a2      	strh	r2, [r4, #12]
  406b08:	6822      	ldr	r2, [r4, #0]
  406b0a:	6661      	str	r1, [r4, #100]	; 0x64
  406b0c:	6961      	ldr	r1, [r4, #20]
  406b0e:	1ad3      	subs	r3, r2, r3
  406b10:	428b      	cmp	r3, r1
  406b12:	dbe2      	blt.n	406ada <__swbuf_r+0x36>
  406b14:	4621      	mov	r1, r4
  406b16:	4630      	mov	r0, r6
  406b18:	f7fe f9cc 	bl	404eb4 <_fflush_r>
  406b1c:	b940      	cbnz	r0, 406b30 <__swbuf_r+0x8c>
  406b1e:	6822      	ldr	r2, [r4, #0]
  406b20:	2301      	movs	r3, #1
  406b22:	e7db      	b.n	406adc <__swbuf_r+0x38>
  406b24:	4621      	mov	r1, r4
  406b26:	4630      	mov	r0, r6
  406b28:	f7fe f9c4 	bl	404eb4 <_fflush_r>
  406b2c:	2800      	cmp	r0, #0
  406b2e:	d0e3      	beq.n	406af8 <__swbuf_r+0x54>
  406b30:	f04f 37ff 	mov.w	r7, #4294967295
  406b34:	e7e0      	b.n	406af8 <__swbuf_r+0x54>
  406b36:	4621      	mov	r1, r4
  406b38:	4630      	mov	r0, r6
  406b3a:	f7fd f8e7 	bl	403d0c <__swsetup_r>
  406b3e:	2800      	cmp	r0, #0
  406b40:	d1f6      	bne.n	406b30 <__swbuf_r+0x8c>
  406b42:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  406b46:	6923      	ldr	r3, [r4, #16]
  406b48:	b291      	uxth	r1, r2
  406b4a:	e7bd      	b.n	406ac8 <__swbuf_r+0x24>
  406b4c:	f7fe fa1c 	bl	404f88 <__sinit>
  406b50:	e7b0      	b.n	406ab4 <__swbuf_r+0x10>
  406b52:	bf00      	nop

00406b54 <_wcrtomb_r>:
  406b54:	b5f0      	push	{r4, r5, r6, r7, lr}
  406b56:	4606      	mov	r6, r0
  406b58:	b085      	sub	sp, #20
  406b5a:	461f      	mov	r7, r3
  406b5c:	b189      	cbz	r1, 406b82 <_wcrtomb_r+0x2e>
  406b5e:	4c10      	ldr	r4, [pc, #64]	; (406ba0 <_wcrtomb_r+0x4c>)
  406b60:	4d10      	ldr	r5, [pc, #64]	; (406ba4 <_wcrtomb_r+0x50>)
  406b62:	6824      	ldr	r4, [r4, #0]
  406b64:	6b64      	ldr	r4, [r4, #52]	; 0x34
  406b66:	2c00      	cmp	r4, #0
  406b68:	bf08      	it	eq
  406b6a:	462c      	moveq	r4, r5
  406b6c:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  406b70:	47a0      	blx	r4
  406b72:	1c43      	adds	r3, r0, #1
  406b74:	d103      	bne.n	406b7e <_wcrtomb_r+0x2a>
  406b76:	2200      	movs	r2, #0
  406b78:	238a      	movs	r3, #138	; 0x8a
  406b7a:	603a      	str	r2, [r7, #0]
  406b7c:	6033      	str	r3, [r6, #0]
  406b7e:	b005      	add	sp, #20
  406b80:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406b82:	460c      	mov	r4, r1
  406b84:	4906      	ldr	r1, [pc, #24]	; (406ba0 <_wcrtomb_r+0x4c>)
  406b86:	4a07      	ldr	r2, [pc, #28]	; (406ba4 <_wcrtomb_r+0x50>)
  406b88:	6809      	ldr	r1, [r1, #0]
  406b8a:	6b49      	ldr	r1, [r1, #52]	; 0x34
  406b8c:	2900      	cmp	r1, #0
  406b8e:	bf08      	it	eq
  406b90:	4611      	moveq	r1, r2
  406b92:	4622      	mov	r2, r4
  406b94:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  406b98:	a901      	add	r1, sp, #4
  406b9a:	47a0      	blx	r4
  406b9c:	e7e9      	b.n	406b72 <_wcrtomb_r+0x1e>
  406b9e:	bf00      	nop
  406ba0:	20400018 	.word	0x20400018
  406ba4:	2040044c 	.word	0x2040044c

00406ba8 <__ascii_wctomb>:
  406ba8:	b121      	cbz	r1, 406bb4 <__ascii_wctomb+0xc>
  406baa:	2aff      	cmp	r2, #255	; 0xff
  406bac:	d804      	bhi.n	406bb8 <__ascii_wctomb+0x10>
  406bae:	700a      	strb	r2, [r1, #0]
  406bb0:	2001      	movs	r0, #1
  406bb2:	4770      	bx	lr
  406bb4:	4608      	mov	r0, r1
  406bb6:	4770      	bx	lr
  406bb8:	238a      	movs	r3, #138	; 0x8a
  406bba:	6003      	str	r3, [r0, #0]
  406bbc:	f04f 30ff 	mov.w	r0, #4294967295
  406bc0:	4770      	bx	lr
  406bc2:	bf00      	nop

00406bc4 <_write_r>:
  406bc4:	b570      	push	{r4, r5, r6, lr}
  406bc6:	460d      	mov	r5, r1
  406bc8:	4c08      	ldr	r4, [pc, #32]	; (406bec <_write_r+0x28>)
  406bca:	4611      	mov	r1, r2
  406bcc:	4606      	mov	r6, r0
  406bce:	461a      	mov	r2, r3
  406bd0:	4628      	mov	r0, r5
  406bd2:	2300      	movs	r3, #0
  406bd4:	6023      	str	r3, [r4, #0]
  406bd6:	f7fa f963 	bl	400ea0 <_write>
  406bda:	1c43      	adds	r3, r0, #1
  406bdc:	d000      	beq.n	406be0 <_write_r+0x1c>
  406bde:	bd70      	pop	{r4, r5, r6, pc}
  406be0:	6823      	ldr	r3, [r4, #0]
  406be2:	2b00      	cmp	r3, #0
  406be4:	d0fb      	beq.n	406bde <_write_r+0x1a>
  406be6:	6033      	str	r3, [r6, #0]
  406be8:	bd70      	pop	{r4, r5, r6, pc}
  406bea:	bf00      	nop
  406bec:	2040167c 	.word	0x2040167c

00406bf0 <__register_exitproc>:
  406bf0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406bf4:	4d2c      	ldr	r5, [pc, #176]	; (406ca8 <__register_exitproc+0xb8>)
  406bf6:	4606      	mov	r6, r0
  406bf8:	6828      	ldr	r0, [r5, #0]
  406bfa:	4698      	mov	r8, r3
  406bfc:	460f      	mov	r7, r1
  406bfe:	4691      	mov	r9, r2
  406c00:	f7fe fdb6 	bl	405770 <__retarget_lock_acquire_recursive>
  406c04:	4b29      	ldr	r3, [pc, #164]	; (406cac <__register_exitproc+0xbc>)
  406c06:	681c      	ldr	r4, [r3, #0]
  406c08:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  406c0c:	2b00      	cmp	r3, #0
  406c0e:	d03e      	beq.n	406c8e <__register_exitproc+0x9e>
  406c10:	685a      	ldr	r2, [r3, #4]
  406c12:	2a1f      	cmp	r2, #31
  406c14:	dc1c      	bgt.n	406c50 <__register_exitproc+0x60>
  406c16:	f102 0e01 	add.w	lr, r2, #1
  406c1a:	b176      	cbz	r6, 406c3a <__register_exitproc+0x4a>
  406c1c:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  406c20:	2401      	movs	r4, #1
  406c22:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  406c26:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  406c2a:	4094      	lsls	r4, r2
  406c2c:	4320      	orrs	r0, r4
  406c2e:	2e02      	cmp	r6, #2
  406c30:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  406c34:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  406c38:	d023      	beq.n	406c82 <__register_exitproc+0x92>
  406c3a:	3202      	adds	r2, #2
  406c3c:	f8c3 e004 	str.w	lr, [r3, #4]
  406c40:	6828      	ldr	r0, [r5, #0]
  406c42:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  406c46:	f7fe fd95 	bl	405774 <__retarget_lock_release_recursive>
  406c4a:	2000      	movs	r0, #0
  406c4c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406c50:	4b17      	ldr	r3, [pc, #92]	; (406cb0 <__register_exitproc+0xc0>)
  406c52:	b30b      	cbz	r3, 406c98 <__register_exitproc+0xa8>
  406c54:	f44f 70c8 	mov.w	r0, #400	; 0x190
  406c58:	f7fe fe06 	bl	405868 <malloc>
  406c5c:	4603      	mov	r3, r0
  406c5e:	b1d8      	cbz	r0, 406c98 <__register_exitproc+0xa8>
  406c60:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  406c64:	6002      	str	r2, [r0, #0]
  406c66:	2100      	movs	r1, #0
  406c68:	6041      	str	r1, [r0, #4]
  406c6a:	460a      	mov	r2, r1
  406c6c:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  406c70:	f04f 0e01 	mov.w	lr, #1
  406c74:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  406c78:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  406c7c:	2e00      	cmp	r6, #0
  406c7e:	d0dc      	beq.n	406c3a <__register_exitproc+0x4a>
  406c80:	e7cc      	b.n	406c1c <__register_exitproc+0x2c>
  406c82:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  406c86:	430c      	orrs	r4, r1
  406c88:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  406c8c:	e7d5      	b.n	406c3a <__register_exitproc+0x4a>
  406c8e:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  406c92:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  406c96:	e7bb      	b.n	406c10 <__register_exitproc+0x20>
  406c98:	6828      	ldr	r0, [r5, #0]
  406c9a:	f7fe fd6b 	bl	405774 <__retarget_lock_release_recursive>
  406c9e:	f04f 30ff 	mov.w	r0, #4294967295
  406ca2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406ca6:	bf00      	nop
  406ca8:	20400448 	.word	0x20400448
  406cac:	00407338 	.word	0x00407338
  406cb0:	00405869 	.word	0x00405869

00406cb4 <_calloc_r>:
  406cb4:	b510      	push	{r4, lr}
  406cb6:	fb02 f101 	mul.w	r1, r2, r1
  406cba:	f7fe fddd 	bl	405878 <_malloc_r>
  406cbe:	4604      	mov	r4, r0
  406cc0:	b1d8      	cbz	r0, 406cfa <_calloc_r+0x46>
  406cc2:	f850 2c04 	ldr.w	r2, [r0, #-4]
  406cc6:	f022 0203 	bic.w	r2, r2, #3
  406cca:	3a04      	subs	r2, #4
  406ccc:	2a24      	cmp	r2, #36	; 0x24
  406cce:	d818      	bhi.n	406d02 <_calloc_r+0x4e>
  406cd0:	2a13      	cmp	r2, #19
  406cd2:	d914      	bls.n	406cfe <_calloc_r+0x4a>
  406cd4:	2300      	movs	r3, #0
  406cd6:	2a1b      	cmp	r2, #27
  406cd8:	6003      	str	r3, [r0, #0]
  406cda:	6043      	str	r3, [r0, #4]
  406cdc:	d916      	bls.n	406d0c <_calloc_r+0x58>
  406cde:	2a24      	cmp	r2, #36	; 0x24
  406ce0:	6083      	str	r3, [r0, #8]
  406ce2:	60c3      	str	r3, [r0, #12]
  406ce4:	bf11      	iteee	ne
  406ce6:	f100 0210 	addne.w	r2, r0, #16
  406cea:	6103      	streq	r3, [r0, #16]
  406cec:	6143      	streq	r3, [r0, #20]
  406cee:	f100 0218 	addeq.w	r2, r0, #24
  406cf2:	2300      	movs	r3, #0
  406cf4:	6013      	str	r3, [r2, #0]
  406cf6:	6053      	str	r3, [r2, #4]
  406cf8:	6093      	str	r3, [r2, #8]
  406cfa:	4620      	mov	r0, r4
  406cfc:	bd10      	pop	{r4, pc}
  406cfe:	4602      	mov	r2, r0
  406d00:	e7f7      	b.n	406cf2 <_calloc_r+0x3e>
  406d02:	2100      	movs	r1, #0
  406d04:	f7fb faae 	bl	402264 <memset>
  406d08:	4620      	mov	r0, r4
  406d0a:	bd10      	pop	{r4, pc}
  406d0c:	f100 0208 	add.w	r2, r0, #8
  406d10:	e7ef      	b.n	406cf2 <_calloc_r+0x3e>
  406d12:	bf00      	nop

00406d14 <_close_r>:
  406d14:	b538      	push	{r3, r4, r5, lr}
  406d16:	4c07      	ldr	r4, [pc, #28]	; (406d34 <_close_r+0x20>)
  406d18:	2300      	movs	r3, #0
  406d1a:	4605      	mov	r5, r0
  406d1c:	4608      	mov	r0, r1
  406d1e:	6023      	str	r3, [r4, #0]
  406d20:	f7fa fc80 	bl	401624 <_close>
  406d24:	1c43      	adds	r3, r0, #1
  406d26:	d000      	beq.n	406d2a <_close_r+0x16>
  406d28:	bd38      	pop	{r3, r4, r5, pc}
  406d2a:	6823      	ldr	r3, [r4, #0]
  406d2c:	2b00      	cmp	r3, #0
  406d2e:	d0fb      	beq.n	406d28 <_close_r+0x14>
  406d30:	602b      	str	r3, [r5, #0]
  406d32:	bd38      	pop	{r3, r4, r5, pc}
  406d34:	2040167c 	.word	0x2040167c

00406d38 <_fclose_r>:
  406d38:	b570      	push	{r4, r5, r6, lr}
  406d3a:	b159      	cbz	r1, 406d54 <_fclose_r+0x1c>
  406d3c:	4605      	mov	r5, r0
  406d3e:	460c      	mov	r4, r1
  406d40:	b110      	cbz	r0, 406d48 <_fclose_r+0x10>
  406d42:	6b83      	ldr	r3, [r0, #56]	; 0x38
  406d44:	2b00      	cmp	r3, #0
  406d46:	d03c      	beq.n	406dc2 <_fclose_r+0x8a>
  406d48:	6e63      	ldr	r3, [r4, #100]	; 0x64
  406d4a:	07d8      	lsls	r0, r3, #31
  406d4c:	d505      	bpl.n	406d5a <_fclose_r+0x22>
  406d4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406d52:	b92b      	cbnz	r3, 406d60 <_fclose_r+0x28>
  406d54:	2600      	movs	r6, #0
  406d56:	4630      	mov	r0, r6
  406d58:	bd70      	pop	{r4, r5, r6, pc}
  406d5a:	89a3      	ldrh	r3, [r4, #12]
  406d5c:	0599      	lsls	r1, r3, #22
  406d5e:	d53c      	bpl.n	406dda <_fclose_r+0xa2>
  406d60:	4621      	mov	r1, r4
  406d62:	4628      	mov	r0, r5
  406d64:	f7fe f806 	bl	404d74 <__sflush_r>
  406d68:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  406d6a:	4606      	mov	r6, r0
  406d6c:	b133      	cbz	r3, 406d7c <_fclose_r+0x44>
  406d6e:	69e1      	ldr	r1, [r4, #28]
  406d70:	4628      	mov	r0, r5
  406d72:	4798      	blx	r3
  406d74:	2800      	cmp	r0, #0
  406d76:	bfb8      	it	lt
  406d78:	f04f 36ff 	movlt.w	r6, #4294967295
  406d7c:	89a3      	ldrh	r3, [r4, #12]
  406d7e:	061a      	lsls	r2, r3, #24
  406d80:	d422      	bmi.n	406dc8 <_fclose_r+0x90>
  406d82:	6b21      	ldr	r1, [r4, #48]	; 0x30
  406d84:	b141      	cbz	r1, 406d98 <_fclose_r+0x60>
  406d86:	f104 0340 	add.w	r3, r4, #64	; 0x40
  406d8a:	4299      	cmp	r1, r3
  406d8c:	d002      	beq.n	406d94 <_fclose_r+0x5c>
  406d8e:	4628      	mov	r0, r5
  406d90:	f7fe fa20 	bl	4051d4 <_free_r>
  406d94:	2300      	movs	r3, #0
  406d96:	6323      	str	r3, [r4, #48]	; 0x30
  406d98:	6c61      	ldr	r1, [r4, #68]	; 0x44
  406d9a:	b121      	cbz	r1, 406da6 <_fclose_r+0x6e>
  406d9c:	4628      	mov	r0, r5
  406d9e:	f7fe fa19 	bl	4051d4 <_free_r>
  406da2:	2300      	movs	r3, #0
  406da4:	6463      	str	r3, [r4, #68]	; 0x44
  406da6:	f7fe f91b 	bl	404fe0 <__sfp_lock_acquire>
  406daa:	6e63      	ldr	r3, [r4, #100]	; 0x64
  406dac:	2200      	movs	r2, #0
  406dae:	07db      	lsls	r3, r3, #31
  406db0:	81a2      	strh	r2, [r4, #12]
  406db2:	d50e      	bpl.n	406dd2 <_fclose_r+0x9a>
  406db4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406db6:	f7fe fcd9 	bl	40576c <__retarget_lock_close_recursive>
  406dba:	f7fe f917 	bl	404fec <__sfp_lock_release>
  406dbe:	4630      	mov	r0, r6
  406dc0:	bd70      	pop	{r4, r5, r6, pc}
  406dc2:	f7fe f8e1 	bl	404f88 <__sinit>
  406dc6:	e7bf      	b.n	406d48 <_fclose_r+0x10>
  406dc8:	6921      	ldr	r1, [r4, #16]
  406dca:	4628      	mov	r0, r5
  406dcc:	f7fe fa02 	bl	4051d4 <_free_r>
  406dd0:	e7d7      	b.n	406d82 <_fclose_r+0x4a>
  406dd2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406dd4:	f7fe fcce 	bl	405774 <__retarget_lock_release_recursive>
  406dd8:	e7ec      	b.n	406db4 <_fclose_r+0x7c>
  406dda:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406ddc:	f7fe fcc8 	bl	405770 <__retarget_lock_acquire_recursive>
  406de0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406de4:	2b00      	cmp	r3, #0
  406de6:	d1bb      	bne.n	406d60 <_fclose_r+0x28>
  406de8:	6e66      	ldr	r6, [r4, #100]	; 0x64
  406dea:	f016 0601 	ands.w	r6, r6, #1
  406dee:	d1b1      	bne.n	406d54 <_fclose_r+0x1c>
  406df0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406df2:	f7fe fcbf 	bl	405774 <__retarget_lock_release_recursive>
  406df6:	4630      	mov	r0, r6
  406df8:	bd70      	pop	{r4, r5, r6, pc}
  406dfa:	bf00      	nop

00406dfc <_fstat_r>:
  406dfc:	b538      	push	{r3, r4, r5, lr}
  406dfe:	460b      	mov	r3, r1
  406e00:	4c07      	ldr	r4, [pc, #28]	; (406e20 <_fstat_r+0x24>)
  406e02:	4605      	mov	r5, r0
  406e04:	4611      	mov	r1, r2
  406e06:	4618      	mov	r0, r3
  406e08:	2300      	movs	r3, #0
  406e0a:	6023      	str	r3, [r4, #0]
  406e0c:	f7fa fc0d 	bl	40162a <_fstat>
  406e10:	1c43      	adds	r3, r0, #1
  406e12:	d000      	beq.n	406e16 <_fstat_r+0x1a>
  406e14:	bd38      	pop	{r3, r4, r5, pc}
  406e16:	6823      	ldr	r3, [r4, #0]
  406e18:	2b00      	cmp	r3, #0
  406e1a:	d0fb      	beq.n	406e14 <_fstat_r+0x18>
  406e1c:	602b      	str	r3, [r5, #0]
  406e1e:	bd38      	pop	{r3, r4, r5, pc}
  406e20:	2040167c 	.word	0x2040167c

00406e24 <_isatty_r>:
  406e24:	b538      	push	{r3, r4, r5, lr}
  406e26:	4c07      	ldr	r4, [pc, #28]	; (406e44 <_isatty_r+0x20>)
  406e28:	2300      	movs	r3, #0
  406e2a:	4605      	mov	r5, r0
  406e2c:	4608      	mov	r0, r1
  406e2e:	6023      	str	r3, [r4, #0]
  406e30:	f7fa fc00 	bl	401634 <_isatty>
  406e34:	1c43      	adds	r3, r0, #1
  406e36:	d000      	beq.n	406e3a <_isatty_r+0x16>
  406e38:	bd38      	pop	{r3, r4, r5, pc}
  406e3a:	6823      	ldr	r3, [r4, #0]
  406e3c:	2b00      	cmp	r3, #0
  406e3e:	d0fb      	beq.n	406e38 <_isatty_r+0x14>
  406e40:	602b      	str	r3, [r5, #0]
  406e42:	bd38      	pop	{r3, r4, r5, pc}
  406e44:	2040167c 	.word	0x2040167c

00406e48 <_lseek_r>:
  406e48:	b570      	push	{r4, r5, r6, lr}
  406e4a:	460d      	mov	r5, r1
  406e4c:	4c08      	ldr	r4, [pc, #32]	; (406e70 <_lseek_r+0x28>)
  406e4e:	4611      	mov	r1, r2
  406e50:	4606      	mov	r6, r0
  406e52:	461a      	mov	r2, r3
  406e54:	4628      	mov	r0, r5
  406e56:	2300      	movs	r3, #0
  406e58:	6023      	str	r3, [r4, #0]
  406e5a:	f7fa fbed 	bl	401638 <_lseek>
  406e5e:	1c43      	adds	r3, r0, #1
  406e60:	d000      	beq.n	406e64 <_lseek_r+0x1c>
  406e62:	bd70      	pop	{r4, r5, r6, pc}
  406e64:	6823      	ldr	r3, [r4, #0]
  406e66:	2b00      	cmp	r3, #0
  406e68:	d0fb      	beq.n	406e62 <_lseek_r+0x1a>
  406e6a:	6033      	str	r3, [r6, #0]
  406e6c:	bd70      	pop	{r4, r5, r6, pc}
  406e6e:	bf00      	nop
  406e70:	2040167c 	.word	0x2040167c

00406e74 <_read_r>:
  406e74:	b570      	push	{r4, r5, r6, lr}
  406e76:	460d      	mov	r5, r1
  406e78:	4c08      	ldr	r4, [pc, #32]	; (406e9c <_read_r+0x28>)
  406e7a:	4611      	mov	r1, r2
  406e7c:	4606      	mov	r6, r0
  406e7e:	461a      	mov	r2, r3
  406e80:	4628      	mov	r0, r5
  406e82:	2300      	movs	r3, #0
  406e84:	6023      	str	r3, [r4, #0]
  406e86:	f7f9 f991 	bl	4001ac <_read>
  406e8a:	1c43      	adds	r3, r0, #1
  406e8c:	d000      	beq.n	406e90 <_read_r+0x1c>
  406e8e:	bd70      	pop	{r4, r5, r6, pc}
  406e90:	6823      	ldr	r3, [r4, #0]
  406e92:	2b00      	cmp	r3, #0
  406e94:	d0fb      	beq.n	406e8e <_read_r+0x1a>
  406e96:	6033      	str	r3, [r6, #0]
  406e98:	bd70      	pop	{r4, r5, r6, pc}
  406e9a:	bf00      	nop
  406e9c:	2040167c 	.word	0x2040167c

00406ea0 <__gedf2>:
  406ea0:	f04f 3cff 	mov.w	ip, #4294967295
  406ea4:	e006      	b.n	406eb4 <__cmpdf2+0x4>
  406ea6:	bf00      	nop

00406ea8 <__ledf2>:
  406ea8:	f04f 0c01 	mov.w	ip, #1
  406eac:	e002      	b.n	406eb4 <__cmpdf2+0x4>
  406eae:	bf00      	nop

00406eb0 <__cmpdf2>:
  406eb0:	f04f 0c01 	mov.w	ip, #1
  406eb4:	f84d cd04 	str.w	ip, [sp, #-4]!
  406eb8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406ebc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406ec0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406ec4:	bf18      	it	ne
  406ec6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406eca:	d01b      	beq.n	406f04 <__cmpdf2+0x54>
  406ecc:	b001      	add	sp, #4
  406ece:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  406ed2:	bf0c      	ite	eq
  406ed4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406ed8:	ea91 0f03 	teqne	r1, r3
  406edc:	bf02      	ittt	eq
  406ede:	ea90 0f02 	teqeq	r0, r2
  406ee2:	2000      	moveq	r0, #0
  406ee4:	4770      	bxeq	lr
  406ee6:	f110 0f00 	cmn.w	r0, #0
  406eea:	ea91 0f03 	teq	r1, r3
  406eee:	bf58      	it	pl
  406ef0:	4299      	cmppl	r1, r3
  406ef2:	bf08      	it	eq
  406ef4:	4290      	cmpeq	r0, r2
  406ef6:	bf2c      	ite	cs
  406ef8:	17d8      	asrcs	r0, r3, #31
  406efa:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406efe:	f040 0001 	orr.w	r0, r0, #1
  406f02:	4770      	bx	lr
  406f04:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406f08:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406f0c:	d102      	bne.n	406f14 <__cmpdf2+0x64>
  406f0e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406f12:	d107      	bne.n	406f24 <__cmpdf2+0x74>
  406f14:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406f18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406f1c:	d1d6      	bne.n	406ecc <__cmpdf2+0x1c>
  406f1e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406f22:	d0d3      	beq.n	406ecc <__cmpdf2+0x1c>
  406f24:	f85d 0b04 	ldr.w	r0, [sp], #4
  406f28:	4770      	bx	lr
  406f2a:	bf00      	nop

00406f2c <__aeabi_cdrcmple>:
  406f2c:	4684      	mov	ip, r0
  406f2e:	4610      	mov	r0, r2
  406f30:	4662      	mov	r2, ip
  406f32:	468c      	mov	ip, r1
  406f34:	4619      	mov	r1, r3
  406f36:	4663      	mov	r3, ip
  406f38:	e000      	b.n	406f3c <__aeabi_cdcmpeq>
  406f3a:	bf00      	nop

00406f3c <__aeabi_cdcmpeq>:
  406f3c:	b501      	push	{r0, lr}
  406f3e:	f7ff ffb7 	bl	406eb0 <__cmpdf2>
  406f42:	2800      	cmp	r0, #0
  406f44:	bf48      	it	mi
  406f46:	f110 0f00 	cmnmi.w	r0, #0
  406f4a:	bd01      	pop	{r0, pc}

00406f4c <__aeabi_dcmpeq>:
  406f4c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406f50:	f7ff fff4 	bl	406f3c <__aeabi_cdcmpeq>
  406f54:	bf0c      	ite	eq
  406f56:	2001      	moveq	r0, #1
  406f58:	2000      	movne	r0, #0
  406f5a:	f85d fb08 	ldr.w	pc, [sp], #8
  406f5e:	bf00      	nop

00406f60 <__aeabi_dcmplt>:
  406f60:	f84d ed08 	str.w	lr, [sp, #-8]!
  406f64:	f7ff ffea 	bl	406f3c <__aeabi_cdcmpeq>
  406f68:	bf34      	ite	cc
  406f6a:	2001      	movcc	r0, #1
  406f6c:	2000      	movcs	r0, #0
  406f6e:	f85d fb08 	ldr.w	pc, [sp], #8
  406f72:	bf00      	nop

00406f74 <__aeabi_dcmple>:
  406f74:	f84d ed08 	str.w	lr, [sp, #-8]!
  406f78:	f7ff ffe0 	bl	406f3c <__aeabi_cdcmpeq>
  406f7c:	bf94      	ite	ls
  406f7e:	2001      	movls	r0, #1
  406f80:	2000      	movhi	r0, #0
  406f82:	f85d fb08 	ldr.w	pc, [sp], #8
  406f86:	bf00      	nop

00406f88 <__aeabi_dcmpge>:
  406f88:	f84d ed08 	str.w	lr, [sp, #-8]!
  406f8c:	f7ff ffce 	bl	406f2c <__aeabi_cdrcmple>
  406f90:	bf94      	ite	ls
  406f92:	2001      	movls	r0, #1
  406f94:	2000      	movhi	r0, #0
  406f96:	f85d fb08 	ldr.w	pc, [sp], #8
  406f9a:	bf00      	nop

00406f9c <__aeabi_dcmpgt>:
  406f9c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406fa0:	f7ff ffc4 	bl	406f2c <__aeabi_cdrcmple>
  406fa4:	bf34      	ite	cc
  406fa6:	2001      	movcc	r0, #1
  406fa8:	2000      	movcs	r0, #0
  406faa:	f85d fb08 	ldr.w	pc, [sp], #8
  406fae:	bf00      	nop

00406fb0 <__aeabi_dcmpun>:
  406fb0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406fb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406fb8:	d102      	bne.n	406fc0 <__aeabi_dcmpun+0x10>
  406fba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406fbe:	d10a      	bne.n	406fd6 <__aeabi_dcmpun+0x26>
  406fc0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406fc4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406fc8:	d102      	bne.n	406fd0 <__aeabi_dcmpun+0x20>
  406fca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406fce:	d102      	bne.n	406fd6 <__aeabi_dcmpun+0x26>
  406fd0:	f04f 0000 	mov.w	r0, #0
  406fd4:	4770      	bx	lr
  406fd6:	f04f 0001 	mov.w	r0, #1
  406fda:	4770      	bx	lr

00406fdc <__aeabi_d2iz>:
  406fdc:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406fe0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  406fe4:	d215      	bcs.n	407012 <__aeabi_d2iz+0x36>
  406fe6:	d511      	bpl.n	40700c <__aeabi_d2iz+0x30>
  406fe8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406fec:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406ff0:	d912      	bls.n	407018 <__aeabi_d2iz+0x3c>
  406ff2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  406ff6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406ffa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406ffe:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407002:	fa23 f002 	lsr.w	r0, r3, r2
  407006:	bf18      	it	ne
  407008:	4240      	negne	r0, r0
  40700a:	4770      	bx	lr
  40700c:	f04f 0000 	mov.w	r0, #0
  407010:	4770      	bx	lr
  407012:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  407016:	d105      	bne.n	407024 <__aeabi_d2iz+0x48>
  407018:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  40701c:	bf08      	it	eq
  40701e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  407022:	4770      	bx	lr
  407024:	f04f 0000 	mov.w	r0, #0
  407028:	4770      	bx	lr
  40702a:	bf00      	nop
  40702c:	2d0a0a0d 	.word	0x2d0a0a0d
  407030:	2d2d2d2d 	.word	0x2d2d2d2d
  407034:	2d2d2d2d 	.word	0x2d2d2d2d
  407038:	2d2d2d2d 	.word	0x2d2d2d2d
  40703c:	2d2d2d2d 	.word	0x2d2d2d2d
  407040:	2d2d2d2d 	.word	0x2d2d2d2d
  407044:	2d2d2d2d 	.word	0x2d2d2d2d
  407048:	2d2d2d2d 	.word	0x2d2d2d2d
  40704c:	2d2d2d2d 	.word	0x2d2d2d2d
  407050:	2d2d2d2d 	.word	0x2d2d2d2d
  407054:	2d2d2d2d 	.word	0x2d2d2d2d
  407058:	2d2d2d2d 	.word	0x2d2d2d2d
  40705c:	2d0a0d2d 	.word	0x2d0a0d2d
  407060:	6144203e 	.word	0x6144203e
  407064:	69566b72 	.word	0x69566b72
  407068:	6e6f6973 	.word	0x6e6f6973
  40706c:	334c5020 	.word	0x334c5020
  407070:	47203036 	.word	0x47203036
  407074:	4c502d33 	.word	0x4c502d33
  407078:	414d2043 	.word	0x414d2043
  40707c:	54522043 	.word	0x54522043
  407080:	6c655420 	.word	0x6c655420
  407084:	74656d65 	.word	0x74656d65
  407088:	0a0d7972 	.word	0x0a0d7972
  40708c:	44203e2d 	.word	0x44203e2d
  407090:	33333156 	.word	0x33333156
  407094:	2f413134 	.word	0x2f413134
  407098:	33315644 	.word	0x33315644
  40709c:	41313833 	.word	0x41313833
  4070a0:	3e2d0a0d 	.word	0x3e2d0a0d
  4070a4:	6d6f4320 	.word	0x6d6f4320
  4070a8:	656c6970 	.word	0x656c6970
  4070ac:	41203a64 	.word	0x41203a64
  4070b0:	20207270 	.word	0x20207270
  4070b4:	30322033 	.word	0x30322033
  4070b8:	31203032 	.word	0x31203032
  4070bc:	31353a36 	.word	0x31353a36
  4070c0:	0d34313a 	.word	0x0d34313a
  4070c4:	2d2d2d0a 	.word	0x2d2d2d0a
  4070c8:	2d2d2d2d 	.word	0x2d2d2d2d
  4070cc:	2d2d2d2d 	.word	0x2d2d2d2d
  4070d0:	2d2d2d2d 	.word	0x2d2d2d2d
  4070d4:	2d2d2d2d 	.word	0x2d2d2d2d
  4070d8:	2d2d2d2d 	.word	0x2d2d2d2d
  4070dc:	2d2d2d2d 	.word	0x2d2d2d2d
  4070e0:	2d2d2d2d 	.word	0x2d2d2d2d
  4070e4:	2d2d2d2d 	.word	0x2d2d2d2d
  4070e8:	2d2d2d2d 	.word	0x2d2d2d2d
  4070ec:	2d2d2d2d 	.word	0x2d2d2d2d
  4070f0:	0d2d2d2d 	.word	0x0d2d2d2d
  4070f4:	0000000a 	.word	0x0000000a
  4070f8:	75540a0d 	.word	0x75540a0d
  4070fc:	49206e72 	.word	0x49206e72
  407100:	6e6f2052 	.word	0x6e6f2052
  407104:	00000d21 	.word	0x00000d21
  407108:	75540a0d 	.word	0x75540a0d
  40710c:	49206e72 	.word	0x49206e72
  407110:	666f2052 	.word	0x666f2052
  407114:	000d2166 	.word	0x000d2166
  407118:	7272655b 	.word	0x7272655b
  40711c:	095d726f 	.word	0x095d726f
  407120:	626f7250 	.word	0x626f7250
  407124:	736d656c 	.word	0x736d656c
  407128:	69727720 	.word	0x69727720
  40712c:	676e6974 	.word	0x676e6974
  407130:	206f7420 	.word	0x206f7420
  407134:	4d456f50 	.word	0x4d456f50
  407138:	616f6220 	.word	0x616f6220
  40713c:	76206472 	.word	0x76206472
  407140:	53206169 	.word	0x53206169
  407144:	0d214950 	.word	0x0d214950
  407148:	00000000 	.word	0x00000000
  40714c:	666e695b 	.word	0x666e695b
  407150:	4e095d6f 	.word	0x4e095d6f
  407154:	6968746f 	.word	0x6968746f
  407158:	7420676e 	.word	0x7420676e
  40715c:	6572206f 	.word	0x6572206f
  407160:	2e2e6461 	.word	0x2e2e6461
  407164:	00000d2e 	.word	0x00000d2e
  407168:	7272655b 	.word	0x7272655b
  40716c:	095d726f 	.word	0x095d726f
  407170:	676e6952 	.word	0x676e6952
  407174:	66756220 	.word	0x66756220
  407178:	20726566 	.word	0x20726566
  40717c:	6c6c7566 	.word	0x6c6c7566
  407180:	6769202c 	.word	0x6769202c
  407184:	69726f6e 	.word	0x69726f6e
  407188:	7720676e 	.word	0x7720676e
  40718c:	65746972 	.word	0x65746972
  407190:	000d2173 	.word	0x000d2173
  407194:	7272655b 	.word	0x7272655b
  407198:	095d726f 	.word	0x095d726f
  40719c:	6f636e49 	.word	0x6f636e49
  4071a0:	63657272 	.word	0x63657272
  4071a4:	72772074 	.word	0x72772074
  4071a8:	20657469 	.word	0x20657469
  4071ac:	65746e69 	.word	0x65746e69
  4071b0:	63616672 	.word	0x63616672
  4071b4:	6f742065 	.word	0x6f742065
  4071b8:	422d5a20 	.word	0x422d5a20
  4071bc:	6472616f 	.word	0x6472616f
  4071c0:	0000000d 	.word	0x0000000d
  4071c4:	7272655b 	.word	0x7272655b
  4071c8:	095d726f 	.word	0x095d726f
  4071cc:	6f636e49 	.word	0x6f636e49
  4071d0:	63657272 	.word	0x63657272
  4071d4:	72772074 	.word	0x72772074
  4071d8:	20657469 	.word	0x20657469
  4071dc:	65747962 	.word	0x65747962
  4071e0:	61727420 	.word	0x61727420
  4071e4:	6566736e 	.word	0x6566736e
  4071e8:	656c2072 	.word	0x656c2072
  4071ec:	6874676e 	.word	0x6874676e
  4071f0:	206f7420 	.word	0x206f7420
  4071f4:	6f422d5a 	.word	0x6f422d5a
  4071f8:	0d647261 	.word	0x0d647261
  4071fc:	00000000 	.word	0x00000000
  407200:	7272655b 	.word	0x7272655b
  407204:	095d726f 	.word	0x095d726f
  407208:	74697257 	.word	0x74697257
  40720c:	65722065 	.word	0x65722065
  407210:	622d6461 	.word	0x622d6461
  407214:	206b6361 	.word	0x206b6361
  407218:	64616568 	.word	0x64616568
  40721c:	64207265 	.word	0x64207265
  407220:	2073656f 	.word	0x2073656f
  407224:	20746f6e 	.word	0x20746f6e
  407228:	6374616d 	.word	0x6374616d
  40722c:	00000d68 	.word	0x00000d68
  407230:	7272655b 	.word	0x7272655b
  407234:	095d726f 	.word	0x095d726f
  407238:	74697257 	.word	0x74697257
  40723c:	65722065 	.word	0x65722065
  407240:	622d6461 	.word	0x622d6461
  407244:	206b6361 	.word	0x206b6361
  407248:	69766564 	.word	0x69766564
  40724c:	61206563 	.word	0x61206563
  407250:	65726464 	.word	0x65726464
  407254:	64207373 	.word	0x64207373
  407258:	2073656f 	.word	0x2073656f
  40725c:	20746f6e 	.word	0x20746f6e
  407260:	6374616d 	.word	0x6374616d
  407264:	00000d68 	.word	0x00000d68
  407268:	7272655b 	.word	0x7272655b
  40726c:	095d726f 	.word	0x095d726f
  407270:	74697257 	.word	0x74697257
  407274:	65722065 	.word	0x65722065
  407278:	622d6461 	.word	0x622d6461
  40727c:	206b6361 	.word	0x206b6361
  407280:	69676572 	.word	0x69676572
  407284:	72657473 	.word	0x72657473
  407288:	64646120 	.word	0x64646120
  40728c:	73736572 	.word	0x73736572
  407290:	656f6420 	.word	0x656f6420
  407294:	6f6e2073 	.word	0x6f6e2073
  407298:	616d2074 	.word	0x616d2074
  40729c:	0d686374 	.word	0x0d686374
  4072a0:	00000000 	.word	0x00000000
  4072a4:	7272655b 	.word	0x7272655b
  4072a8:	095d726f 	.word	0x095d726f
  4072ac:	41206f4e 	.word	0x41206f4e
  4072b0:	66204b43 	.word	0x66204b43
  4072b4:	206d6f72 	.word	0x206d6f72
  4072b8:	6f702d5a 	.word	0x6f702d5a
  4072bc:	69746973 	.word	0x69746973
  4072c0:	62206e6f 	.word	0x62206e6f
  4072c4:	6472616f 	.word	0x6472616f
  4072c8:	63657220 	.word	0x63657220
  4072cc:	65766965 	.word	0x65766965
  4072d0:	000d2164 	.word	0x000d2164
  4072d4:	64616568 	.word	0x64616568
  4072d8:	203a7265 	.word	0x203a7265
  4072dc:	30257830 	.word	0x30257830
  4072e0:	0a0d5832 	.word	0x0a0d5832
  4072e4:	00000000 	.word	0x00000000
  4072e8:	41766564 	.word	0x41766564
  4072ec:	3a726464 	.word	0x3a726464
  4072f0:	25783020 	.word	0x25783020
  4072f4:	0d583230 	.word	0x0d583230
  4072f8:	0000000a 	.word	0x0000000a
  4072fc:	41676572 	.word	0x41676572
  407300:	3a726464 	.word	0x3a726464
  407304:	25783020 	.word	0x25783020
  407308:	0d583230 	.word	0x0d583230
  40730c:	0000000a 	.word	0x0000000a
  407310:	61746164 	.word	0x61746164
  407314:	3a5d305b 	.word	0x3a5d305b
  407318:	25783020 	.word	0x25783020
  40731c:	0d583230 	.word	0x0d583230
  407320:	0000000a 	.word	0x0000000a
  407324:	61746164 	.word	0x61746164
  407328:	3a5d315b 	.word	0x3a5d315b
  40732c:	25783020 	.word	0x25783020
  407330:	0d583230 	.word	0x0d583230
  407334:	0000000a 	.word	0x0000000a

00407338 <_global_impure_ptr>:
  407338:	20400020 00464e49 00666e69 004e414e      .@ INF.inf.NAN.
  407348:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  407358:	46454443 00000000 33323130 37363534     CDEF....01234567
  407368:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  407378:	0000296c 00000030                       l)..0...

00407380 <blanks.7238>:
  407380:	20202020 20202020 20202020 20202020                     

00407390 <zeroes.7239>:
  407390:	30303030 30303030 30303030 30303030     0000000000000000
  4073a0:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  4073b0:	00000043 49534f50 00000058 0000002e     C...POSIX.......

004073c0 <__mprec_bigtens>:
  4073c0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  4073d0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  4073e0:	7f73bf3c 75154fdd                       <.s..O.u

004073e8 <__mprec_tens>:
  4073e8:	00000000 3ff00000 00000000 40240000     .......?......$@
  4073f8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  407408:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  407418:	00000000 412e8480 00000000 416312d0     .......A......cA
  407428:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  407438:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  407448:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  407458:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  407468:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  407478:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  407488:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  407498:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  4074a8:	79d99db4 44ea7843                       ...yCx.D

004074b0 <p05.6055>:
  4074b0:	00000005 00000019 0000007d              ........}...

004074bc <_ctype_>:
  4074bc:	20202000 20202020 28282020 20282828     .         ((((( 
  4074cc:	20202020 20202020 20202020 20202020                     
  4074dc:	10108820 10101010 10101010 10101010      ...............
  4074ec:	04040410 04040404 10040404 10101010     ................
  4074fc:	41411010 41414141 01010101 01010101     ..AAAAAA........
  40750c:	01010101 01010101 01010101 10101010     ................
  40751c:	42421010 42424242 02020202 02020202     ..BBBBBB........
  40752c:	02020202 02020202 02020202 10101010     ................
  40753c:	00000020 00000000 00000000 00000000      ...............
	...

004075c0 <_init>:
  4075c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4075c2:	bf00      	nop
  4075c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4075c6:	bc08      	pop	{r3}
  4075c8:	469e      	mov	lr, r3
  4075ca:	4770      	bx	lr

004075cc <__init_array_start>:
  4075cc:	00403dd5 	.word	0x00403dd5

004075d0 <__frame_dummy_init_array_entry>:
  4075d0:	00400165                                e.@.

004075d4 <_fini>:
  4075d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4075d6:	bf00      	nop
  4075d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4075da:	bc08      	pop	{r3}
  4075dc:	469e      	mov	lr, r3
  4075de:	4770      	bx	lr

004075e0 <__fini_array_start>:
  4075e0:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sul_count_ms>:
2040000c:	01f4 0000                                   ....

20400010 <g_interrupt_enabled>:
20400010:	0001 0000                                   ....

20400014 <SystemCoreClock>:
20400014:	0900 003d                                   ..=.

20400018 <_impure_ptr>:
20400018:	0020 2040 0000 0000                          .@ ....

20400020 <impure_data>:
20400020:	0000 0000 030c 2040 0374 2040 03dc 2040     ......@ t.@ ..@ 
	...
204000c8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000d8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400448 <__atexit_recursive_mutex>:
20400448:	1658 2040                                   X.@ 

2040044c <__global_locale>:
2040044c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040046c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040048c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004ac:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004cc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004ec:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040050c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040052c:	6ba9 0040 5dd9 0040 0000 0000 74bc 0040     .k@..]@......t@.
2040053c:	73bc 0040 72e4 0040 72e4 0040 72e4 0040     .s@..r@..r@..r@.
2040054c:	72e4 0040 72e4 0040 72e4 0040 72e4 0040     .r@..r@..r@..r@.
2040055c:	72e4 0040 72e4 0040 ffff ffff ffff ffff     .r@..r@.........
2040056c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
20400594:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

204005b8 <__malloc_av_>:
	...
204005c0:	05b8 2040 05b8 2040 05c0 2040 05c0 2040     ..@ ..@ ..@ ..@ 
204005d0:	05c8 2040 05c8 2040 05d0 2040 05d0 2040     ..@ ..@ ..@ ..@ 
204005e0:	05d8 2040 05d8 2040 05e0 2040 05e0 2040     ..@ ..@ ..@ ..@ 
204005f0:	05e8 2040 05e8 2040 05f0 2040 05f0 2040     ..@ ..@ ..@ ..@ 
20400600:	05f8 2040 05f8 2040 0600 2040 0600 2040     ..@ ..@ ..@ ..@ 
20400610:	0608 2040 0608 2040 0610 2040 0610 2040     ..@ ..@ ..@ ..@ 
20400620:	0618 2040 0618 2040 0620 2040 0620 2040     ..@ ..@  .@  .@ 
20400630:	0628 2040 0628 2040 0630 2040 0630 2040     (.@ (.@ 0.@ 0.@ 
20400640:	0638 2040 0638 2040 0640 2040 0640 2040     8.@ 8.@ @.@ @.@ 
20400650:	0648 2040 0648 2040 0650 2040 0650 2040     H.@ H.@ P.@ P.@ 
20400660:	0658 2040 0658 2040 0660 2040 0660 2040     X.@ X.@ `.@ `.@ 
20400670:	0668 2040 0668 2040 0670 2040 0670 2040     h.@ h.@ p.@ p.@ 
20400680:	0678 2040 0678 2040 0680 2040 0680 2040     x.@ x.@ ..@ ..@ 
20400690:	0688 2040 0688 2040 0690 2040 0690 2040     ..@ ..@ ..@ ..@ 
204006a0:	0698 2040 0698 2040 06a0 2040 06a0 2040     ..@ ..@ ..@ ..@ 
204006b0:	06a8 2040 06a8 2040 06b0 2040 06b0 2040     ..@ ..@ ..@ ..@ 
204006c0:	06b8 2040 06b8 2040 06c0 2040 06c0 2040     ..@ ..@ ..@ ..@ 
204006d0:	06c8 2040 06c8 2040 06d0 2040 06d0 2040     ..@ ..@ ..@ ..@ 
204006e0:	06d8 2040 06d8 2040 06e0 2040 06e0 2040     ..@ ..@ ..@ ..@ 
204006f0:	06e8 2040 06e8 2040 06f0 2040 06f0 2040     ..@ ..@ ..@ ..@ 
20400700:	06f8 2040 06f8 2040 0700 2040 0700 2040     ..@ ..@ ..@ ..@ 
20400710:	0708 2040 0708 2040 0710 2040 0710 2040     ..@ ..@ ..@ ..@ 
20400720:	0718 2040 0718 2040 0720 2040 0720 2040     ..@ ..@  .@  .@ 
20400730:	0728 2040 0728 2040 0730 2040 0730 2040     (.@ (.@ 0.@ 0.@ 
20400740:	0738 2040 0738 2040 0740 2040 0740 2040     8.@ 8.@ @.@ @.@ 
20400750:	0748 2040 0748 2040 0750 2040 0750 2040     H.@ H.@ P.@ P.@ 
20400760:	0758 2040 0758 2040 0760 2040 0760 2040     X.@ X.@ `.@ `.@ 
20400770:	0768 2040 0768 2040 0770 2040 0770 2040     h.@ h.@ p.@ p.@ 
20400780:	0778 2040 0778 2040 0780 2040 0780 2040     x.@ x.@ ..@ ..@ 
20400790:	0788 2040 0788 2040 0790 2040 0790 2040     ..@ ..@ ..@ ..@ 
204007a0:	0798 2040 0798 2040 07a0 2040 07a0 2040     ..@ ..@ ..@ ..@ 
204007b0:	07a8 2040 07a8 2040 07b0 2040 07b0 2040     ..@ ..@ ..@ ..@ 
204007c0:	07b8 2040 07b8 2040 07c0 2040 07c0 2040     ..@ ..@ ..@ ..@ 
204007d0:	07c8 2040 07c8 2040 07d0 2040 07d0 2040     ..@ ..@ ..@ ..@ 
204007e0:	07d8 2040 07d8 2040 07e0 2040 07e0 2040     ..@ ..@ ..@ ..@ 
204007f0:	07e8 2040 07e8 2040 07f0 2040 07f0 2040     ..@ ..@ ..@ ..@ 
20400800:	07f8 2040 07f8 2040 0800 2040 0800 2040     ..@ ..@ ..@ ..@ 
20400810:	0808 2040 0808 2040 0810 2040 0810 2040     ..@ ..@ ..@ ..@ 
20400820:	0818 2040 0818 2040 0820 2040 0820 2040     ..@ ..@  .@  .@ 
20400830:	0828 2040 0828 2040 0830 2040 0830 2040     (.@ (.@ 0.@ 0.@ 
20400840:	0838 2040 0838 2040 0840 2040 0840 2040     8.@ 8.@ @.@ @.@ 
20400850:	0848 2040 0848 2040 0850 2040 0850 2040     H.@ H.@ P.@ P.@ 
20400860:	0858 2040 0858 2040 0860 2040 0860 2040     X.@ X.@ `.@ `.@ 
20400870:	0868 2040 0868 2040 0870 2040 0870 2040     h.@ h.@ p.@ p.@ 
20400880:	0878 2040 0878 2040 0880 2040 0880 2040     x.@ x.@ ..@ ..@ 
20400890:	0888 2040 0888 2040 0890 2040 0890 2040     ..@ ..@ ..@ ..@ 
204008a0:	0898 2040 0898 2040 08a0 2040 08a0 2040     ..@ ..@ ..@ ..@ 
204008b0:	08a8 2040 08a8 2040 08b0 2040 08b0 2040     ..@ ..@ ..@ ..@ 
204008c0:	08b8 2040 08b8 2040 08c0 2040 08c0 2040     ..@ ..@ ..@ ..@ 
204008d0:	08c8 2040 08c8 2040 08d0 2040 08d0 2040     ..@ ..@ ..@ ..@ 
204008e0:	08d8 2040 08d8 2040 08e0 2040 08e0 2040     ..@ ..@ ..@ ..@ 
204008f0:	08e8 2040 08e8 2040 08f0 2040 08f0 2040     ..@ ..@ ..@ ..@ 
20400900:	08f8 2040 08f8 2040 0900 2040 0900 2040     ..@ ..@ ..@ ..@ 
20400910:	0908 2040 0908 2040 0910 2040 0910 2040     ..@ ..@ ..@ ..@ 
20400920:	0918 2040 0918 2040 0920 2040 0920 2040     ..@ ..@  .@  .@ 
20400930:	0928 2040 0928 2040 0930 2040 0930 2040     (.@ (.@ 0.@ 0.@ 
20400940:	0938 2040 0938 2040 0940 2040 0940 2040     8.@ 8.@ @.@ @.@ 
20400950:	0948 2040 0948 2040 0950 2040 0950 2040     H.@ H.@ P.@ P.@ 
20400960:	0958 2040 0958 2040 0960 2040 0960 2040     X.@ X.@ `.@ `.@ 
20400970:	0968 2040 0968 2040 0970 2040 0970 2040     h.@ h.@ p.@ p.@ 
20400980:	0978 2040 0978 2040 0980 2040 0980 2040     x.@ x.@ ..@ ..@ 
20400990:	0988 2040 0988 2040 0990 2040 0990 2040     ..@ ..@ ..@ ..@ 
204009a0:	0998 2040 0998 2040 09a0 2040 09a0 2040     ..@ ..@ ..@ ..@ 
204009b0:	09a8 2040 09a8 2040 09b0 2040 09b0 2040     ..@ ..@ ..@ ..@ 

204009c0 <__malloc_sbrk_base>:
204009c0:	ffff ffff                                   ....

204009c4 <__malloc_trim_threshold>:
204009c4:	0000 0002                                   ....
